{
  "repair_begin": "2020-10-12 16:49:05.759766",
  "repair_end": "2020-10-12 16:59:50.704011",
  "patches": [
    {
      "target_file": "src/eval.i",
      "fix": "no repair found",
      "edits": [
        "680a681\n>   {\n693a695,696\n>   }\n>   return (-1);\n",
        "191a192\n>     {\n192a194,195\n> \n>     }\n",
        "917,929d916\n<     if (cake) {\n<       if (cake->__annonCompField1.car) {\n<         if ((unsigned int )(cake->__annonCompField1.car)->t == 1U) {\n<           tmp___5 = cgc_strlen(\"CAKE\");\n<           tmp___6 = cgc_strncmp((char const   *)(cake->__annonCompField1.car)->name,\n<                                 \"CAKE\", tmp___5);\n<           if (tmp___6 == 0) {\n<             if (cake) {\n<               if (cake->__annonCompField2.cdr) {\n<                 if ((unsigned int )(cake->__annonCompField2.cdr)->t == 3U) {\n<                   cake = cake->__annonCompField2.cdr;\n<                   goto __Cont;\n<                 } else {\n931,949d917\n<                 }\n<               } else {\n< \n<               }\n<             } else {\n< \n<             }\n<           } else {\n< \n<           }\n<         } else {\n< \n<         }\n<       } else {\n< \n<       }\n<     } else {\n< \n<     }\n972a941,971\n>   } else\n>   if (cake) {\n>     if (cake->__annonCompField1.car) {\n>       if ((unsigned int )(cake->__annonCompField1.car)->t == 1U) {\n>         tmp___5 = cgc_strlen(\"CAKE\");\n>         tmp___6 = cgc_strncmp((char const   *)(cake->__annonCompField1.car)->name,\n>                               \"CAKE\", tmp___5);\n>         if (tmp___6 == 0) {\n>           if (cake) {\n>             if (cake->__annonCompField2.cdr) {\n>               if ((unsigned int )(cake->__annonCompField2.cdr)->t == 3U) {\n>                 cake = cake->__annonCompField2.cdr;\n>                 goto __Cont__0;\n>               } else {\n> \n>               }\n>             } else {\n> \n>             }\n>           } else {\n> \n>           }\n>         } else {\n> \n>         }\n>       } else {\n> \n>       }\n>     } else {\n> \n>     }\n",
        "375c375\n<     list = list->next;\n---\n> \n"
      ]
    }
  ],
  "error": "cat: /etc/redhat-release: No such file or directory\nBug: BF(Liveness): stmtStartData is not initialized for 449: __Cont__0: /* CIL Label */ \n#line 328 \"/tmp/GenProg_SLUR_reference_implementation_0/SLUR_reference_implementation/src/eval.c\"\ncnt ++;\nLiveness failed on function:\n exp_t *cgc_lambda(exp_t *l , exp_t *e , sym_list *s ) \n{ \n  exptup_list *z ;\n  void *tmp ;\n  cgc_size_t n ;\n  exp_t *cur_bnd ;\n  exp_t *tmp___0 ;\n  exp_t *cur_arg ;\n  exp_t *tmp___1 ;\n  exptup_t *ele ;\n  void *tmp___2 ;\n  exp_t *sub ;\n  exp_t *tmp___3 ;\n  exp_t *ret ;\n  exp_t *tmp___4 ;\n  cgc_size_t cnt ;\n  exp_t *cake ;\n  cgc_size_t tmp___5 ;\n  int tmp___6 ;\n  exp_t *n___0 ;\n  void *tmp___7 ;\n  exp_t *a ;\n  void *tmp___8 ;\n\n  {\n   379: /* CIL Label */ \n#line 290\n  if (! l) {\n     380: /* CIL Label */ \n#line 291\n    return ((exp_t *)0);\n  } else\n   381: /* CIL Label */ \n#line 290\n  if (! e) {\n     382: /* CIL Label */ \n#line 291\n    return ((exp_t *)0);\n  } else\n   383: /* CIL Label */ \n#line 290\n  if (! s) {\n     384: /* CIL Label */ \n#line 291\n    return ((exp_t *)0);\n  } else {\n     385: /* CIL Label */ ;\n  }\n   386: /* CIL Label */ \n#line 295\n  tmp = cgc_malloc(sizeof(exptup_list ));\n   387: /* CIL Label */ \n#line 295\n  z = (exptup_list *)tmp;\n   388: /* CIL Label */ \n#line 296\n  if (! z) {\n     389: /* CIL Label */ \n#line 297\n    cgc_exit(1);\n  } else {\n     390: /* CIL Label */ ;\n  }\n   391: /* CIL Label */ \n#line 299\n  n = (cgc_size_t )0;\n   392: /* CIL Label */ \n#line 300\n  while (1) {\n     393: /* CIL Label */ \n#line 301\n    tmp___0 = get(n, l->__annonCompField1.bound_vars);\n     394: /* CIL Label */ \n#line 301\n    cur_bnd = tmp___0;\n     395: /* CIL Label */ \n#line 302\n    tmp___1 = get(n, e);\n     396: /* CIL Label */ \n#line 302\n    cur_arg = tmp___1;\n     397: /* CIL Label */ \n#line 303\n    if (! cur_bnd) {\n       398: /* CIL Label */ \n#line 303\n      if (! cur_arg) {\n         -399: /* CIL Label */ \n#line 304\n        break;\n      } else {\n         400: /* CIL Label */ ;\n      }\n    } else {\n       401: /* CIL Label */ ;\n    }\n     402: /* CIL Label */ \n#line 306\n    tmp___2 = cgc_malloc(sizeof(exptup_t ));\n     403: /* CIL Label */ \n#line 306\n    ele = (exptup_t *)tmp___2;\n     404: /* CIL Label */ \n#line 307\n    if (! ele) {\n       405: /* CIL Label */ \n#line 308\n      cgc_exit(1);\n    } else {\n       406: /* CIL Label */ ;\n    }\n     407: /* CIL Label */ \n#line 310\n    ele->fst = cur_bnd;\n     408: /* CIL Label */ \n#line 311\n    ele->snd = cur_arg;\n     409: /* CIL Label */ \n#line 312\n    if (! ele->fst) {\n       410: /* CIL Label */ \n#line 313\n      return ((exp_t *)0);\n    } else\n     411: /* CIL Label */ \n#line 312\n    if (! ele->snd) {\n       412: /* CIL Label */ \n#line 313\n      return ((exp_t *)0);\n    } else {\n       413: /* CIL Label */ ;\n    }\n     414: /* CIL Label */ \n#line 316\n    exptup_list_append(z, ele);\n     415: /* CIL Label */ \n#line 317\n    n ++;\n  }\n   416: /* CIL Label */ \n#line 320\n  tmp___3 = cgc_subst(z->next, l->__annonCompField2.exp);\n   417: /* CIL Label */ \n#line 320\n  sub = tmp___3;\n   418: /* CIL Label */ \n#line 321\n  tmp___4 = cgc_eval(sub, s);\n   419: /* CIL Label */ \n#line 321\n  ret = tmp___4;\n   420: /* CIL Label */ \n#line 323\n  if (! ret) {\n     421: /* CIL Label */ \n#line 324\n    return ((exp_t *)0);\n  } else {\n     422: /* CIL Label */ ;\n  }\n   423: /* CIL Label */ \n#line 326\n  cnt = (cgc_size_t )0;\n   424: /* CIL Label */ \n#line 327\n  cake = ret;\n   425: /* CIL Label */ \n#line 328\n  cnt = (cgc_size_t )0;\n   426: /* CIL Label */ \n#line 328\n  while (1) {\n     427: /* CIL Label */ \n#line 328\n    if (cnt < 4UL) {\n       428: /* CIL Label */ ;\n    } else {\n       -429: /* CIL Label */ \n#line 328\n      break;\n    }\n     0: /* CIL Label */ ;\n     -448: /* CIL Label */ \n#line 336\n    break;\n     449: /* CIL Label */ \n    __Cont: /* CIL Label */ \n#line 328\n    cnt ++;\n  }\n   450: /* CIL Label */ \n#line 339\n  if (cnt == 4UL) {\n     451: /* CIL Label */ \n#line 340\n    tmp___7 = cgc_calloc((cgc_size_t )1, sizeof(exp_t ));\n     452: /* CIL Label */ \n#line 340\n    n___0 = (exp_t *)tmp___7;\n     453: /* CIL Label */ \n#line 341\n    tmp___8 = cgc_calloc((cgc_size_t )1, sizeof(exp_t ));\n     454: /* CIL Label */ \n#line 341\n    a = (exp_t *)tmp___8;\n     455: /* CIL Label */ \n#line 342\n    if (! n___0) {\n       456: /* CIL Label */ \n#line 343\n      cgc_exit(1);\n    } else\n     457: /* CIL Label */ \n#line 342\n    if (! a) {\n       458: /* CIL Label */ \n#line 343\n      cgc_exit(1);\n    } else {\n       459: /* CIL Label */ ;\n    }\n     460: /* CIL Label */ \n#line 345\n    a->t = (enum exp_type )1;\n     461: /* CIL Label */ \n#line 346\n    a->name = (char *)\"That\\'s a lot of CAKE!\";\n     462: /* CIL Label */ \n#line 347\n    n___0->t = (enum exp_type )3;\n     463: /* CIL Label */ \n#line 348\n    n___0->__annonCompField1.car = a;\n     464: /* CIL Label */ \n#line 349\n    n___0->__annonCompField2.cdr = (struct exp_t *)0;\n     465: /* CIL Label */ \n#line 354\n    (cake->__annonCompField2.cdr)->__annonCompField2.cdr = n___0;\n  } else\n   0: /* CIL Label */ \n#line 329\n  if (cake) {\n     0: /* CIL Label */ \n#line 329\n    if (cake->__annonCompField1.car) {\n       0: /* CIL Label */ \n#line 329\n      if ((unsigned int )(cake->__annonCompField1.car)->t == 1U) {\n         0: /* CIL Label */ \n#line 329\n        tmp___5 = cgc_strlen(\"CAKE\");\n         0: /* CIL Label */ \n#line 329\n        tmp___6 = cgc_strncmp((char const   *)(cake->__annonCompField1.car)->name,\n                              \"CAKE\", tmp___5);\n         0: /* CIL Label */ \n#line 329\n        if (tmp___6 == 0) {\n           0: /* CIL Label */ \n#line 330\n          if (cake) {\n             0: /* CIL Label */ \n#line 330\n            if (cake->__annonCompField2.cdr) {\n               0: /* CIL Label */ \n#line 330\n              if ((unsigned int )(cake->__annonCompField2.cdr)->t == 3U) {\n                 0: /* CIL Label */ \n#line 331\n                cake = cake->__annonCompField2.cdr;\n                 0: /* CIL Label */ \n#line 332\n                goto __Cont__0;\n              } else {\n                 0: /* CIL Label */ ;\n              }\n            } else {\n               0: /* CIL Label */ ;\n            }\n          } else {\n             0: /* CIL Label */ ;\n          }\n        } else {\n           0: /* CIL Label */ ;\n        }\n      } else {\n         0: /* CIL Label */ ;\n      }\n    } else {\n       0: /* CIL Label */ ;\n    }\n  } else {\n     0: /* CIL Label */ ;\n  }\n   467: /* CIL Label */ \n#line 358\n  return (ret);\n}\n}\n\n"
}