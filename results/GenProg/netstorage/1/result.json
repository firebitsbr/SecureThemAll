{
  "repair_begin": "2020-09-18 03:04:32.596495",
  "repair_end": "2020-09-18 03:14:34.182379",
  "patches": [
    {
      "target_file": "src/memcpy_fast.i",
      "fix": "",
      "edits": [
        "124,127d123\n<   } else\n<   if ((intptr_t )src % 16U) {\n<     tmp = cgc_memcpy(dst, (void const   *)src, length);\n<     return (tmp);\n",
        "117,130c117\n<   if (length % 16UL) {\n<     tmp = cgc_memcpy(dst, (void const   *)src, length);\n<     return (tmp);\n<   } else\n<   if ((intptr_t )dst % 16U) {\n<     tmp = cgc_memcpy(dst, (void const   *)src, length);\n<     return (tmp);\n<   } else\n<   if ((intptr_t )src % 16U) {\n<     tmp = cgc_memcpy(dst, (void const   *)src, length);\n<     return (tmp);\n<   } else {\n< \n<   }\n---\n>   *((uint128_t *)dst + i) = *((uint128_t *)src + i);\n133c120,133\n<     *((uint128_t *)dst + i) = *((uint128_t *)src + i);\n---\n>     if (length % 16UL) {\n>       tmp = cgc_memcpy(dst, (void const   *)src, length);\n>       return (tmp);\n>     } else\n>     if ((intptr_t )dst % 16U) {\n>       tmp = cgc_memcpy(dst, (void const   *)src, length);\n>       return (tmp);\n>     } else\n>     if ((intptr_t )src % 16U) {\n>       tmp = cgc_memcpy(dst, (void const   *)src, length);\n>       return (tmp);\n>     } else {\n> \n>     }\n",
        "132,140c132\n<   while (1) {\n<     *((uint128_t *)dst + i) = *((uint128_t *)src + i);\n<     i ++;\n<     if (i < length / 16UL) {\n< \n<     } else {\n<       break;\n<     }\n<   }\n---\n>   *((uint128_t *)dst + i) = *((uint128_t *)src + i);\n",
        "120,127d119\n<   } else\n<   if ((intptr_t )dst % 16U) {\n<     tmp = cgc_memcpy(dst, (void const   *)src, length);\n<     return (tmp);\n<   } else\n<   if ((intptr_t )src % 16U) {\n<     tmp = cgc_memcpy(dst, (void const   *)src, length);\n<     return (tmp);\n128a121,129\n>     {\n>     if ((intptr_t )dst % 16U) {\n>       tmp = cgc_memcpy(dst, (void const   *)src, length);\n>       return (tmp);\n>     } else\n>     if ((intptr_t )src % 16U) {\n>       tmp = cgc_memcpy(dst, (void const   *)src, length);\n>       return (tmp);\n>     } else {\n129a131,141\n>     }\n>     while (1) {\n>       *((uint128_t *)dst + i) = *((uint128_t *)src + i);\n>       i ++;\n>       if (i < length / 16UL) {\n> \n>       } else {\n>         break;\n>       }\n>     }\n>     }\n",
        "131a132\n>   {\n139a141,142\n>   }\n> \n",
        "131c131\n<   i = (cgc_size_t )0;\n---\n> \n",
        "124,127d123\n<   } else\n<   if ((intptr_t )src % 16U) {\n<     tmp = cgc_memcpy(dst, (void const   *)src, length);\n<     return (tmp);\n128a125,129\n>     {\n>     if ((intptr_t )src % 16U) {\n>       tmp = cgc_memcpy(dst, (void const   *)src, length);\n>       return (tmp);\n>     } else {\n129a131,133\n>     }\n>     return (dst);\n>     }\n",
        "120,127d119\n<   } else\n<   if ((intptr_t )dst % 16U) {\n<     tmp = cgc_memcpy(dst, (void const   *)src, length);\n<     return (tmp);\n<   } else\n<   if ((intptr_t )src % 16U) {\n<     tmp = cgc_memcpy(dst, (void const   *)src, length);\n<     return (tmp);\n128a121,129\n>     {\n>     if ((intptr_t )dst % 16U) {\n>       tmp = cgc_memcpy(dst, (void const   *)src, length);\n>       return (tmp);\n>     } else\n>     if ((intptr_t )src % 16U) {\n>       tmp = cgc_memcpy(dst, (void const   *)src, length);\n>       return (tmp);\n>     } else {\n129a131,138\n>     }\n>     if ((intptr_t )src % 16U) {\n>       tmp = cgc_memcpy(dst, (void const   *)src, length);\n>       return (tmp);\n>     } else {\n> \n>     }\n>     }\n",
        "119c119,127\n<     return (tmp);\n---\n>     while (1) {\n>       *((uint128_t *)dst + i) = *((uint128_t *)src + i);\n>       i ++;\n>       if (i < length / 16UL) {\n> \n>       } else {\n>         break;\n>       }\n>     }\n132,140c140\n<   while (1) {\n<     *((uint128_t *)dst + i) = *((uint128_t *)src + i);\n<     i ++;\n<     if (i < length / 16UL) {\n< \n<     } else {\n<       break;\n<     }\n<   }\n---\n>   return (tmp);\n",
        "133c133\n<     *((uint128_t *)dst + i) = *((uint128_t *)src + i);\n---\n> \n",
        "120,127d119\n<   } else\n<   if ((intptr_t )dst % 16U) {\n<     tmp = cgc_memcpy(dst, (void const   *)src, length);\n<     return (tmp);\n<   } else\n<   if ((intptr_t )src % 16U) {\n<     tmp = cgc_memcpy(dst, (void const   *)src, length);\n<     return (tmp);\n128a121,129\n>     {\n>     if ((intptr_t )dst % 16U) {\n>       tmp = cgc_memcpy(dst, (void const   *)src, length);\n>       return (tmp);\n>     } else\n>     if ((intptr_t )src % 16U) {\n>       tmp = cgc_memcpy(dst, (void const   *)src, length);\n>       return (tmp);\n>     } else {\n129a131,133\n>     }\n>     tmp = cgc_memcpy(dst, (void const   *)src, length);\n>     }\n",
        "120,127d119\n<   } else\n<   if ((intptr_t )dst % 16U) {\n<     tmp = cgc_memcpy(dst, (void const   *)src, length);\n<     return (tmp);\n<   } else\n<   if ((intptr_t )src % 16U) {\n<     tmp = cgc_memcpy(dst, (void const   *)src, length);\n<     return (tmp);\n",
        "131a132\n>   {\n139a141,150\n>   }\n>   while (1) {\n>     *((uint128_t *)dst + i) = *((uint128_t *)src + i);\n>     i ++;\n>     if (i < length / 16UL) {\n> \n>     } else {\n>       break;\n>     }\n>   }\n",
        "128a129\n>     {\n129a131,132\n>     return (tmp);\n>     }\n",
        "119c119,124\n<     return (tmp);\n---\n>     if ((intptr_t )src % 16U) {\n>       tmp = cgc_memcpy(dst, (void const   *)src, length);\n>       return (tmp);\n>     } else {\n> \n>     }\n124,127d128\n<   } else\n<   if ((intptr_t )src % 16U) {\n<     tmp = cgc_memcpy(dst, (void const   *)src, length);\n<     return (tmp);\n129c130\n< \n---\n>     return (tmp);\n",
        "132,135d131\n<   while (1) {\n<     *((uint128_t *)dst + i) = *((uint128_t *)src + i);\n<     i ++;\n<     if (i < length / 16UL) {\n137,140d132\n<     } else {\n<       break;\n<     }\n<   }\n",
        "134a135\n>     {\n138a140,150\n>     }\n>     if ((intptr_t )dst % 16U) {\n>       tmp = cgc_memcpy(dst, (void const   *)src, length);\n>       return (tmp);\n>     } else\n>     if ((intptr_t )src % 16U) {\n>       tmp = cgc_memcpy(dst, (void const   *)src, length);\n>       return (tmp);\n>     } else {\n> \n>     }\n",
        "116a117\n>   {\n129a131,137\n>   }\n>   if ((intptr_t )src % 16U) {\n>     tmp = cgc_memcpy(dst, (void const   *)src, length);\n>     return (tmp);\n>   } else {\n> \n>   }\n",
        "116a117\n>   {\n129a131,132\n>   }\n>   *((uint128_t *)dst + i) = *((uint128_t *)src + i);\n"
      ]
    }
  ]
}