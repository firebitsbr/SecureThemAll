{
  "repair_begin": "2020-10-23 22:55:43.820419",
  "repair_end": "2020-10-23 23:02:43.177802",
  "patches": [
    {
      "target_file": "src/expression_parser.i",
      "fix": "318c318\n<       return ((eParserSymbol )12);\n---\n>       return (g_parseTable[symIndex].symbol);\n328c328\n<       return (g_parseTable[symIndex].symbol);\n---\n>       return ((eParserSymbol )12);\n",
      "edits": [
        "884d883\n<           if ((unsigned int )item_peek_top___0.data.symbol == 0U) {\n886,888d884\n<           } else {\n<             goto _L;\n<           }\n",
        "872c872\n<         pszCur ++;\n---\n> \n",
        "315a316\n>     {\n320a322,323\n>     }\n>     return (cgc_g_memoryGlobal.parseStack[cgc_g_parseStackSize]);\n",
        "835,839d834\n<         if ((int )*pszCur != 34) {\n<           tmp___5 = cgc_get_current_exception_frame();\n<           longjmp(tmp___5->jmpBuffer, 2);\n<           return;\n<         } else {\n841d835\n<         }\n",
        "318c318\n<       return ((eParserSymbol )12);\n---\n>       return (g_parseTable[symIndex].symbol);\n328c328\n<       return (g_parseTable[symIndex].symbol);\n---\n>       return ((eParserSymbol )12);\n",
        "316a317\n>       {\n317a319,320\n> \n>       }\n",
        "828d827\n<           if (tmp___4) {\n830,832d828\n<           } else {\n<             break;\n<           }\n",
        "959a960\n>                 {\n960a962,963\n> \n>                 }\n",
        "519,542d518\n<   while (index < record_total) {\n<     tmp___0 = cgc_db_search_index(index);\n<     pCur = tmp___0;\n<     add_item = 0;\n<     switch ((unsigned int )object_type) {\n<     case 10U: \n<     comparison_result = cgc_strcmp(pCur->szUserName, pszSearchString);\n<     break;\n<     case 9U: \n<     comparison_result = cgc_strcmp(pCur->szFirstName, pszSearchString);\n<     break;\n<     case 8U: \n<     comparison_result = cgc_strcmp(pCur->szLastName, pszSearchString);\n<     break;\n<     default: \n<     tmp___1 = cgc_get_current_exception_frame();\n<     longjmp(tmp___1->jmpBuffer, 1);\n<     break;\n<     }\n<     switch ((unsigned int )comparison_symbol) {\n<     case 4U: \n<     if (comparison_result == -1) {\n<       add_item = 1;\n<     } else {\n544,580d519\n<     }\n<     break;\n<     case 5U: \n<     if (comparison_result == 1) {\n<       add_item = 1;\n<     } else {\n< \n<     }\n<     break;\n<     case 2U: \n<     if (comparison_result == 0) {\n<       add_item = 1;\n<     } else {\n< \n<     }\n<     break;\n<     case 3U: \n<     if (comparison_result != 0) {\n<       add_item = 1;\n<     } else {\n< \n<     }\n<     break;\n<     default: \n<     tmp___2 = cgc_get_current_exception_frame();\n<     longjmp(tmp___2->jmpBuffer, 1);\n<     break;\n<     }\n<     if (add_item) {\n<       tmp___3 = results.result_list_size;\n<       results.result_list_size = (uint8_t )((int )results.result_list_size + 1);\n<       results.data.result_list[tmp___3] = (uint8_t )index;\n<     } else {\n< \n<     }\n<     index ++;\n<   }\n",
        "317a318\n>       {\n318a320,321\n> \n>       }\n",
        "858,862c858\n<           if (cur_pos >= 128U) {\n<             break;\n<           } else {\n< \n<           }\n---\n>           tmp___24 = cgc_is_symbol_close_paran(cur_symbol);\n909c905,909\n<         tmp___24 = cgc_is_symbol_close_paran(cur_symbol);\n---\n>         if (cur_pos >= 128U) {\n>           break;\n>         } else {\n> \n>         }\n",
        "989a990\n>               {\n990a992,1196\n>               if (tmp___26) {\n>                 tmp = cgc_pop_parser_stack();\n>                 item_peek_top = tmp;\n>                 if ((unsigned int )item_peek_top.type != 0U) {\n>                   tmp___0 = cgc_get_current_exception_frame();\n>                   longjmp(tmp___0->jmpBuffer, 2);\n>                   return;\n>                 } else {\n>                   tmp___1 = cgc_is_symbol_element(item_peek_top.data.symbol);\n>                   if (tmp___1) {\n> \n>                   } else {\n>                     tmp___0 = cgc_get_current_exception_frame();\n>                     longjmp(tmp___0->jmpBuffer, 2);\n>                     return;\n>                   }\n>                 }\n>                 if ((unsigned int )item_peek_top.data.symbol == 11U) {\n>                   tmp___2 = cgc_parse_date((char const   *)pszCur, & tempDate);\n>                   result = tmp___2;\n>                   if (result == 0) {\n>                     tmp___3 = cgc_get_current_exception_frame();\n>                     longjmp(tmp___3->jmpBuffer, 2);\n>                     return;\n>                   } else {\n> \n>                   }\n>                   pszCur += result;\n>                   cgc_do_date_search(cur_symbol, tempDate);\n>                 } else {\n>                   while (1) {\n>                     tmp___4 = cgc_isspace((int )*pszCur);\n>                     if (tmp___4) {\n> \n>                     } else {\n>                       break;\n>                     }\n>                     pszCur ++;\n>                   }\n>                   if ((int )*pszCur != 34) {\n>                     tmp___5 = cgc_get_current_exception_frame();\n>                     longjmp(tmp___5->jmpBuffer, 2);\n>                     return;\n>                   } else {\n> \n>                   }\n>                   pszCur ++;\n>                   cur_pos = (uint32_t )0;\n>                   while (1) {\n>                     if (*pszCur) {\n>                       if ((int )*pszCur != 34) {\n> \n>                       } else {\n>                         break;\n>                       }\n>                     } else {\n>                       break;\n>                     }\n>                     tmp___6 = cur_pos;\n>                     cur_pos ++;\n>                     szTemp[tmp___6] = *pszCur;\n>                     pszCur ++;\n>                     if (cur_pos >= 128U) {\n>                       break;\n>                     } else {\n> \n>                     }\n>                   }\n>                   szTemp[cur_pos] = (char )'\\000';\n>                   if ((unsigned long )pszCur == (unsigned long )((char *)0)) {\n>                     tmp___7 = cgc_get_current_exception_frame();\n>                     longjmp(tmp___7->jmpBuffer, 2);\n>                     return;\n>                   } else {\n> \n>                   }\n>                   pszCur ++;\n>                   cgc_do_string_search(item_peek_top.data.symbol, cur_symbol,\n>                                        szTemp);\n>                 }\n>               } else {\n>                 tmp___25 = cgc_is_symbol_open_paran(cur_symbol);\n>                 if (tmp___25) {\n>                   tmp___8 = cgc_peek_parser_stack();\n>                   item_peek_top___0 = tmp___8;\n>                   if ((unsigned int )item_peek_top___0.type == 2U) {\n> \n>                   } else\n>                   if ((unsigned int )item_peek_top___0.type == 0U) {\n>                     if ((unsigned int )item_peek_top___0.data.symbol == 0U) {\n> \n>                     } else {\n>                       goto _L__0;\n>                     }\n>                   } else\n>                   _L__0: /* CIL Label */ \n>                   if ((unsigned int )item_peek_top___0.type == 0U) {\n>                     tmp___10 = cgc_is_symbol_result_operator(item_peek_top___0.data.symbol);\n>                     if (tmp___10) {\n> \n>                     } else {\n>                       tmp___9 = cgc_get_current_exception_frame();\n>                       longjmp(tmp___9->jmpBuffer, 2);\n>                       return;\n>                     }\n>                   } else {\n>                     tmp___9 = cgc_get_current_exception_frame();\n>                     longjmp(tmp___9->jmpBuffer, 2);\n>                     return;\n>                   }\n>                   new_item.type = (eItemType )0;\n>                   new_item.data.symbol = cur_symbol;\n>                   cgc_push_parser_stack(new_item);\n>                 } else {\n>                   tmp___24 = cgc_is_symbol_close_paran(cur_symbol);\n>                   if (tmp___24) {\n>                     tmp___11 = cgc_pop_parser_stack();\n>                     item_top = tmp___11;\n>                     if ((unsigned int )item_top.type != 1U) {\n>                       tmp___12 = cgc_get_current_exception_frame();\n>                       longjmp(tmp___12->jmpBuffer, 2);\n>                       return;\n>                     } else {\n> \n>                     }\n>                     tmp___13 = cgc_pop_parser_stack();\n>                     item_next = tmp___13;\n>                     if ((unsigned int )item_next.type == 0U) {\n>                       if ((unsigned int )item_next.data.symbol == 0U) {\n> \n>                       } else {\n>                         tmp___14 = cgc_get_current_exception_frame();\n>                         longjmp(tmp___14->jmpBuffer, 2);\n>                         return;\n>                       }\n>                     } else {\n>                       tmp___14 = cgc_get_current_exception_frame();\n>                       longjmp(tmp___14->jmpBuffer, 2);\n>                       return;\n>                     }\n>                     cgc_push_parser_stack(item_top);\n>                   } else {\n>                     tmp___23 = cgc_is_symbol_result_operator(cur_symbol);\n>                     if (tmp___23) {\n>                       tmp___15 = cgc_peek_parser_stack();\n>                       item_peek_top___1 = tmp___15;\n>                       if (! ((unsigned int )item_peek_top___1.type == 1U)) {\n>                         tmp___16 = cgc_get_current_exception_frame();\n>                         longjmp(tmp___16->jmpBuffer, 2);\n>                         return;\n>                       } else {\n> \n>                       }\n>                       new_item___0.type = (eItemType )0;\n>                       new_item___0.data.symbol = cur_symbol;\n>                       cgc_push_parser_stack(new_item___0);\n>                     } else {\n>                       tmp___22 = cgc_is_symbol_element(cur_symbol);\n>                       if (tmp___22) {\n>                         tmp___17 = cgc_peek_parser_stack();\n>                         item_peek_top___2 = tmp___17;\n>                         if ((unsigned int )item_peek_top___2.type == 2U) {\n> \n>                         } else\n>                         if ((unsigned int )item_peek_top___2.type == 0U) {\n>                           tmp___19 = cgc_is_symbol_open_paran(item_peek_top___2.data.symbol);\n>                           if (tmp___19) {\n> \n>                           } else {\n>                             goto _L___0__0;\n>                           }\n>                         } else\n>                         _L___0__0: /* CIL Label */ \n>                         if ((unsigned int )item_peek_top___2.type == 0U) {\n>                           tmp___20 = cgc_is_symbol_result_operator(item_peek_top___2.data.symbol);\n>                           if (tmp___20) {\n> \n>                           } else {\n>                             tmp___18 = cgc_get_current_exception_frame();\n>                             longjmp(tmp___18->jmpBuffer, 2);\n>                             return;\n>                           }\n>                         } else {\n>                           tmp___18 = cgc_get_current_exception_frame();\n>                           longjmp(tmp___18->jmpBuffer, 2);\n>                           return;\n>                         }\n>                         new_item___1.type = (eItemType )0;\n>                         new_item___1.data.symbol = cur_symbol;\n>                         cgc_push_parser_stack(new_item___1);\n>                       } else\n>                       if ((unsigned int )cur_symbol == 13U) {\n>                         bDone = 1;\n>                       } else\n>                       if ((unsigned int )cur_symbol == 12U) {\n>                         tmp___21 = cgc_get_current_exception_frame();\n>                         longjmp(tmp___21->jmpBuffer, 2);\n>                       } else {\n> \n>                       }\n>                     }\n>                   }\n>                 }\n>               }\n>               }\n",
        "318c318\n<       return ((eParserSymbol )12);\n---\n> \n661c661,666\n<     while (rval_idx___0 < record_rval_count___0) {\n---\n>     while (1) {\n>       if (rval_idx___0 < record_rval_count___0) {\n>         return ((eParserSymbol )12);\n>       } else {\n>         break;\n>       }\n"
      ]
    }
  ],
  "comps": 14,
  "failed_comps": 2,
  "passed_tests": 82,
  "failed_tests": 16,
  "duration": 419.357383,
  "error": "cat: /etc/redhat-release: No such file or directory\n"
}