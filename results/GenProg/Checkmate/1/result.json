{
  "repair_begin": "2020-09-17 23:54:26.118508",
  "repair_end": "2020-09-18 00:04:29.892853",
  "patches": [
    {
      "target_file": "src/service.i",
      "fix": "",
      "edits": [
        "221,225c221\n<   while (i < 1024U) {\n<     tmp = cgc_get_flag_byte((cgc_size_t )i);\n<     ret ^= (unsigned int )tmp;\n<     i ++;\n<   }\n---\n> \n",
        "311c311\n<       cur_player = (enum color )1;\n---\n> \n",
        "274a275\n>       {\n275a277,282\n>       if (tmp___0 == 0) {\n>         break;\n>       } else {\n> \n>       }\n>       }\n",
        "250c250\n<       cur_player = (enum color )0;\n---\n> \n",
        "261c261\n<     cgc_printf(\"%s>%s \", tmp, \"\\033[0m\");\n---\n> \n",
        "246c246\n<   cgc_seed_ai(& ai_state);\n---\n> \n",
        "222c222\n<     tmp = cgc_get_flag_byte((cgc_size_t )i);\n---\n> \n",
        "283,286d282\n<       if ((int )result == -1) {\n<         cgc_printf(\"INVALID MOVE!\\n\");\n<         continue;\n<       } else {\n288d283\n<       }\n",
        "282a283\n>       {\n287a289,294\n>       }\n>       if ((unsigned int )cur_player == 0U) {\n>         cur_player = (enum color )1;\n>       } else {\n>         cur_player = (enum color )0;\n>       }\n",
        "265a266\n>     {\n269a271,272\n>     }\n>     tmp___1 = cgc_parse_san(& board, cur_player, buf, & move);\n",
        "292c292\n<     tmp___2 = calculate_csum((unsigned int )result);\n---\n> \n",
        "218a219\n>   {\n219a221,222\n> \n>   }\n",
        "261a262\n>     {\n262a264,269\n>     if ((unsigned int )cur_player == 0U) {\n>       tmp = \"\\033[1;36m\";\n>     } else {\n>       tmp = \"\\033[0;35m\";\n>     }\n>     }\n",
        "247,315c247\n<   while (1) {\n<     if (gameover) {\n<       cgc_init_bitboard(& board);\n<       cur_player = (enum color )0;\n<       gameover = 0;\n<     } else {\n< \n<     }\n<     cgc_print_bitboard(& board, cur_player);\n<     if ((unsigned int )cur_player == 0U) {\n<       tmp = \"\\033[1;36m\";\n<     } else {\n<       tmp = \"\\033[0;35m\";\n<     }\n<     cgc_printf(\"%s>%s \", tmp, \"\\033[0m\");\n<     cgc_fflush(cgc_stdout);\n<     cgc_fread_until((void *)((unsigned char *)(buf)), (unsigned char )'\\n',\n<                     sizeof(buf), cgc_stdin);\n<     p = cgc_strchr(buf, '\\n');\n<     if ((unsigned long )p != (unsigned long )((char *)0)) {\n<       *p = (char )'\\000';\n<     } else {\n<       continue;\n<     }\n<     tmp___0 = cgc_strcmp((char const   *)(buf), \"quit\");\n<     if (tmp___0 == 0) {\n<       break;\n<     } else {\n< \n<     }\n<     tmp___1 = cgc_parse_san(& board, cur_player, buf, & move);\n<     if (tmp___1 != 0) {\n<       cgc_printf(\"INVALID MOVE!\\n\");\n<       continue;\n<     } else {\n<       result = cgc_make_move(& board, & move);\n<       if ((int )result == -1) {\n<         cgc_printf(\"INVALID MOVE!\\n\");\n<         continue;\n<       } else {\n< \n<       }\n<     }\n<     cgc_printf(\"\\n\");\n<     cgc_printf((char const   *)(buf));\n<     tmp___2 = calculate_csum((unsigned int )result);\n<     cgc_printf(\"\\n%x\\n\", tmp___2);\n<     switch ((int )result) {\n<     case 1: \n<     cgc_printf(\"CHECK!\\n\");\n<     break;\n<     case 2: \n<     cgc_printf(\"CHECKMATE!\\n\");\n<     gameover = 1;\n<     break;\n<     case 3: \n<     cgc_printf(\"STALEMATE!\\n\");\n<     gameover = 1;\n<     break;\n<     default: \n<     case 0: \n<     break;\n<     }\n<     if ((unsigned int )cur_player == 0U) {\n<       cur_player = (enum color )1;\n<     } else {\n<       cur_player = (enum color )0;\n<     }\n<   }\n---\n>   cgc_print_bitboard(& board, cur_player);\n",
        "256,260c256\n<     if ((unsigned int )cur_player == 0U) {\n<       tmp = \"\\033[1;36m\";\n<     } else {\n<       tmp = \"\\033[0;35m\";\n<     }\n---\n> \n",
        "281a282\n>       {\n282a284,285\n>       cur_player = (enum color )0;\n>       }\n",
        "277a278,281\n>     cgc_printf(\"\\n%x\\n\", tmp___2);\n>     cgc_printf(\"\\n\");\n>     cgc_printf((char const   *)(buf));\n>     tmp___2 = calculate_csum((unsigned int )result);\n290,293d293\n<     cgc_printf(\"\\n\");\n<     cgc_printf((char const   *)(buf));\n<     tmp___2 = calculate_csum((unsigned int )result);\n<     cgc_printf(\"\\n%x\\n\", tmp___2);\n",
        "253c253\n< \n---\n>       cur_player = (enum color )1;\n311c311\n<       cur_player = (enum color )1;\n---\n> \n",
        "286a287\n>         {\n287a289,290\n>         cur_player = (enum color )1;\n>         }\n",
        "310,314c310\n<     if ((unsigned int )cur_player == 0U) {\n<       cur_player = (enum color )1;\n<     } else {\n<       cur_player = (enum color )0;\n<     }\n---\n> \n",
        "249c249\n<       cgc_init_bitboard(& board);\n---\n>       p = cgc_strchr(buf, '\\n');\n265c265\n<     p = cgc_strchr(buf, '\\n');\n---\n>     cgc_init_bitboard(& board);\n",
        "250c250\n<       cur_player = (enum color )0;\n---\n>       cgc_fflush(cgc_stdout);\n262c262\n<     cgc_fflush(cgc_stdout);\n---\n>     cur_player = (enum color )0;\n",
        "292a293\n>     {\n293a295,296\n>     tmp___2 = calculate_csum((unsigned int )result);\n>     }\n",
        "248,252d247\n<     if (gameover) {\n<       cgc_init_bitboard(& board);\n<       cur_player = (enum color )0;\n<       gameover = 0;\n<     } else {\n254d248\n<     }\n",
        "225a226\n>   {\n226a228,229\n> \n>   }\n",
        "289a290\n>     {\n290a292,293\n>     return (0);\n>     }\n"
      ]
    }
  ]
}