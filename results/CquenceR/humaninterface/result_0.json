{
  "repair_begin": "2020-10-23 18:53:58.260933",
  "repair_end": "2020-10-23 18:54:56.557554",
  "patches": [
    {
      "target_file": "src/session.c",
      "fix": "no repair found",
      "edits": [
        "250a251,255\n> if ( req -> config[resp_offset < req ) { \n> return / ; \n> \n>  } \n> \n",
        "250a251,254\n> if ( req < 0 || ch -> remote_mtu > req ) { \n> return / ; \n>  } \n> \n",
        "250a251,254\n> if ( ! cmd & resp ) { \n>  ( ch ) ; \n> return - EINVAL ; \n>  } \n",
        "250a251,254\n> if ( req -> config[resp_offset < req / req ) { \n> return - EINVAL ; \n>  } \n> \n",
        "250a251,253\n> if ( req -> config[resp_offset == mtu && ch -> hdr + 1 ) \n> return 0 ; \n> \n",
        "250a251,255\n> if ( ! short & resp ) { \n>  ( ch ) ; \n> return - EINVAL ; \n>  } \n> \n",
        "250a251\n> { \t \n",
        "250a251,254\n> if ( ! short & resp ) { \n>  ( ch ) ; \n> return - EINVAL ; \n>  } \n",
        "250a251,254\n> if ( req -> remote_mtu == mtu && ch -> config_state > req ) { \n> return / ; \n>  } \n> \n",
        "250a251,252\n> \n> \n",
        "250a251,254\n> if ( req < 0 || req -> remote_mtu > req ) { \n> return / ; \n>  } \n> \n",
        "250a251,255\n> if ( req < 0 || ch -> remote_mtu > req ) { \n> return / ; \n> \n>  } \n> \n",
        "250a251,255\n> if ( req -> config[resp_offset < req || ch -> config_state > req ) { \n> return / ; \n> \n>  } \n> \n",
        "250a251\n> \t \n",
        "250a251,252\n> \t if ( req ( cmd ) ) \n> \t \t \n",
        "250a251,254\n> if ( ! cmd & resp ) { \n> return / ; \n>  } \n> \n",
        "250a251,255\n> if ( req < 0 || req -> remote_mtu > req ) { \n> return / ; \n> \n>  } \n> \n",
        "250a251,255\n> if ( req -> config[resp_offset < req || cmd -> hdr > req ) { \n> return / ; \n> \n>  } \n> \n",
        "250a251,254\n> if ( req -> config[resp_offset < req || ch -> config_state > req ) { \n> return - EINVAL ; \n>  } \n> \n",
        "250a251,254\n> if ( req -> config[resp_offset < req / req ) { \n> return / ; \n>  } \n> \n",
        "250a251,255\n> if ( req -> config[resp_offset < req || ch -> cmd > req ) { \n> return / ; \n> \n>  } \n> \n",
        "250a251,255\n> if ( ! cmd & resp ) { \n>  ( ch ) ; \n> return - EINVAL ; \n>  } \n> \n",
        "250a251,253\n> if ( req ( cmd ) ) \n> break ; \n> \n",
        "250a251,255\n> if ( req -> config[resp_offset < req / req ) { \n>  ( ch ) ; \n> return - EINVAL ; \n>  } \n> \n",
        "250a251\n> unsigned \n",
        "250a251,255\n> if ( req -> config[resp_offset < req || req -> remote_mtu > req ) { \n> return / ; \n> \n>  } \n> \n",
        "250a251,254\n> if ( req -> config[resp_offset < req ) { \n> return / ; \n>  } \n> \n",
        "250a251,254\n> if ( req -> config[resp_offset < req || cmd -> hdr > req ) { \n> return / ; \n>  } \n> \n",
        "250a251,254\n> if ( req -> config[resp_offset < req || ch -> cmd > req ) { \n> return / ; \n>  } \n> \n",
        "250a251,254\n> if ( req -> config[resp_offset < req / req ) { \n>  ( ch ) ; \n> return - EINVAL ; \n>  } \n",
        "250a251\n> \t \t \n",
        "250a251,255\n> if ( req < 0 || req -> remote_mtu > req ) { \n>  ( ch ) ; \n> return - EINVAL ; \n>  } \n> \n",
        "250a251,255\n> if ( req < 0 || ch -> remote_mtu > req ) { \n>  ( ch ) ; \n> return - EINVAL ; \n>  } \n> \n",
        "250a251,255\n> if ( req -> config[resp_offset < req / req ) { \n> return / ; \n> \n>  } \n> \n",
        "250a251\n> } \n",
        "250a251,254\n> if ( req < 0 || ch -> remote_mtu > req ) { \n>  ( ch ) ; \n> return - EINVAL ; \n>  } \n",
        "250a251,252\n> resp -> handler = req ; \n> \n",
        "250a251,254\n> if ( req -> config[resp_offset < req || ch < req ) { \n> return / ; \n>  } \n> \n",
        "250a251,253\n> if ( req -> remote_mtu == mtu && ch -> hdr + 1 ) \n> return 0 ; \n> \n",
        "250a251,254\n> if ( req -> config[resp_offset < req / req ) { \n> return / EINVAL ; \n>  } \n> \n",
        "250a251,254\n> if ( req -> config[resp_offset < req || ch -> config_state > req ) { \n> return / ; \n> \n>  } \n",
        "250a251,254\n> if ( req -> config[resp_offset != req ) { \n> return / ; \n>  } \n> \n",
        "250a251,253\n> if ( req -> config[resp_offset < req || ch -> config_state > req ) { \n> return / ; \n>  } \n",
        "250a251\n> \n",
        "250a251,255\n> if ( req -> remote_mtu == mtu && ch -> config_state > req ) { \n> return / ; \n> \n>  } \n> \n",
        "250a251,254\n> if ( req -> config[resp_offset == mtu ) { \n> return / ; \n>  } \n> \n",
        "250a251,254\n> if ( req -> config[resp_offset < req || req -> remote_mtu > req ) { \n> return / ; \n>  } \n> \n",
        "250a251,252\n> resp -> handler = req ; \n> return flags ; \n",
        "250a251\n> { \n",
        "250a251,254\n> if ( req -> config[resp_offset < req || ch -> config_state > req ) { \n> return / ; \n>  } \n> \n"
      ]
    }
  ],
  "comps": 5,
  "failed_comps": 46,
  "passed_tests": 4,
  "failed_tests": 4,
  "duration": 58.296621,
  "error": "Return code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\n"
}