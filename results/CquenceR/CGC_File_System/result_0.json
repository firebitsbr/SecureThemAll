{
  "repair_begin": "2020-10-19 13:09:11.855900",
  "repair_end": "2020-10-19 13:10:56.708809",
  "patches": [
    {
      "target_file": "src/file.c",
      "fix": "no repair found",
      "edits": [
        "77a78,79\n> \t if ( total_count < index / index ) { \n> \t \t \n",
        "77a78,81\n> if ( total_count < 0 || total_count > t ) { \n> return 0 ; \n>  } \n> \n",
        "77a78,80\n> \t \t if ( total_count < index ) { \n> \t \t \t return - EINVAL ; \n> \t \t \t } \n",
        "77a78,82\n> if ( ! total_count ) { \n>  ( t ) ; \n> return - EINVAL ; \n>  } \n> \n",
        "77a78,82\n> if ( ! index ) { \n>  ( t overflow , index * : : 0 ) ; \n> return 0 ; \n>  } \n> \n",
        "77a78,83\n> if ( ! outer_index ) { \n>  ( t overflow , index * : : 0 ) ; \n> return 0 ; \n> \n>  } \n> \n",
        "77a78\n> extern \n",
        "77a78,81\n> \t if ( total_count < index / index ) { \n> \t \t \t return - 1 ; \n> \t \t } \n> \n",
        "77a78,80\n> \t if ( total_count < index / index ) { \n> \t \t \t return - EINVAL ; \n> \t \t \t } \n",
        "77a78,79\n> \n> \n",
        "77a78,82\n> if ( ! total_count ) { \n>  ( t ) ; \n> return 0 ; \n>  } \n> \n",
        "77a78,81\n> \t if ( total_count < index / index ) { \n> \t \t \t return - EINVAL ; \n> \t } \n> \n",
        "77a78,81\n> \t \t if ( total_count < index ) { \n> \t \t \t return - EINVAL ; \n> \t \t } \n> \n",
        "77a78\n> \t \n",
        "77a78,80\n> \t \t \t \n>  ( = parent ; \n> \n",
        "77a78,79\n> \t \t if ( total_count < index ) { \n> \t \t \n",
        "77a78,82\n> if ( ! total_count ) { \n>  ( t overflow , index * : : 0 ) ; \n> return 0 ; \n>  } \n> \n",
        "77a78,82\n> if ( ! outer_index ) { \n>  ( t overflow , index * : : 0 ) ; \n> return 0 ; \n>  } \n> \n",
        "77a78,82\n> if ( ! total_count < index / index ) { \n>  ( t overflow , index ( : : 0 ) ; \n> return 0 ; \n>  } \n> \n",
        "77a78,79\n> \t if ( total_count < index ) { \n> \t \t \n",
        "77a78,82\n> if ( ! total_count ) { \n>  ( t overflow , index * : : 0 ) ; \n> return 0 ; \n> \n>  } \n",
        "77a78,80\n> \t if ( total_count < index / index ) { \n> \t \t \t return - EINVAL ; \n> \t \t } \n",
        "77a78,79\n> \t \t \t \n>  ( t , 0 ) ; \n",
        "77a78,82\n> if ( ! total_count && parent < Clear ) { \n>  ( t overflow , index ( : : 0 ) ; \n> return 0 ; \n>  } \n> \n",
        "77a78\n> #include t = NULL ; \n",
        "77a78,81\n> \t \t if ( total_count < index ) { \n> \t \t \t return - EINVAL ; \n> \t \t \t } \n> \n",
        "77a78,79\n> \t \t \t \n>  ( t , index ) ; \n",
        "77a78,80\n> \t \t if ( total_count < index ) { \n> \t \t \t return - EINVAL ; \n> \t \t } \n",
        "77a78,83\n> if ( ! total_count ) { \n>  ( t overflow , index * : : 0 ) ; \n> return 0 ; \n> \n>  } \n> \n",
        "77a78,82\n> if ( total_count < 0 || total_count > t ) { \n>  ( t overflow , \" ( : : 0 ) ; \n> return 0 ; \n>  } \n> \n",
        "77a78\n> \t \t \n",
        "77a78,82\n> if ( total_count < 0 || index == NULL ) { \n>  ( t overflow , index * : : 0 ) ; \n> return 0 ; \n>  } \n> \n",
        "77a78,82\n> if ( ! outer_index && parent < Clear ) { \n>  ( t overflow , index ( : : 0 ) ; \n> return 0 ; \n>  } \n> \n",
        "77a78,79\n> \t \t \t \n>  ( t , parent -> length ) ; \n",
        "77a78,79\n> \t \t \t \n>  ( t ) ; \n",
        "77a78,83\n> if ( ! total_count < index / index ) { \n>  ( t overflow , index ( : : 0 ) ; \n> return 0 ; \n> \n>  } \n> \n",
        "77a78,79\n> \t \t \t \n>  ( t , index ) ; \n",
        "77a78,81\n> \t \t if ( total_count < index ) { \n> \t \t \t return - EINVAL ; \n> \t } \n> \n",
        "77a78,82\n> if ( ! total_count ) { \n>  ( t , 0 ) ; \n> return 0 ; \n>  } \n> \n",
        "77a78,81\n> \t if ( total_count < index / index ) { \n> \t \t \t return - EINVAL ; \n> \t \t } \n> \n",
        "77a78,83\n> if ( ! total_count && parent < Clear ) { \n>  ( t overflow , index ( : : 0 ) ; \n> return 0 ; \n> \n>  } \n> \n",
        "77a78,79\n> \t \t if ( total_count < index ) { \n> \t \t \t \n",
        "77a78,83\n> if ( ! outer_index && parent < Clear ) { \n>  ( t overflow , index ( : : 0 ) ; \n> return 0 ; \n> \n>  } \n> \n",
        "77a78\n> \n",
        "77a78,82\n> if ( ! index ) { \n>  ( t overflow , index * : : 0 ) ; \n> return 0 ; \n> \n>  } \n",
        "77a78,79\n> \t if ( total_count < index ) { \n> \t \t \t \n",
        "77a78,83\n> if ( ! index ) { \n>  ( t overflow , index * : : 0 ) ; \n> return 0 ; \n> \n>  } \n> \n",
        "77a78,79\n> \t \t \t \n>  ( = parent ; \n",
        "77a78\n> \t \t \t \n",
        "77a78,81\n> if ( total_count < 0 || outer_index > t ) { \n> return 0 ; \n>  } \n> \n"
      ]
    }
  ],
  "comps": 6,
  "failed_comps": 45,
  "passed_tests": 2,
  "failed_tests": 5,
  "duration": 104.852909,
  "error": "Return code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\n"
}