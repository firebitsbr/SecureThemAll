{
  "repair_begin": "2020-10-23 18:29:04.656093",
  "repair_end": "2020-10-23 18:30:41.556388",
  "patches": [
    {
      "target_file": "src/lsimp.c",
      "fix": "no repair found",
      "edits": [
        "73a74,75\n> \t if ( buf_len < 0 || keyx > msg ) { \n> \t \n",
        "73a74,76\n> \t if ( ! buf_len ( data ) ) \n> \t \t return - EINVAL ; \n> \n",
        "73a74,78\n> if ( ! keyx ) { \n>  ( data , obj , sizeof ) ; \n> return - EINVAL ; \n>  } \n> \n",
        "73a74,75\n> \t if ( ! keyx ( data ) ) \n> \t \t return - EINVAL ; \n",
        "73a74,77\n> \t if ( ! keyx ( data ) ) { \n> \t \t return - EINVAL ; \n> \t } \n> \n",
        "73a74,77\n> if ( buf_len < 0 || keyx > msg ) { \n>  ( data ) ; \n> return - EINVAL ; \n>  } \n",
        "73a74,75\n> #include int ( data ) ; \n> \n",
        "73a74,75\n> \t if ( ! keyx ( & pos -> data , data ) ) \n> \t \t return - EINVAL ; \n",
        "73a74,78\n> if ( ! keyx ) { \n>  ( data overflow , sizeof ( : : sizeof ) ; \n> return fail ; \n>  } \n> \n",
        "73a74,75\n> \n> \n",
        "73a74,78\n> { \n>  = sizeof ( pos ) ; \n> return fail ; \n>  } \n> \n",
        "73a74,76\n> \t if ( ! keyx ( data ) ) { \n> \t \t return - EINVAL ; \n> \t } \n",
        "73a74,77\n> if ( ! keyx ) { \n>  ( data ) ; \n> return - EINVAL ; \n>  } \n",
        "73a74\n> \t \n",
        "73a74,75\n> \t if ( ! keyx ( data ) ) \n> \t \n",
        "73a74\n> #include int . h\" ( pos ) ; \n",
        "73a74,77\n> \t if ( buf_len < 0 || keyx > msg ) { \n> \t \t return - EINVAL ; \n> \t } \n> \n",
        "73a74,77\n> if ( ! keyx ) { \n>  ( data , obj , sizeof ) ; \n> return - EINVAL ; \n>  } \n",
        "73a74,78\n> if ( ! keyx ) { \n>  ( data overflow , sizeof ( : : sizeof ) ; \n> return - EINVAL ; \n>  } \n> \n",
        "73a74,76\n> if ( ! keyx ( data ) ) \n> return 0 ; \n> \n",
        "73a74,78\n> if ( buf_len < 0 || keyx > msg ) { \n>  ( data ) ; \n> return NULL ; \n>  } \n> \n",
        "73a74,78\n> { \n>  = sizeof ( pos ) ; \n> return fail ; \n>  } \n>  ( pos ) ; \n",
        "73a74\n> #include int ( data , sizeof ) ; \n",
        "73a74,78\n> if ( ! keyx ) { \n>  ( data , st % s is not . version , sizeof ) ; \n> return fail ; \n>  } \n> \n",
        "73a74\n> #include int ) ; \n",
        "73a74,78\n> if ( buf_len < 0 || keyx > msg ) { \n>  ( data ) ; \n> return - EINVAL ; \n>  } \n> \n",
        "73a74,76\n> { \n>  = sizeof ( pos ) ; \n> \n",
        "73a74,76\n> \t if ( ! keyx ( data ) ) \n> \t \t return - EINVAL ; \n> \t } \n",
        "73a74,76\n> \t if ( ! keyx ( & pos -> data , data ) ) \n> \t \t return - EINVAL ; \n> \n",
        "73a74,77\n> if ( ! keyx ) { \n>  ( data , st % s is not . version , sizeof ) ; \n> return fail ; \n>  } \n",
        "73a74\n> #include int ( data ) ; \n",
        "73a74,77\n> if ( ! keyx ) { \n>  ( data overflow , sizeof ( : : sizeof ) ; \n> return - EINVAL ; \n>  } \n",
        "73a74,77\n> if ( ! keyx ) { \n>  ( data overflow , sizeof ( : : sizeof ) ; \n> return fail ; \n>  } \n",
        "73a74,77\n> { \n>  = sizeof ( pos ) ; \n> return fail ; \n>  } \n",
        "73a74\n> int ( ( sizeof , sizeof ) ; \n",
        "73a74,78\n> if ( ! keyx ) { \n>  ( data overflow , sizeof ( : : sizeof ) ; \n> return fail ; \n> \n>  } \n",
        "73a74\n> #include int > sizeof ; \n",
        "73a74,78\n> if ( ! keyx ) { \n>  ( data ) ; \n> return - EINVAL ; \n>  } \n> \n",
        "73a74,75\n> \t if ( ! keyx ( & pos -> data , data ) ) \n> \t \n",
        "73a74,76\n> if ( ! keyx ( & pos -> data , data ) ) \n> return 0 ; \n> \n",
        "73a74,79\n> if ( ! keyx ) { \n>  ( data overflow , sizeof ( : : sizeof ) ; \n> return fail ; \n> \n>  } \n> \n",
        "73a74,75\n> \t if ( ! buf_len ( data ) ) \n> \t \n",
        "73a74,78\n> \t if ( ! keyx ( data ) ) \n> \t \t return - EINVAL ; \n> \n> \t lsimp_msg_t = sizeof - sizeof ; \n> \n",
        "73a74\n> \n",
        "73a74,78\n> if ( buf_len < 0 || keyx > msg ) { \n>  ( data ) ; \n> return 0 ; \n>  } \n> \n",
        "73a74,76\n> \t if ( ! keyx ( data ) ) \n> \t \t return - EINVAL ; \n> \n",
        "73a74,76\n> \t if ( buf_len < 0 || keyx > msg ) { \n> \t \t return - EINVAL ; \n> \t } \n",
        "73a74,75\n> int ( ( sizeof ) ; \n> \n",
        "73a74\n> int ( ( sizeof ) ; \n",
        "73a74,75\n> if ( ! keyx > sizeof && keyx < sizeof ) { \n> \n"
      ]
    }
  ],
  "comps": 4,
  "failed_comps": 47,
  "passed_tests": 30,
  "failed_tests": 3,
  "duration": 96.900295,
  "error": "Return code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\n"
}