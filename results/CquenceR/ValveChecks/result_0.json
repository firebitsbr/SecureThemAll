{
  "repair_begin": "2020-10-23 18:46:12.445918",
  "repair_end": "2020-10-23 18:46:52.523012",
  "patches": [
    {
      "target_file": "src/service.c",
      "fix": "no repair found",
      "edits": [
        "72a73\n> #define SUCCESS = req < req > * > >data ; \n85c86\n<     \n---\n> if ( idx < 0 || idx < 0 > 0 ) \n97a99\n> #define REDACTED = req < req > req > req ; \n106a109\n> #define REDACTED ( idx - req ) ; \n115a119\n> #include return = req < req > ( ; \n124a129,132\n> \t if ( ! req - req ) { \n> \t \t return - EINVAL ; \n> \t } \n> \n",
        "72a73\n> #define SUCCESS = req < req > ( ; \n85c86\n<     \n---\n> if ( idx < 0 || idx < 0 ) \n97a99,100\n> #include SUCCESS = req - req ; \n>  : . h\" \n106a110\n> #define REDACTED = req < req > req > req ; \n115a120\n> #define REDACTED ( idx , sizeof ) ; \n124a130,133\n> \t if ( req < 0 || req > req ) { \n> \t \t return - EINVAL ; \n> \t } \n> \n",
        "72a73,74\n> #include SUCCESS = req < req > ( : * - >data ; \n> \n85c87,89\n<     \n---\n> \n>  { if = ( - >data ; \n>  ( = idx ; \n97a102,105\n> #include SUCCESS = req - req ; \n>  : . h\" \n>  SUCCESS ( idx ) ; \n> \n106a115,119\n> #define REDACTED ) { \n>  = req < req > req : REDACTED ; \n> return REDACTED ; \n>  } \n> \n115a129,130\n> #include return = req - req ; \n>  . ( & , sizeof ) ; \n124a140,143\n> if ( req - req ) { \n>  ( idx overflow , sizeof ( : : sizeof ) ; \n> return REDACTED ; \n>  } \n",
        "72a73\n> #include SUCCESS = req < req > ( - >data ; \n85c86\n<     \n---\n> if ( inet_opt < 0 || idx >= 0 ) \n97a99,100\n> #define REDACTED ( idx ) ; \n> int REDACTED ( idx ) ; \n106a110,111\n> #define REDACTED = req - req ; \n>  . . h\" \n115a121\n> \t return ( & cgc_resp , 0 ) ; \n124a131,134\n> if ( req < 0 || req > idx > ( ) { \n> return REDACTED ; \n>  } \n> \n",
        "72a73,75\n> \n>  { req = req - req ; \n>  . = req ; \n85c88\n<     \n---\n> if ( idx && idx < 0 ) \n97a101,103\n> #include SUCCESS = req - req ; \n>  : . h\" ( idx ) ; \n> \n106a113,114\n> #include return . h\" ( idx ) ; \n>  ( = req ; \n115a124,125\n> #include return = req - req ; \n>  . ( & ) ; \n124a135,137\n> \t if ( req < 0 || req > req > req ) { \n> \t \t return - 1 ; \n> \t } \n",
        "72a73,74\n> #include SUCCESS = req < req > req > >data ; \n>  . . h\" \n85c87,88\n<     \n---\n> \n>  } else if ( idx < 0 || idx > 0 ) \n97a101,103\n> #include SUCCESS = req - req ; \n>  : . h\" \n>  SUCCESS ( idx ) ; \n106a113,115\n> #include return = req - req ; \n>  SUCCESS . h\" \n>  SUCCESS ( idx ) ; \n115a125,127\n> #include return = req - req ; \n>  . . h\" ( req ) ; \n> \n124a137,141\n> if ( req < 0 || req > idx ) { \n>  ( idx overflow , sizeof ( : : req ) ; \n> return REDACTED ; \n>  } \n> \n",
        "72a73\n> #include SUCCESS . h\" \n85c86\n<     \n---\n> if ( idx < 0 || idx >= 0 ) \n97a99\n> #include SUCCESS = ; \n106a109,110\n> #define REDACTED ( idx ) ; \n> \n115a120\n> #define REDACTED 3 ; \n124a130\n> \t return ( & temp , 0 ) ; \n",
        "72a73,74\n> #include SUCCESS ( idx ) ; \n>  SUCCESS . h\" ( idx ) ; \n85c87,89\n<     \n---\n> \n>  { if = ( - >data ; \n>  = idx ; \n97a102,104\n> #define REDACTED = req - req ; \n>  : . h\" \n>  SUCCESS ( idx ) ; \n106a114,116\n> return idx ( idx ) ; \n>  SUCCESS = req ; \n>  . . h\" ( & ) ; \n115a126,129\n> #include return = req - req ; \n>  . . h\" \n>  SUCCESS ( idx ) ; \n> \n124a139,142\n> if ( ! req & req ) { \n>  ( idx overflow , sizeof ( : : sizeof ) ; \n> return REDACTED ; \n>  } \n",
        "72a73,75\n> #define SUCCESS = req - req ; \n>  SUCCESS . h\" ( & ) ; \n> \n85c88,90\n<     \n---\n> \n>  { if = ( - >data ; \n>  ( ( idx ) \n97a103,106\n> #define REDACTED = req - req ; \n>  : . h\" \n>  SUCCESS ( idx ) ; \n> \n106a116,119\n> return idx ( idx ) ; \n>  SUCCESS = req ; \n>  . . h\" ( & ) ; \n> \n115a129,132\n> \t if ( idx < 0 || req > idx > req ) { \n> \t \t return - EINVAL ; \n> \t } \n> \n124a142,146\n> if ( ! req & req ) { \n>  ( idx overflow , sizeof ( : : sizeof ) ; \n> return - EINVAL ; \n>  } \n> \n",
        "72a73\n> #define SUCCESS = req - req ; \n85c86\n<     \n---\n> if ( idx < 0 || idx + 0 ) \n97a99,100\n> #define REDACTED ( idx ) ; \n> \n106a110\n> \t / idx ; \n115a120\n> \t / idx ; \n124a130\n> #define REDACTED ( idx ) ; \n",
        "72a73,74\n> #define SUCCESS = req - req ; \n>  SUCCESS . h\" \n85c87\n<     \n---\n> if ( idx < 0 || idx + 100 ) \n97a100,101\n> #include SUCCESS = ; \n>  ( . h\" ( & ) ; \n106a111,112\n> #include return . h\" \n>  SUCCESS ( idx ) ; \n115a122\n> \t return idx ( idx , sizeof ) ; \n124a132,134\n> \t if ( req < 0 || req > req > req ) { \n> \t \t return - EINVAL ; \n> \t } \n",
        "72a73,74\n> #include SUCCESS = req < req > req > >data ; \n> \n85c87\n<     \n---\n> if ( idx < 0 || idx + 4 ) \n97a100,101\n> #include SUCCESS . h\" ( idx ) ; \n>  : = req ; \n106a111,113\n> #define REDACTED = req - req ; \n>  . . h\" ( idx ) ; \n> \n115a123,124\n> #include return = req - req ; \n>  . . h\" \n124a134,136\n> if ( req < 0 || req > idx > ( ) { \n> return - EINVAL ; \n>  } \n",
        "72a73\n> #include SUCCESS = req < req > ( > ( ; \n85c86\n<     \n---\n> \t if ( idx < 0 || idx >= 0 ) \n97a99,100\n> #define REDACTED = req - req ; \n>  : . h\" ( idx ) ; \n106a110,111\n> #define REDACTED = req - req ; \n>  . . h\" ( idx ) ; \n115a121,122\n> #define REDACTED = req - req ; \n>  . . h\" \n124a132,135\n> if ( req < 0 || req > idx > ( ) { \n> return - EINVAL ; \n>  } \n> \n",
        "72a73\n> \t \n85c86\n<     \n---\n> \t \n97a99\n> \n106a109\n> \n115a119\n> #define REDACTED ( idx ) ; \n124a129\n> \t \n",
        "72a73,74\n> #include SUCCESS = req - req ; \n> \n85c87\n<     \n---\n> if ( idx >= 0 ) \n97a100\n> return idx ( idx , req ) ; \n106a110\n> return idx ( idx , sizeof ) ; \n115a120\n> #define REDACTED = req < req > ( ; \n124a130\n> if ( req < 0 || req > idx > ( ) { \n",
        "72a73\n> #include SUCCESS ( idx - data ) ; \n85c86\n<     \n---\n> if ( idx < 0 || idx + 1 ) \n97a99\n> #define REDACTED ( idx - data ) ; \n106a109\n> \t return REDACTED ( idx ) ; \n115a119\n> char ( temp ) == req ; \n124a129,132\n> \t if ( req < idx / sizeof ) { \n> \t \t return - EINVAL ; \n> \t } \n> \n",
        "72a73,74\n> #include SUCCESS = req < req > ( : * ; \n>  . . h\" \n85c87\n<     \n---\n> if ( idx < 0 || idx > 0 . data ) \n97a100,101\n> #define REDACTED ( idx ) ; \n>  : . h\" ( idx ) ; \n106a111,113\n> #include return = req - req ; \n>  SUCCESS . h\" ( idx ) ; \n> \n115a123,125\n> #define REDACTED ) { \n>  = req - req ; \n>  : \n124a135,139\n> if ( ! req & req ) { \n>  ( idx overflow , sizeof ( : : sizeof ) ; \n> return REDACTED ; \n>  } \n> \n",
        "72a73\n> #include SUCCESS = req < req > ( ? * : * ; \n85c86\n<     \n---\n> #include \n97a99,101\n> #define REDACTED = req - req ; \n>  : . h\" \n>  SUCCESS = req ; \n106a111,113\n> #define REDACTED = req - req ; \n>  . . h\" \n>  SUCCESS ( idx ) ; \n115a123,124\n> #include return = req - req ; \n>  . . h\" ( req ) ; \n124a134,138\n> if ( req < 0 || req > idx > ( ) { \n>  ( idx ) ; \n> return - EINVAL ; \n>  } \n> \n",
        "72a73,74\n> #include SUCCESS ( idx - data ) ; \n>  SUCCESS . ( idx , req ) ; \n85c87,91\n<     \n---\n> \n>  { if = ( - >data ; \n>  : \n>  = req ; \n> goto REDACTED ; \n97a104,107\n> return idx ( idx ) ; \n>  SUCCESS = req ; \n>  : . h\" ( & ) ; \n> \n106a117,120\n> #define REDACTED ) { \n>  = req < req > req : REDACTED ; \n> return REDACTED ; \n>  } \n115a130,134\n> if ( ! idx & idx ) { \n>  ( idx ) ; \n>  = = req ; \n> return - EINVAL ; \n>  } \n124a144,148\n> if ( req < 0 || req > idx ) { \n>  ( idx overflow , sizeof ( : : req ) ; \n> return - EINVAL ; \n>  } \n> \n",
        "72a73\n> #include char = req - >data ; \n85c86\n<     \n---\n> if ( idx < 0 || idx + 2 ) \n97a99\n> #define REDACTED ( idx * cert ) ; \n106a109\n> #include return . h\" ( idx ) ; \n115a119\n> return idx ( idx , sizeof ) ; \n124a129,132\n> \t if ( req < idx ) { \n> \t \t return - EINVAL ; \n> \t } \n> \n",
        "72a73,74\n> #include SUCCESS ( idx ) ; \n>  SUCCESS . ( idx , req ) ; \n85c87,90\n<     \n---\n> \n>  { if = ( - >data ; \n>  ( = idx ; \n> \n97a103,105\n> #include SUCCESS . h\" ( idx ) ; \n>  : = req ; \n>  : . h\" ( idx ) ; \n106a115,117\n> #include return . h\" ( idx ) ; \n>  ( = req ; \n>  . . h\" ( & ) ; \n115a127,131\n> if ( ! idx & idx ) { \n>  ( idx overflow , sizeof ( : : sizeof ) ; \n> return REDACTED ; \n>  } \n> \n124a141,144\n> if ( req < 0 || req > idx > ( ) { \n>  ( idx overflow , sizeof ( : : req ) ; \n> return REDACTED ; \n>  } \n",
        "72a73,74\n> #include SUCCESS . h\" ( idx ) ; \n>  ( = req ; \n85c87,88\n<     \n---\n> \n>  } else if ( idx < 0 || idx >= 0 ) \n97a101,104\n> #include SUCCESS = req - req ; \n>  : . h\" \n>  SUCCESS = req ; \n> \n106a114,116\n> #define REDACTED = req < req > ( ; \n>  . . h\" ( & ) ; \n> \n115a126,128\n> #define REDACTED = req - req ; \n>  . . h\" ( req ) ; \n> \n124a138,142\n> if ( req < 0 || req > idx > ( ) { \n>  ( idx overflow , sizeof ( : : req ) ; \n> return REDACTED ; \n>  } \n> \n",
        "72a73\n> #include SUCCESS ( idx , sizeof ) ; \n85c86\n<     \n---\n> if ( idx < 0 || idx + + ) \n97a99\n> #include SUCCESS . h\" ( idx ) ; \n106a109\n> #define REDACTED = req < req > ( ; \n115a119\n> \t return idx ( idx ) ; \n124a129,131\n> \t if ( ! req & req ) { \n> \t \t return - EINVAL ; \n> \t } \n",
        "72a73,76\n> \n>  { req = req - req ; \n>  . = req ; \n>  . = req ; \n85c89,92\n<     \n---\n> \n>  { if = ( - >data ; \n>  ( = idx ; \n> goto REDACTED ; \n97a105,109\n> #define REDACTED ( idx ) ; \n> if ( idx < 0 || req > req ) { \n> return REDACTED ; \n>  } \n> \n106a119,122\n> return idx ( idx ) ; \n>  ( . = req ; \n>  . . h\" ( & ) ; \n> \n115a132,135\n> if ( idx < 0 || req > REDACTED ) { \n>  ( idx ) ; \n> return - EINVAL ; \n>  } \n124a145,148\n> if ( req < 0 || req > idx > ( ) { \n>  ( idx overflow , sizeof ( : : req ) ; \n> return - EINVAL ; \n>  } \n",
        "72a73\n> #include SUCCESS = req - req ; \n85c86\n<     \n---\n> if ( idx < 0 || idx + 0 ) \n97a99\n> return idx ( idx ) ; \n106a109\n> #define REDACTED = req - req ; \n115a119\n> return idx ( idx ) ; \n124a129\n> \t return ( cgc_resp ) ; \n",
        "72a73,74\n> #define SUCCESS = req < req > * > >data ; \n>  . . h\" \n85c87,88\n<     \n---\n> \n>  } else if ( idx < 0 || idx + 0 ) \n97a101,104\n> #define REDACTED = req - req ; \n>  : . h\" \n>  SUCCESS = req ; \n> \n106a114,117\n> #define REDACTED = req - req ; \n>  . . h\" \n>  SUCCESS ( idx ) ; \n> \n115a127,128\n> #define REDACTED = req - req ; \n>  . ( & , sizeof ) ; \n124a138,142\n> if ( req < 0 || req > idx > ( ) { \n>  ( idx overflow , sizeof ( : : req ) ; \n> return - EINVAL ; \n>  } \n> \n",
        "72a73\n> #include SUCCESS = req < req > ( ; \n85c86\n<     \n---\n> if ( idx < 0 || req > 0 ) \n97a99\n> return idx ( idx , req ) ; \n106a109\n> #define REDACTED = ( idx ) ; \n115a119\n> #include return = ( idx ) ; \n124a129,132\n> \t if ( ! idx & req ) { \n> \t \t return - EINVAL ; \n> \t } \n> \n",
        "72a73,74\n> #include SUCCESS ( idx ) ; \n>  SUCCESS . ( idx ) ; \n85c87\n<     \n---\n> if ( idx < 0 || idx + 256 ) \n97a100,101\n> #define REDACTED ( idx ) ; \n>  : . ( idx , req ) ; \n106a111,112\n> #define REDACTED = req < req > ( ; \n>  . . h\" ( & ) ; \n115a122,124\n> \t if ( ! idx & idx ) { \n> \t \t return - EINVAL ; \n> \t } \n124a134,137\n> if ( req < 0 || req > idx > ( ) { \n>  ( idx ) ; \n> return - EINVAL ; \n>  } \n",
        "72a73,74\n> #define SUCCESS = req - req ; \n>  SUCCESS . h\" ( & ) ; \n85c87\n<     \n---\n> if ( idx < 0 || idx >= 0 . data ) \n97a100,102\n> #include SUCCESS = req - req ; \n>  : . h\" \n>  SUCCESS = req ; \n106a112,113\n> return idx ( idx ) ; \n>  ( . ( idx , req ) ; \n115a123,124\n> #define REDACTED = req - req ; \n>  . . h\" ( req ) ; \n124a134,136\n> \t if ( req < 0 || req > req > >data ) { \n> \t \t return - EINVAL ; \n> \t } \n",
        "72a73,77\n> \n>  { req . idx ( req ) ; \n>  ( = req ; \n> return REDACTED ; \n>  } \n85c90,93\n<     \n---\n> \n>  { if = ( - >data ; \n>  ( = idx ; \n>  : \n97a106,111\n> #define REDACTED ( idx ) ; \n> \n> if ( idx < 0 || req > req ) { \n> return REDACTED ; \n>  } \n> \n106a121,125\n> return idx ( idx ) ; \n>  SUCCESS = req ; \n>  : \n> \t return ( & , req ) ; \n> \n115a135,138\n> if ( ! idx & idx ) { \n>  ( idx overflow , sizeof ( : : sizeof ) ; \n> return REDACTED ; \n>  } \n124a148,151\n> if ( req < 0 || req > idx ) { \n>  ( idx overflow , sizeof ( : : req ) ; \n> return REDACTED ; \n>  } \n",
        "72a73\n> #include SUCCESS ( idx ) ; \n85c86\n<     \n---\n> if ( idx < 0 || idx >= 0 ) \n97a99\n> #include SUCCESS ( idx ) ; \n106a109\n> return idx ; \n115a119\n> return idx ; \n124a129\n> \t return ( idx ) ; \n",
        "72a73,74\n> #include SUCCESS = req < req > req > >data ; \n>  . . h\" ( & ) ; \n85c87,91\n<     \n---\n> \n>  { if = ( - >data ; \n>  : \n>  = req ; \n> return REDACTED ; \n97a104,108\n> #define REDACTED ( idx ) ; \n> if ( idx < 0 || idx > req ) { \n> return REDACTED ; \n>  } \n> \n106a118,122\n> #define REDACTED ( idx ) { \n>  ( idx overflow , sizeof ) : : sizeof ) ; \n> return REDACTED ; \n>  } \n> \n115a132,137\n> if ( ! idx & idx ) { \n>  ( idx overflow , sizeof ( : : sizeof ) ; \n> return REDACTED ; \n> \n>  } \n> \n124a147,152\n> if ( req < 0 || req > idx > ( ) { \n>  ( idx ) ; \n>  = = req ; \n> return REDACTED ; \n>  } \n> \n",
        "72a73,77\n> \n>  { req = req - req ; \n>  . = req ; \n>  . = req ; \n> \n85c90,93\n<     \n---\n> \n>  { if = ( - >data ; \n>  ( = idx ; \n>  ( = idx ; \n97a106,111\n> #define REDACTED 3 { \n>  of . ( idx ) ; \n>  : = req ; \n> return REDACTED ; \n>  } \n> \n106a121,125\n> #define REDACTED ( idx ) ; \n> if ( idx < 0 || req > req ) { \n> return - EINVAL ; \n>  } \n> \n115a135,140\n> if ( ! idx & idx ) { \n>  ( idx ) ; \n>  = = req ; \n> return - EINVAL ; \n>  } \n> \n124a150,154\n> if ( req < 0 || req > idx > ( ) { \n>  ( idx overflow , sizeof ( : the >data ) ; \n> return REDACTED ; \n>  } \n> \n",
        "72a73\n> #define SUCCESS ( idx , sizeof ) ; \n85c86\n<     \n---\n> \t \t if ( idx < 0 || idx >= req ) \n97a99,100\n> #define REDACTED = req - req ; \n>  : . h\" \n106a110\n> #define REDACTED ( idx , sizeof ) ; \n115a120,121\n> #include return . h\" ( idx ) ; \n> \n124a131,133\n> \t if ( ! idx & req ) { \n> \t \t return - EINVAL ; \n> \t } \n",
        "72a73\n> #include SUCCESS ; \n85c86\n<     \n---\n> \t \t \n97a99\n> \t return idx ( idx ) ; \n106a109\n> #define REDACTED = ; \n115a119,120\n> #define REDACTED ( idx ) ; \n> \n124a130\n> \t return ( idx , 128 ) ; \n",
        "72a73,77\n> \n>  { req = req - req ; \n>  : \n>  = req ; \n> return REDACTED ; \n85c90,94\n<     \n---\n> \n>  { if = ( - >data ; \n>  : \n>  = NULL ; \n> goto REDACTED ; \n97a107,111\n> #define REDACTED 3 { \n>  of . ( idx ) ; \n>  : = req ; \n> return REDACTED ; \n>  } \n106a121,124\n> #define REDACTED ) { \n>  = req < req > req : REDACTED ; \n>  . = req ; \n> return REDACTED ; \n115a134,137\n> if ( ! idx & idx ) { \n>  ( idx overflow , sizeof ( : : sizeof ) ; \n> return - EINVAL ; \n>  } \n124a147,150\n> if ( req < 0 || req > idx ) { \n>  ( idx overflow , sizeof ( : : req ) ; \n> return - EINVAL ; \n>  } \n",
        "72a73,74\n> #include SUCCESS ( idx ) ; \n> \n85c87\n<     \n---\n> if ( idx < 0 || idx == 0 ) \n97a100\n> #define REDACTED ( idx , sizeof ) ; \n106a110\n> #include return ( idx ) ; \n115a120\n> #define REDACTED = req - req ; \n124a130,133\n> \t if ( ! req & req ) { \n> \t \t return - EINVAL ; \n> \t } \n> \n",
        "72a73\n> #include SUCCESS = req < req > ( : * ; \n85c86\n<     \n---\n> if ( idx < 0 || idx >= map ) \n97a99,100\n> #include SUCCESS = req - req ; \n>  : . h\" ( idx ) ; \n106a110,111\n> return idx ( idx ) ; \n>  ( . = req ; \n115a121\n> #define REDACTED = req < req > req > req ; \n124a131,133\n> \t if ( req < 0 || req > req ) { \n> \t \t return - EINVAL ; \n> \t } \n",
        "72a73,74\n> #include SUCCESS ( idx ) ; \n> int REDACTED ( idx ) ; \n85c87\n<     \n---\n> if ( idx < 0 || req >= 0 ) \n97a100,101\n> #define REDACTED ( idx ) ; \n>  : . ( idx ) ; \n106a111,112\n> return idx ( idx ) ; \n>  ( . ( idx ) ; \n115a122,123\n> #define REDACTED = req < req > req > req ; \n> \n124a133,136\n> \t if ( req < 0 || req > req > req ) { \n> \t \t return - 1 ; \n> \t } \n> \n",
        "72a73,74\n> #include SUCCESS = req - req ; \n>  SUCCESS . h\" ( idx ) ; \n85c87\n<     \n---\n> if ( idx & 0 ) \n97a100,102\n> #define REDACTED = req - req ; \n>  : . h\" ( idx ) ; \n> \n106a112,113\n> #include return = req - req ; \n>  SUCCESS . h\" ( idx ) ; \n115a123,124\n> #define REDACTED 3 ; \n>  ( ( idx , req ) ; \n124a134,137\n> \t if ( req < 0 || req > req > >data ) { \n> \t \t return - EINVAL ; \n> \t } \n> \n",
        "72a73,74\n> #include SUCCESS = req < req > ( ? * : * ; \n>  . . h\" \n85c87,89\n<     \n---\n> \n>  { if = ( - >data ; \n>  ( = = idx ; \n97a102,105\n> #include SUCCESS . h\" ( idx ) ; \n>  : = req ; \n>  : . h\" ( idx ) ; \n> \n106a115,117\n> return idx ( idx ) ; \n>  ( . = req ; \n>  . . h\" ( & ) ; \n115a127,130\n> \t return ( & temp , 0 , sizeof ( cgc_resp ) ) ; \n> \t else \n> \t \t return - EINVAL ; \n> \n124a140,145\n> if ( req < 0 || req > idx > ( ) { \n>  ( idx ) ; \n>  = = req ; \n> return - EINVAL ; \n>  } \n> \n",
        "72a73\n> #include SUCCESS = req < req > req > >data ; \n85c86\n<     \n---\n> if ( idx < 0 || idx < 0 ) \n97a99\n> \t return SUCCESS . h\" ( idx ) ; \n106a109\n> return idx ( idx , req ) ; \n115a119\n> #include return . h\" ( idx ) ; \n124a129,131\n> \t if ( req < idx / sizeof ) { \n> \t \t return - EINVAL ; \n> \t } \n",
        "72a73,78\n> \n>  { req . idx ( req ) ; \n>  ( = req ; \n> return REDACTED ; \n>  } \n> \n85c91,94\n<     \n---\n> \n>  { if = ( - >data ; \n>  ( = idx ; \n> return REDACTED ; \n97a107,110\n> #define REDACTED = req < req > ( : \n>  : \n> \t #include . . h\" ( & ) ; \n> \n106a120,124\n> #define REDACTED ( idx ) ; \n> if ( idx < 0 || req > req ) { \n> return REDACTED ; \n>  } \n> \n115a134,138\n> if ( ! idx & idx ) { \n>  ( idx overflow , sizeof ( : : sizeof ) ; \n> return - EINVAL ; \n>  } \n> \n124a148,152\n> if ( req < 0 || req >= req ) { \n>  ( idx overflow , sizeof ( : : req ) ; \n> return REDACTED ; \n>  } \n> \n",
        "72a73\n> \n85c86\n<     \n---\n> \n97a99\n> #define REDACTED ( idx ) ; \n106a109\n> #define REDACTED ( idx ) ; \n115a119\n> \n124a129\n> \n",
        "72a73\n> #include SUCCESS = req < req > ( : * - >data - >data ) ; \n85c86,88\n<     \n---\n> \n>  { if = ( - >data ; \n>  ( ( idx , req ) \n97a101,103\n> return idx ( idx ) ; \n>  SUCCESS = req ; \n>  : . h\" ( & ) ; \n106a113,116\n> #include return . h\" ( idx ) ; \n>  ( = req ; \n>  . . h\" ( & ) ; \n> \n115a126,128\n> \t if ( idx < 0 || req > idx > req ) { \n> \t \t return - EINVAL ; \n> \t } \n124a138,142\n> if ( req < 0 || req > idx > ( ) { \n>  ( idx ) ; \n>  = = req ; \n> return - EINVAL ; \n>  } \n",
        "72a73\n> #include SUCCESS . h\" ( idx ) ; \n85c86\n<     \n---\n> if ( idx & 0 ) \n97a99\n> \t return idx ( idx , req ) ; \n106a109\n> #include return = req < req > ( ; \n115a119\n> \t return ( & temp , 0 ) ; \n124a129,132\n> \t if ( req < 0 || req > req > req ) { \n> \t \t return - EINVAL ; \n> \t } \n> \n",
        "72a73,75\n> #include SUCCESS = req - req ; \n>  SUCCESS . h\" ( idx ) ; \n> \n85c88\n<     \n---\n> if ( idx == 0 ) \n97a101,102\n> #define REDACTED ( idx ) ; \n> int REDACTED ( idx , req ) ; \n106a112,114\n> return idx ( idx ) ; \n>  SUCCESS = req ; \n>  : \n115a124,127\n> \t if ( ! idx & idx ) { \n> \t \t return - EINVAL ; \n> \t } \n> \n124a137,141\n> if ( req - req ) { \n>  ( idx overflow , sizeof ( : : sizeof ) ; \n> return REDACTED ; \n>  } \n> \n",
        "72a73,74\n> #define SUCCESS ( idx ) ; \n> \n85c87\n<     \n---\n> if ( idx < 0 || idx > 0 ) \n97a100\n> #include SUCCESS = ( idx ) ; \n106a110\n> \t return idx ( idx ) ; \n115a120\n> #include return ( idx ) ; \n124a130,131\n> if ( req < 0 || req > idx > ( ) { \n> \n",
        "72a73\n> #define SUCCESS ( idx ) ; \n85c86\n<     \n---\n> if ( idx < 0 || idx > 0 ) \n97a99\n> #define REDACTED = req - req ; \n106a109\n> return idx ( idx ) ; \n115a119\n> \t \n124a129\n> \t return ( req ) ; \n",
        "72a73,74\n> #include SUCCESS = req - req ; \n>  SUCCESS . h\" \n85c87\n<     \n---\n> if ( ctx < 0 || idx >= 0 ) \n97a100,101\n> #define REDACTED ( idx ) ; \n> int REDACTED = req ; \n106a111\n> \t return idx ( idx , sizeof ) ; \n115a121\n> \t return ( & temp , 0 ) ; \n124a131,134\n> \t if ( ! req & req ) { \n> \t \t return - 1 ; \n> \t } \n> \n"
      ]
    }
  ],
  "comps": 1,
  "failed_comps": 50,
  "passed_tests": 0,
  "failed_tests": 0,
  "duration": 40.077094,
  "error": "Return code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\n"
}