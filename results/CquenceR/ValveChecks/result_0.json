{
  "repair_begin": "2020-10-19 13:28:50.169773",
  "repair_end": "2020-10-19 13:30:03.659252",
  "patches": [
    {
      "target_file": "src/service.c",
      "fix": "no repair found",
      "edits": [
        "72a73,74\n> #include SUCCESS ( idx ) ; \n> int REDACTED ( idx ) ; \n85c87\n<     \n---\n> if ( idx < 0 || req > 0 ) \n97a100\n> \t #define REDACTED ( idx ) ; \n106a110,112\n> #define REDACTED = req ; \n>  . . h\" ( req ) ; \n> \n115a122,123\n> #include return ( idx ) ; \n> int REDACTED ( idx ) ; \n124a133,135\n> \t if ( ! req -> idx ) { \n> \t \t return - EINVAL ; \n> \t } \n",
        "72a73,75\n> #define SUCCESS = req ; \n>  SUCCESS . h\" ( req ) ; \n> \n85c88\n<     \n---\n> if ( idx < 0 || idx + 100 ) \n97a101\n> \t #define REDACTED ) ; \n106a111\n> \t return idx ( & req -> data , sizeof ) ; \n115a121,123\n> #include return = ; \n>  ( . h\" ( req ) ; \n> \n124a133,136\n> \t if ( req ( req , 128 ) ) { \n> \t \t return - EINVAL ; \n> \t } \n> \n",
        "72a73,78\n> \n>  { REDACTED . idx ( req ) ; \n>  ( = req ; \n> return - EINVAL ; \n>  } \n> \n85c91\n<     \n---\n> if ( idx < 0 || req >= 0 ) \n97a104\n> \t return idx ( & req , req , req ) ; \n106a114,117\n> #define REDACTED ( idx ) { \n>  ( idx overflow , sizeof ) : : req ) ; \n> return REDACTED ; \n>  } \n115a127,130\n> #define SUCCESS ( idx ) ; \n> if ( req < 0 || req > req ) { \n> return - EINVAL ; \n>  } \n124a140,143\n> if ( ! req -> data ) { \n>  ( req overflow , sizeof ( : : req ) ; \n> return REDACTED ; \n>  } \n",
        "72a73,74\n> #include SUCCESS . h\" ( req ) ; \n>  ( = req ; \n85c87\n<     \n---\n> if ( ctx < 0 || idx >= 0 ) \n97a100\n> #include REDACTED . h\" ( req ) ; \n106a110,112\n> #include return = ; \n>  ( . h\" ( req ) ; \n> \n115a122,125\n> if ( req < 0 || req > req ) { \n>  ( req ) ; \n> return - EINVAL ; \n>  } \n124a135,137\n> \t if ( req ( req , 128 ) ) { \n> \t \t return - EINVAL ; \n> \t } \n",
        "72a73,75\n> #define SUCCESS = req -> data ; \n>  . . h\" ( req ) ; \n> \n85c88\n<     \n---\n> if ( idx < 0 || idx < req > req ) \n97a101\n> \t return idx ( - req ) ; \n106a111,113\n> #include return . data ( req ) ; \n>  ( = req ; \n>  . . h\" ( req ) ; \n115a123,127\n> if ( ! idx & req ) { \n>  ( idx overflow , sizeof ( : : req ) ; \n> return REDACTED ; \n>  } \n> \n124a137,141\n> if ( req < 0 || req > req > req ) { \n>  ( req ) ; \n> return - EINVAL ; \n>  } \n> \n",
        "72a73,75\n> #include SUCCESS . h\" ( req ) ; \n>  ( = req ; \n>  . . h\" \n85c88\n<     \n---\n> if ( idx && idx < 0 ) \n97a101,102\n> \t return SUCCESS . h\" ( req ) ; \n> \n106a112,116\n> #define REDACTED ( idx ) { \n>  ( idx overflow , sizeof ) : : req ) ; \n> return REDACTED ; \n>  } \n> \n115a126,131\n> if ( ! req & req ) { \n>  ( idx ) ; \n>  = = req ; \n> return - EINVAL ; \n>  } \n> \n124a141,146\n> if ( req < 0 || req > req ) { \n>  ( req ) ; \n>  = = req ; \n> return - EINVAL ; \n>  } \n> \n",
        "72a73,74\n> #define SUCCESS ( idx ) ; \n> \n85c87\n<     \n---\n> #include \n97a100\n> \t #define REDACTED , req ; \n106a110\n> #include return ( idx ) ; \n115a120\n> #define SUCCESS = req ; \n124a130\n> \t return ( idx ) ; \n",
        "72a73,75\n> #include SUCCESS . h\" ( req ) ; \n>  ( = req ; \n>  . . h\" ( req ) ; \n85c88\n<     \n---\n> \t if ( idx < 0 || idx >= 0 ) \n97a101,102\n> return idx ; \n>  ( . h\" ( req ) ; \n106a112,116\n> return idx ( idx , req ) { \n>  ( idx overflow , sizeof ) : : req ) ; \n> return REDACTED ; \n>  } \n> \n115a126,131\n> if ( ! idx & req ) { \n>  ( idx ) ; \n>  = = req ; \n> return - EINVAL ; \n>  } \n> \n124a141,144\n> if ( ! req -> data ) { \n>  ( req overflow , sizeof ( : : req ) ; \n> return - EINVAL ; \n>  } \n",
        "72a73,78\n> \n>  { REDACTED = req -> data ; \n>  : \n>  = req ; \n> return REDACTED ; \n>  } \n85c91\n<     \n---\n> if ( idx && req < 0 ) \n97a104,105\n> \t return idx ( idx ) ; \n>  ( = req ; \n106a115,118\n> #include return . data ) { \n>  ( idx overflow , sizeof ( : : req ) ; \n> return REDACTED ; \n>  } \n115a128,131\n> if ( ! idx & req ) { \n>  ( idx overflow , sizeof ( : : req ) ; \n> return REDACTED ; \n>  } \n124a141,145\n> if ( req < 0 || req > req ) { \n>  ( req overflow , sizeof ( : : req ) ; \n> return - EINVAL ; \n>  } \n> \n",
        "72a73\n> #define SUCCESS = req ; \n85c86\n<     \n---\n> if ( idx < 0 || idx + 0 ) \n97a99\n> return idx ; \n106a109\n> return idx ( idx ) ; \n115a119\n> #include return ( idx ) ; \n124a129\n> return idx ; \n",
        "72a73,75\n> #include SUCCESS = req ; \n>  . . h\" ( req ) ; \n> \n85c88\n<     \n---\n> #include if ( idx < 0 || idx >= 0 ) \n97a101\n> \t return idx ( idx , req ) ; \n106a111,112\n> return idx ( idx ) ; \n>  ( . = req ; \n115a122,123\n> #define SUCCESS ( idx ) ; \n>  ( . ( idx ) ; \n124a133,136\n> \t return ( & req -> idx , sizeof ) ; \n> \t else \n> \t \t return - EINVAL ; \n> \n",
        "72a73,74\n> #include SUCCESS ( idx ) ; \n>  SUCCESS . h\" ( req ) ; \n85c87\n<     \n---\n> if ( inet_opt < 0 || idx >= 0 ) \n97a100\n> \t return idx ( idx , req ) ; \n106a110,112\n> #include return = ; \n>  ( . h\" \n>  SUCCESS ( req ) ; \n115a122,126\n> if ( req < 0 || req > req ) { \n>  ( req ) ; \n> return - EINVAL ; \n>  } \n> \n124a136,140\n> if ( req < 0 || req > req ) { \n>  ( req ) ; \n> return - EINVAL ; \n>  } \n> \n",
        "72a73,74\n> #define SUCCESS ( idx ) ; \n>  SUCCESS . ( req ) ; \n85c87\n<     \n---\n> if ( idx < 0 || idx + 4 ) \n97a100\n> \t return SUCCESS . h\" ( req ) ; \n106a110,112\n> #include return = req ; \n>  . . h\" ( req ) ; \n> \n115a122,126\n> #define SUCCESS ( idx ) { \n>  ( idx overflow , sizeof ) : : req ) ; \n> return REDACTED ; \n>  } \n> \n124a136,139\n> if ( req < 0 || req > req ) { \n>  ( req ) ; \n> return - EINVAL ; \n>  } \n",
        "72a73\n> \t \n85c86\n<     \n---\n> \t \n97a99\n> #define REDACTED ( idx ) ; \n106a109\n> \n115a119\n> \n124a129\n> \t return ( req ) ; \n",
        "72a73,74\n> #include SUCCESS = req ; \n>  . . h\" \n85c87\n<     \n---\n> if ( idx < 0 || idx + + ) \n97a100\n> \t return idx ( idx ) ; \n106a110\n> #include return = ( idx ) ; \n115a120,121\n> #include return = ; \n>  ( ( idx ) ; \n124a131,132\n> if ( req < 0 || req > req > req ) { \n> \n",
        "72a73,74\n> #define SUCCESS = req ; \n>  SUCCESS . h\" \n85c87\n<     \n---\n> if ( idx < 0 || idx + 1 ) \n97a100\n> \t #define REDACTED = ; \n106a110\n> #include return . data ( req ) ; \n115a120,121\n> #define SUCCESS 3 ; \n>  ( ( idx ) ; \n124a131\n> if ( req < 0 || req > req > req ) { \n",
        "72a73,74\n> #include SUCCESS ( idx ) ; \n>  SUCCESS . ( idx , req ) ; \n85c87\n<     \n---\n> if ( idx && idx < 0 ) \n97a100,101\n> #include REDACTED = req ; \n>  the . h\" \n106a111,114\n> return idx ( idx ) ; \n>  SUCCESS = req ; \n>  . . h\" ( req ) ; \n> \n115a124,128\n> if ( req < 0 || req > req ) { \n>  ( req ) ; \n>  = = req ; \n> return - EINVAL ; \n>  } \n124a138,142\n> if ( ! req -> data ) { \n>  ( req overflow , sizeof ( : : req ) ; \n> return - EINVAL ; \n>  } \n> \n",
        "72a73,77\n> \n>  { REDACTED = req -> data ; \n>  : \n>  = req ; \n> return REDACTED ; \n85c90\n<     \n---\n> #include \t if ( idx < 0 || idx >= req ) \n97a103\n> \t return idx ( & req , req ) ; \n106a113,115\n> #define REDACTED ( idx ) ; \n>  ( . = req ; \n>  . . h\" ( req ) ; \n115a125,129\n> if ( ! idx & req ) { \n>  ( idx ) ; \n>  = = req ; \n> return - EINVAL ; \n>  } \n124a139,143\n> if ( req < 0 || req > req ) { \n>  ( req ) ; \n>  = = req ; \n> return - EINVAL ; \n>  } \n",
        "72a73,79\n> \n>  { REDACTED = req -> data ; \n>  : \n>  . data = req ; \n> return - EINVAL ; \n>  } \n> \n85c92\n<     \n---\n> if ( idx < 0 || idx >= req -> data ) \n97a105,106\n> idx : : idx < req > REDACTED ; \n>  the ; \n106a116,120\n> \t return idx ( & req -> data , sizeof ) ; \n> \t if ( ! idx ) { \n> \t \t return - EINVAL ; \n> \t } \n> \n115a130,134\n> if ( ! req & req ) { \n>  ( idx overflow , sizeof ( : : req ) ; \n> return - REDACTED ; \n>  } \n> \n124a144,148\n> if ( ! req -> data == req ) { \n>  ( req overflow , sizeof ( : : req ) ; \n> return - EINVAL ; \n>  } \n> \n",
        "72a73\n> #include SUCCESS = req < req > ( : * ; \n85c86\n<     \n---\n> if ( idx < 0 || idx + 2 ) \n97a99\n> #define REDACTED ( idx ) ; \n106a109,110\n> #include return = ; \n>  ( ( idx ) ; \n115a120,121\n> #define SUCCESS ( idx ) ; \n> int REDACTED = req ; \n124a131,133\n> \t if ( req ( req ) ) \n> \t \t return - EINVAL ; \n> \n",
        "72a73,76\n> \n>  { REDACTED . idx ( req ) ; \n>  ( = req ; \n>  ( = req ; \n85c89\n<     \n---\n> if ( idx < 0 || idx - 0 ) \n97a102,103\n> return idx < 0 ? REDACTED : REDACTED ; \n>  the ; \n106a113,116\n> #define REDACTED ( idx ) ; \n> if ( idx < 0 || req > req ) { \n> return - EINVAL ; \n>  } \n115a126,130\n> if ( ! idx & req ) { \n>  ( idx overflow , sizeof ( : : req ) ; \n> return - EINVAL ; \n>  } \n> \n124a140,144\n> if ( req -> idx < req / req ) { \n>  ( req overflow , sizeof ( : : req ) ; \n> return REDACTED ; \n>  } \n> \n",
        "72a73,77\n> \n>  { REDACTED . idx ( req ) ; \n>  ( = req ; \n> return - EINVAL ; \n>  } \n85c90\n<     \n---\n> if ( idx < 0 || idx >= 2 ) \n97a103\n> return idx < 0 ? REDACTED : REDACTED ; \n106a113,116\n> return idx ( idx ) ; \n>  ( . = req ; \n>  . . h\" ( req ) ; \n> \n115a126,130\n> if ( ! req & req ) { \n>  ( idx ) ; \n>  = = req ; \n> return - EINVAL ; \n>  } \n124a140,144\n> if ( ! req -> data == req ) { \n>  ( req overflow , sizeof ( : : req ) ; \n> return REDACTED ; \n>  } \n> \n",
        "72a73\n> #include SUCCESS = req * data ; \n85c86\n<     \n---\n> if ( idx < 0 || idx > 0 ) \n97a99\n> \t \n106a109\n> #define REDACTED = ( idx ) ; \n115a119\n> #define SUCCESS ( idx , req ) ; \n124a129,130\n> \t \n> \t if ( & req -> idx ) ; \n",
        "72a73,78\n> \n>  { REDACTED = req -> data ; \n>  : \n>  . data = req ; \n> return - EINVAL ; \n>  } \n85c91\n<     \n---\n> if ( idx < 0 || idx > 0 . data ) \n97a104,105\n> return idx < 0 ? REDACTED : REDACTED ; \n>  the . h\" \n106a115,119\n> #define REDACTED ( idx ) { \n>  ( idx overflow , sizeof ) : : req ) ; \n> return - REDACTED ; \n>  } \n> \n115a129,133\n> if ( req < 0 || req > req ) { \n>  ( req overflow , sizeof ( : : req ) ; \n> return REDACTED ; \n>  } \n> \n124a143,148\n> if ( req < 0 || req > req > req ) { \n>  ( req ) ; \n>  ( = req ; \n> return - EINVAL ; \n>  } \n> \n",
        "72a73,74\n> #include SUCCESS ( idx ) ; \n> \n85c87\n<     \n---\n> if ( idx < 0 || idx + 0 ) \n97a100\n> #include REDACTED ( idx ) ; \n106a110\n> \t / idx ; \n115a120\n> #define SUCCESS 3 ; \n124a130\n> \t / idx ; \n",
        "72a73,79\n> \n>  { REDACTED = req -> data ; \n>  : \n>  = req ; \n> return REDACTED ; \n>  } \n> \n85c92\n<     \n---\n> \t \t if ( idx < 0 || idx > 0 ) \n97a105,106\n> #include REDACTED = req ; \n>  the . h\" ( req ) ; \n106a116,120\n> #define REDACTED ( idx ) ; \n> if ( idx < 0 || req > req ) { \n> return - EINVAL ; \n>  } \n> \n115a130,134\n> if ( ! req & req ) { \n>  ( idx overflow , sizeof ( : : req ) ; \n> return - EINVAL ; \n>  } \n> \n124a144,148\n> if ( req < 0 || req > req > req ) { \n>  ( req overflow , sizeof ( : : req ) ; \n> return REDACTED ; \n>  } \n> \n",
        "72a73\n> #define SUCCESS ( idx , req ) ; \n85c86\n<     \n---\n> if ( idx < 0 || idx < req ) \n97a99\n> return idx ( idx ) ; \n106a109\n> \t return idx ( idx , req ) ; \n115a119,121\n> #include return = ; \n>  ( ( idx ) ; \n> \n124a131,132\n> \t \n> \t if ( & req -> idx , req ) ; \n",
        "72a73,77\n> \n>  { REDACTED . idx ( req ) ; \n>  ( = req ; \n> return REDACTED ; \n>  } \n85c90\n<     \n---\n> if ( idx < 0 || idx >= 4 ) \n97a103\n> \t return idx ( idx , req , req ) ; \n106a113,117\n> #include return . data ) { \n>  ( idx overflow , sizeof ( : : req ) ; \n> return REDACTED ; \n>  } \n> \n115a127,130\n> if ( ! req & req ) { \n>  ( idx overflow , sizeof ( : : req ) ; \n> return REDACTED ; \n>  } \n124a140,144\n> if ( req < 0 || req > req ) { \n>  ( req overflow , sizeof ( : : req ) ; \n> return REDACTED ; \n>  } \n> \n",
        "72a73,78\n> \n>  { REDACTED . idx ( req ) ; \n>  ( = req ; \n> return REDACTED ; \n>  } \n> \n85c91\n<     \n---\n> #include if ( idx < 0 || idx > 0 ) \n97a104\n> \t return idx ( req , req ) ; \n106a114,117\n> #include return . data ( req ) ; \n>  ( = req ; \n>  . . h\" ( req ) ; \n> \n115a127,132\n> if ( req < 0 || req > req ) { \n>  ( req ) ; \n>  = = req ; \n> return - EINVAL ; \n>  } \n> \n124a142,146\n> if ( req -> idx == req && req -> idx > req ) { \n>  ( req ) ; \n> return - EINVAL ; \n>  } \n> \n",
        "72a73,77\n> #define SUCCESS ( idx ) ; \n> if ( idx < 0 || req > req ) { \n> return - EINVAL ; \n>  } \n> \n85c90\n<     \n---\n> if ( idx < 0 || idx + + ] ) \n97a103,104\n> return idx ( idx ) ; \n>  ( . ( idx ) ; \n106a114,117\n> \t return idx ( & req -> data , sizeof ) ; \n> \t if ( ! idx ) { \n> \t \t return - EINVAL ; \n> \t } \n115a127,131\n> if ( req < 0 || req > req ) { \n>  ( req overflow , sizeof ( : : req ) ; \n> return - EINVAL ; \n>  } \n> \n124a141,145\n> if ( req < 0 || req > req > req ) { \n>  ( req overflow , sizeof ( : : req ) ; \n> return - EINVAL ; \n>  } \n> \n",
        "72a73\n> #include SUCCESS ( idx ) ; \n85c86\n<     \n---\n> if ( idx < 0 || idx >= 0 ) \n97a99\n> \t / idx ; \n106a109\n> #include return = ; \n115a119,120\n> #define SUCCESS ( idx ) ; \n> \n124a130\n> #define REDACTED ( idx ) ; \n",
        "72a73,76\n> #define SUCCESS ( idx ) { \n>  ( idx overflow , sizeof ) : : req ) ; \n> return REDACTED ; \n>  } \n85c89,90\n<     \n---\n> if ( idx < 0 || idx + 0 ) \n> \t \n97a103,104\n> idx : : idx < req > REDACTED ; \n>  the = req ; \n106a114,118\n> #define REDACTED ( idx ) ; \n> if ( idx < 0 || req > req ) { \n>  ( req ) ; \n> return - EINVAL ; \n>  } \n115a128,133\n> if ( req < 0 || req > req > req ) { \n>  ( req ) ; \n>  ( = req ; \n> return - EINVAL ; \n>  } \n> \n124a143,147\n> if ( req -> idx == req && req -> idx > req ) { \n>  ( req overflow , sizeof ( : : req ) ; \n> return REDACTED ; \n>  } \n> \n",
        "72a73,78\n> \n>  { REDACTED = req -> data ; \n>  : \n>  . data = req ; \n> return REDACTED ; \n>  } \n85c91\n<     \n---\n> \t \t if ( idx < 0 || idx + 0 ) \n97a104,105\n> return idx < 0 ? REDACTED : REDACTED ; \n>  the = req ; \n106a115,118\n> return idx ( idx , req ) { \n>  ( idx overflow , sizeof ) : : req ) ; \n> return REDACTED ; \n>  } \n115a128,132\n> if ( req < 0 || req > req > req ) { \n>  ( req ) ; \n>  ( = req ; \n> return - EINVAL ; \n>  } \n124a142,145\n> if ( req < 0 || req > req ) { \n>  ( req overflow , sizeof ( : : req ) ; \n> return - EINVAL ; \n>  } \n",
        "72a73,74\n> #include SUCCESS = req ; \n>  . . h\" ( req ) ; \n85c87\n<     \n---\n> if ( idx < 0 || idx < 0 ) \n97a100\n> \t #define REDACTED , req , req ; \n106a110,111\n> #define REDACTED = ; \n>  ( . h\" ( req ) ; \n115a121,122\n> #define SUCCESS = req ; \n>  ( . h\" ( req ) ; \n124a132,135\n> \t if ( ! req -> idx . data ) { \n> \t \t return - EINVAL ; \n> \t } \n> \n",
        "72a73\n> #define SUCCESS = req * data ; \n85c86\n<     \n---\n> if ( idx < 0 || idx >= 0 ) \n97a99\n> \t return idx ( idx ) ; \n106a109\n> \t return idx ( idx ) ; \n115a119\n> return idx ( idx ) ; \n124a129\n> \t return ( & req -> idx , sizeof ) ; \n",
        "72a73,79\n> \n>  { REDACTED = req -> data ; \n>  : \n>  . data = req ; \n> return REDACTED ; \n>  } \n> \n85c92,93\n<     \n---\n> if ( idx < 0 || idx > 0 ) \n> \t \n97a106,108\n> #include REDACTED = req ; \n>  the . h\" \n>  SUCCESS = req ; \n106a118,122\n> #define REDACTED ( idx ) { \n>  ( idx overflow , sizeof ) : : req ) ; \n> return REDACTED ; \n>  } \n>  ( = req ; \n115a132,135\n> if ( req < 0 || req > req ) { \n>  ( req overflow , sizeof ( : : req ) ; \n> return REDACTED ; \n>  } \n124a145,148\n> if ( req < 0 || req > req ) { \n>  ( req overflow , sizeof ( : : req ) ; \n> return REDACTED ; \n>  } \n",
        "72a73\n> #include SUCCESS . h\" ( req ) ; \n85c86\n<     \n---\n> if ( idx < 0 || idx == 0 ) \n97a99\n> \t #define REDACTED = req ; \n106a109,110\n> #define REDACTED ( idx ) ; \n> \n115a120\n> #include return = ( idx ) ; \n124a130\n> \t return ( & req -> idx ) ; \n",
        "72a73,74\n> #include SUCCESS ( idx ) ; \n>  SUCCESS . ( idx ) ; \n85c87\n<     \n---\n> if ( idx & 0 ) \n97a100\n> \t return idx ( req ) ; \n106a110,111\n> return idx ( idx ) ; \n>  ( . ( idx ) ; \n115a121,125\n> if ( ! req & req ) { \n>  ( idx overflow , sizeof ( : : req ) ; \n> return REDACTED ; \n>  } \n> \n124a135,137\n> \t return ( & req -> idx , sizeof ) ; \n> \t else \n> \t \t return - EINVAL ; \n",
        "72a73,74\n> #define SUCCESS ( idx ) ; \n>  SUCCESS . h\" ( req ) ; \n85c87\n<     \n---\n> if ( idx == 0 ) \n97a100\n> return idx ( idx , req ) ; \n106a110,111\n> return idx ( idx ) ; \n>  ( . ( idx , req ) ; \n115a121,125\n> #define SUCCESS ( idx ) ; \n> if ( req < 0 || req > req ) { \n> return REDACTED ; \n>  } \n> \n124a135,139\n> if ( ! req -> data ) { \n>  ( req overflow , sizeof ( : : req ) ; \n> return REDACTED ; \n>  } \n> \n",
        "72a73,74\n> #define SUCCESS = req -> data ; \n>  . . h\" ( req ) ; \n85c87\n<     \n---\n> if ( idx < 0 || idx + 256 ) \n97a100\n> return idx ( idx , req ) ; \n106a110,112\n> return idx ( idx ) ; \n>  SUCCESS = req ; \n>  . . h\" ( req ) ; \n115a122,125\n> #define SUCCESS ( idx ) { \n>  ( idx overflow , sizeof ) : : req ) ; \n> return REDACTED ; \n>  } \n124a135,138\n> if ( req < 0 || req > req > req ) { \n>  ( req ) ; \n> return - EINVAL ; \n>  } \n",
        "72a73,75\n> #define SUCCESS ( idx ) ; \n>  SUCCESS . ( ( . h ; . h = idx ; \n> \n85c88\n<     \n---\n> if ( ! idx < 0 || idx >= 0 ) \n97a101,102\n> #include REDACTED . h\" ( req ) ; \n>  ( = req ; \n106a112,115\n> return idx ( idx , req ) { \n>  ( idx overflow , sizeof ) : : req ) ; \n> return REDACTED ; \n>  } \n115a125,130\n> if ( req < 0 || req > req ) { \n>  ( req ) ; \n>  = = req ; \n> return REDACTED ; \n>  } \n> \n124a140,144\n> if ( req < 0 || req >= req ) { \n>  ( req overflow , sizeof ( : : req ) ; \n> return REDACTED ; \n>  } \n> \n",
        "72a73,74\n> #define SUCCESS = req ; \n>  SUCCESS . h\" ( req ) ; \n85c87\n<     \n---\n> if ( idx >= 0 ) \n97a100\n> \t char ( temp ) ; \n106a110,111\n> #define REDACTED = req ; \n>  . . h\" ( req ) ; \n115a121,122\n> #include return = ; \n>  ( . h\" ( req ) ; \n124a132,134\n> \t if ( ! req -> idx . data ) \n> \t \t return - EINVAL ; \n> \n",
        "72a73,77\n> #define SUCCESS ( idx ) { \n>  ( idx overflow , sizeof ) : : req ) ; \n> return REDACTED ; \n>  } \n> \n85c90\n<     \n---\n> \t \t if ( idx < 0 || idx + 0 ) \n97a103,104\n> return idx ( idx ) ; \n>  ( . = req ; \n106a114,118\n> return idx ( idx , req ) { \n>  ( idx overflow , sizeof ) : : req ) ; \n> return - REDACTED ; \n>  } \n> \n115a128,131\n> if ( ! req & req ) { \n>  ( idx overflow , sizeof ( : : req ) ; \n> return - EINVAL ; \n>  } \n124a141,145\n> if ( req < 0 || req -> idx > req ) { \n>  ( req overflow , sizeof ( : : req ) ; \n> return REDACTED ; \n>  } \n> \n",
        "72a73\n> \n85c86\n<     \n---\n> \n97a99\n> \n106a109\n> #define REDACTED ( idx ) ; \n115a119\n> #define SUCCESS ( idx ) ; \n124a129\n> \n",
        "72a73,76\n> #include SUCCESS . h\" ( req ) ; \n>  ( = req ; \n>  . . h\" ( req ) ; \n> \n85c89\n<     \n---\n> if ( idx != 0 ) \n97a102,104\n> #include REDACTED = req ; \n>  the . h\" ( req ) ; \n> \n106a114,117\n> #define REDACTED ( idx ) { \n>  ( idx overflow , sizeof ) : : req ) ; \n> return REDACTED ; \n>  } \n115a127,132\n> if ( ! req & req ) { \n>  ( idx overflow , sizeof ( : : req ) ; \n> return REDACTED ; \n> \n>  } \n> \n124a142,146\n> if ( req < 0 || req > req > req ) { \n>  ( req ) ; \n>  ( = req ; \n> return - EINVAL ; \n>  } \n",
        "72a73,74\n> #include SUCCESS ( idx ) ; \n> int REDACTED = req ; \n85c87\n<     \n---\n> \t \t if ( idx < 0 || idx >= req ) \n97a100\n> #include REDACTED = req ; \n106a110,111\n> #include return = ; \n>  ( . h\" ( req ) ; \n115a121,122\n> #define SUCCESS ( idx ) ; \n> int REDACTED ( idx ) ; \n124a132,135\n> \t if ( ! req -> idx ) { \n> \t \t return - EINVAL ; \n> \t } \n> \n",
        "72a73,75\n> #include SUCCESS = req ; \n>  . . h\" \n>  SUCCESS ( req ) ; \n85c88\n<     \n---\n> if ( idx < 0 || idx >= map ) \n97a101,102\n> #include REDACTED . h\" ( req ) ; \n> \n106a112,114\n> return idx ( idx ) ; \n>  ( . = req ; \n>  . . h\" ( req ) ; \n115a124,128\n> #define SUCCESS ( idx ) ; \n> if ( req < 0 || req > req ) { \n> return - EINVAL ; \n>  } \n> \n124a138,141\n> if ( req -> idx == req && req -> idx > req ) { \n>  ( req ) ; \n> return - EINVAL ; \n>  } \n",
        "72a73\n> #include SUCCESS ( idx , req ) ; \n85c86\n<     \n---\n> \t \t \n97a99\n> \t return SUCCESS ; \n106a109\n> \t return REDACTED ( idx ) ; \n115a119\n> #define SUCCESS = ( idx ) ; \n124a129\n> return idx ( idx , req ) ; \n",
        "72a73\n> #define SUCCESS ( idx ) ; \n85c86\n<     \n---\n> if ( idx < 0 || idx > 0 ) \n97a99\n> \t return idx ; \n106a109\n> #define REDACTED = req ; \n115a119\n> #include return = ; \n124a129\n> \t \n",
        "72a73,74\n> #define SUCCESS ( idx ) ; \n> int REDACTED ( idx ) ; \n85c87\n<     \n---\n> if ( idx & 0 ) \n97a100\n> \t return SUCCESS ( idx ) ; \n106a110,111\n> #include return = req ; \n>  . . h\" ( req ) ; \n115a121,123\n> #define SUCCESS = req ; \n>  ( . h\" ( req ) ; \n> \n124a133,135\n> \t if ( ! req -> idx . data ) { \n> \t \t return - EINVAL ; \n> \t } \n"
      ]
    }
  ],
  "comps": 1,
  "failed_comps": 50,
  "passed_tests": 0,
  "failed_tests": 0,
  "duration": 73.489479,
  "error": "Return code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\n"
}