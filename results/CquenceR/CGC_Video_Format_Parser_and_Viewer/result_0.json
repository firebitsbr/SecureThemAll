{
  "repair_begin": "2020-10-23 18:12:10.862279",
  "repair_end": "2020-10-23 18:13:25.466625",
  "patches": [
    {
      "target_file": "src/parseCVF.c",
      "fix": "no repair found",
      "edits": [
        "202a203,206\n> if ( size -> width < cvf / index ) { \n> return - EINVAL ; \n>  } \n> \n",
        "202a203,205\n> This : : \n>  < rf > renderedFrames ? cvf : 1 ; \n> return 0 ; \n",
        "202a203,206\n> if ( size -> width < cvf || i -> width > index ) { \n> return 0 ; \n>  } \n> \n",
        "202a203,205\n> \t if ( size < cvf / cvf ) { \n> \t \t return - EINVAL ; \n> \t } \n",
        "202a203,206\n> \t if ( size < cvf / cvf ) { \n> \t \t return - 1 ; \n> \t } \n> \n",
        "202a203,207\n> if ( ! index ) { \n>  ( \"|\\n\" overflow , 8 ( : : 0 ) ; \n> return 0 ; \n>  } \n> \n",
        "202a203\n> / int ; \n",
        "202a203,206\n> \t if ( size < cvf / cvf ) { \n> \t \t return - 1 ; \n> \t } \n> \t } \n",
        "202a203,207\n> if ( ! pNewImage ) { \n>  ( \"|\\n\" overflow , 8 ( : : 0 ) ; \n> return 0 ; \n>  } \n> \n",
        "202a203\n> \t / int ; \n",
        "202a203,206\n> \t if ( size < cvf / cvf ) { \n> \t \t return - EINVAL ; \n> \t } \n> \n",
        "202a203,205\n> if ( size -> width < cvf / index ) { \n> return - EINVAL ; \n>  } \n",
        "202a203,206\n> if ( size -> width < cvf || i < cvf ) { \n> return 1 ; \n>  } \n> \n",
        "202a203\n> \t \n",
        "202a203,204\n> \t \n> \t if ( & index , rf ) ; \n",
        "202a203,205\n> int / = NULL ; \n>  = flag ; \n> goto size ; \n",
        "202a203,207\n> if ( ! index & rf ) { \n>  ( index ) ; \n> return - EINVAL ; \n>  } \n> \n",
        "202a203,206\n> \t if ( size < cvf / cvf ) { \n> \t \t return - EINVAL ; \n> \t } \n> \t } \n",
        "202a203,208\n> if ( ! size ) { \n>  ( \"|\\n\" overflow , 8 frame : : 0 ) ; \n> return 0 ; \n> \n>  } \n> \n",
        "202a203,205\n> \t if ( size < cvf ) { \n> \t \t return - EINVAL ; \n> \t } \n",
        "202a203,207\n> if ( ! size ) { \n>  ( \"|\\n\" overflow , 8 frame : : 0 ) ; \n> return 0 ; \n>  } \n> \n",
        "202a203,207\n> if ( size ) { \n>  ( \"|\\n\" overflow , 8 ( : : 0 ) ; \n> return 0 ; \n>  } \n> \n",
        "202a203,204\n> int / = NULL ; \n> goto size ; \n",
        "202a203,208\n> if ( ! pNewImage ) { \n>  ( \"|\\n\" overflow , 8 ( : : 0 ) ; \n> return 0 ; \n> \n>  } \n> \n",
        "202a203\n> int / = NULL ; \n",
        "202a203,208\n> This : : \n>  < rf > renderedFrames : 0 ; \n>  : \n> \t \n>  -> width = NULL ; \n> \n",
        "202a203,205\n> This : : \n>  < rf > renderedFrames : 0 ; \n> return 0 ; \n",
        "202a203,205\n> if ( size -> width < cvf || i < cvf ) { \n> return - EINVAL ; \n>  } \n",
        "202a203,206\n> if ( ! index & rf ) { \n>  ( index ) ; \n> return - EINVAL ; \n>  } \n",
        "202a203,207\n> if ( ! size == 0 && i -> width < cvf ) { \n>  = ( ; \n> return - EINVAL ; \n>  } \n> \n",
        "202a203,204\n> \n> \n",
        "202a203,208\n> if ( ! size != cvf ) { \n>  ( \"|\\n\" overflow , 8 ( : : 0 ) ; \n> return 0 ; \n> \n>  } \n> \n",
        "202a203,207\n> if ( ! size != cvf ) { \n>  ( \"|\\n\" overflow , 8 ( : : 0 ) ; \n> return 0 ; \n>  } \n> \n",
        "202a203,206\n> if ( size -> width < cvf / index ) { \n> return 0 ; \n>  } \n> \n",
        "202a203,204\n> int / = NULL ; \n> return 1 ; \n",
        "202a203,207\n> if ( ! index & rf ) { \n>  ( index overflow , index ( : : 0 ) ; \n> return 0 ; \n>  } \n> \n",
        "202a203\n> / int = NULL ; \n",
        "202a203,206\n> \t if ( size < cvf ) { \n> \t \t return - 1 ; \n> \t } \n> \n",
        "202a203,205\n> \t if ( size < cvf / cvf ) { \n> \t \t return - 1 ; \n> \t } \n",
        "202a203,206\n> if ( size -> width < cvf || i < cvf ) { \n> return - EINVAL ; \n>  } \n> \n",
        "202a203,208\n> if ( size ) { \n>  ( \"|\\n\" overflow , 8 ( : : 0 ) ; \n> return 0 ; \n> \n>  } \n> \n",
        "202a203,206\n> \t if ( size < cvf ) { \n> \t \t return - EINVAL ; \n> \t } \n> \n",
        "202a203,206\n> if ( size ) { \n>  ( \"|\\n\" overflow , 8 ( : : 0 ) ; \n> return 0 ; \n>  } \n",
        "202a203\n> \n",
        "202a203,208\n> if ( ! index ) { \n>  ( \"|\\n\" overflow , 8 ( : : 0 ) ; \n> return 0 ; \n> \n>  } \n> \n",
        "202a203,206\n> if ( size -> width < cvf ) { \n> return 1 ; \n>  } \n> \n",
        "202a203,206\n> \t if ( size < cvf ) { \n> \t \t return - EINVAL ; \n> \t } \n> \t } \n",
        "202a203,204\n> / int = NULL ; \n> goto size ; \n",
        "202a203\n> unsigned \n",
        "202a203,205\n> \t if ( size < cvf ) { \n> \t \t return - 1 ; \n> \t } \n"
      ]
    }
  ],
  "comps": 4,
  "failed_comps": 47,
  "passed_tests": 30,
  "failed_tests": 3,
  "duration": 74.604346,
  "error": "Return code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\n"
}