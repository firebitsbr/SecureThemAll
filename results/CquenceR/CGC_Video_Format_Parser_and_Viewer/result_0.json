{
  "repair_begin": "2020-10-19 13:09:36.470661",
  "repair_end": "2020-10-19 13:10:53.363923",
  "patches": [
    {
      "target_file": "src/parseCVF.c",
      "fix": "no repair found",
      "edits": [
        "202a203,206\n> \t if ( ! size ) { \n> \t \t return - 1 ; \n> \t } \n> \n",
        "202a203,205\n> \t if ( size < 0 || cvf > rf ) { \n> \t \t return - EINVAL ; \n> \t } \n",
        "202a203,208\n> if ( ! width & index ) { \n>  ( \"\\n\" overflow , 8 ( : : 0 ) ; \n> return 0 ; \n> \n>  } \n> \n",
        "202a203,206\n> \t if ( size < 0 || cvf > rf ) { \n> \t \t return - EINVAL ; \n> \t } \n> \n",
        "202a203,208\n> if ( ! index ) { \n>  ( size overflow , 8 ( : : 0 ) ; \n> return 0 ; \n> \n>  } \n> \n",
        "202a203,207\n> if ( size < 0 || cvf < Setup ) { \n>  ( \"\\n\" overflow , 8 ( : : 0 ) ; \n> return 0 ; \n>  } \n> \n",
        "202a203,204\n> int / = NULL ; \n> return size ; \n",
        "202a203,207\n> if ( size < 0 || cvf > > ) { \n>  ( \" overflow , 8 ( : : 0 ) ; \n> return 0 ; \n>  } \n> \n",
        "202a203,207\n> if ( size < 0 || cvf > > ) { \n>  ( \" overflow , 8 ( : : 0 ) ; \n> return 0 ; \n>  } \n> \n",
        "202a203\n> When = = NULL ; \n",
        "202a203,205\n> \t if ( size < 0 || cvf > rf ) { \n> \t \t return - EINVAL ; \n> \t } \n",
        "202a203,208\n> if ( ! size ) { \n>  ( size overflow , 8 ( : : 0 ) ; \n> return 0 ; \n> \n>  } \n> \n",
        "202a203,207\n> if ( ! size ) { \n>  ( size overflow , 8 ( : : 0 ) ; \n> return 0 ; \n>  } \n> \n",
        "202a203\n> \t \n",
        "202a203,206\n> \t if ( size < size ) { \n> \t \t return - EINVAL ; \n> \t } \n> \n",
        "202a203,205\n> \t if ( ! index ) { \n> \t \t return - EINVAL ; \n> \t } \n",
        "202a203,207\n> if ( ! width & index ) { \n>  ( \"\\n\" overflow , 8 ( : : 0 ) ; \n> return 0 ; \n>  } \n> \n",
        "202a203,207\n> if ( size < 0 || cvf < Setup ) { \n>  ( \"\\n\" overflow , 8 ( : : 0 ) ; \n> return 0 ; \n>  } \n> \n",
        "202a203,207\n> if ( size < 0 || size == >= ) { \n>  ( size overflow , 8 - : : 0 ) ; \n> return 0 ; \n>  } \n> \n",
        "202a203,205\n> \t if ( ! size ) { \n> \t \t return - EINVAL ; \n> \t } \n",
        "202a203,207\n> if ( size < 0 || cvf > > > rCount ) { \n>  ( \"\\n\" overflow , 8 ( : : 0 ) ; \n> return 0 ; \n>  } \n> \n",
        "202a203,207\n> if ( ! size ) { \n>  ( size overflow , 8 ( : : % d is frame \" , 0 ) ; \n> return 0 ; \n>  } \n> \n",
        "202a203,205\n> \t if ( size < size ) { \n> \t \t return - EINVAL ; \n> \t } \n",
        "202a203,208\n> if ( size < 0 || cvf < Setup ) { \n>  ( \"\\n\" overflow , 8 ( : : 0 ) ; \n> return 0 ; \n> \n>  } \n> \n",
        "202a203\n> pframe = = NULL ; \n",
        "202a203,207\n> if ( ! size && cvf < Setup ) { \n>  ( \"\\n\" overflow , 8 ( : : 0 ) ; \n> return 0 ; \n>  } \n> \n",
        "202a203,206\n> \t if ( ! index ) { \n> \t \t return - EINVAL ; \n> \t } \n> \n",
        "202a203,207\n> if ( ! size != size ) { \n>  ( size overflow , 8 ( : : 0 ) ; \n> return 0 ; \n>  } \n> \n",
        "202a203,207\n> if ( ! size == NULL ) { \n>  ( size overflow , 8 ( : : 0 ) ; \n> return 0 ; \n>  } \n> \n",
        "202a203,208\n> if ( size < 0 || cvf < Setup ) { \n>  ( \"\\n\" overflow , 8 ( : : 0 ) ; \n> return 0 ; \n> \n>  } \n> \n",
        "202a203,204\n> \n> \n",
        "202a203,208\n> if ( size < 0 || cvf > > > rCount ) { \n>  ( \"\\n\" overflow , 8 ( : : 0 ) ; \n> return 0 ; \n> \n>  } \n> \n",
        "202a203,206\n> if ( ! size ) { \n>  ( size overflow , 8 ( : : % d is frame \" , 0 ) ; \n> return 0 ; \n>  } \n",
        "202a203,205\n> \t if ( size < size ) { \n> \t \t return - 1 ; \n> \t } \n",
        "202a203,205\n> \t if ( ! size ) { \n> \t \t return - EINVAL ; \n> \t } \n",
        "202a203,207\n> if ( size < 0 || ! cvf > rCount ) { \n>  ( \"\\n\" overflow , 8 ( : : 0 ) ; \n> return 0 ; \n>  } \n> \n",
        "202a203,205\n> \t if ( ! size ) \n> \t \t return - EINVAL ; \n> \n",
        "202a203,206\n> \t if ( size < size ) { \n> \t \t return - EINVAL ; \n> \t } \n> \t } \n",
        "202a203,207\n> if ( ! index ) { \n>  ( size overflow , 8 ( : : 0 ) ; \n> return 0 ; \n>  } \n> \n",
        "202a203,207\n> if ( size < 0 || size == >= ) { \n>  ( size ) ; \n> return - EINVAL ; \n>  } \n> \n",
        "202a203,208\n> if ( ! size && cvf < Setup ) { \n>  ( \"\\n\" overflow , 8 ( : : 0 ) ; \n> return 0 ; \n> \n>  } \n> \n",
        "202a203,205\n> \t if ( ! size ) { \n> \t \t return - 1 ; \n> \t } \n",
        "202a203,207\n> if ( ! size != size && size - rCount ) { \n>  ( \"\\n\" overflow , 8 ( : : 0 ) ; \n> return 0 ; \n>  } \n> \n",
        "202a203\n> \n",
        "202a203,207\n> if ( size < 0 || cvf > > > rCount ) { \n>  ( \"\\n\" overflow , 8 ( : : 0 ) ; \n> return 0 ; \n>  } \n> \n",
        "202a203,206\n> \t if ( ! size ) { \n> \t \t return - EINVAL ; \n> \t } \n> \n",
        "202a203,206\n> if ( ! size ) { \n>  ( size overflow , 8 ( : : 0 ) ; \n> return 0 ; \n>  } \n",
        "202a203,206\n> \t if ( ! size ) { \n> \t \t return - EINVAL ; \n> \t } \n> \n",
        "202a203\n> int / = NULL ; \n",
        "202a203,206\n> \t if ( size < 0 || cvf > rf ) { \n> \t \t return - EINVAL ; \n> \t } \n> \n"
      ]
    }
  ],
  "comps": 6,
  "failed_comps": 45,
  "passed_tests": 30,
  "failed_tests": 5,
  "duration": 76.893262,
  "error": "Return code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\n"
}