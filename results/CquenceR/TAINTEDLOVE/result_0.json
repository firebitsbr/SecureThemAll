{
  "repair_begin": "2020-10-23 18:43:47.076109",
  "repair_end": "2020-10-23 18:44:27.450037",
  "patches": [
    {
      "target_file": "src/service.c",
      "fix": "no repair found",
      "edits": [
        "89c89,90\n<     \n---\n> len = sz_alloc_align ; \n>  = sz_alloc_align + 2 ; \n158,159c159,161\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> / / ; / / The ; / : \n> \t \t / . g = ( ; \n> \n428c430,432\n<     }\n---\n> } if ( ( < 0 || XOR_CONST_OFF_PTR > SYSCALL_CONST_OFF ) { \n> \t \t return - EINVAL ; \n> \t } \n547c551\n<         // rx_buf[VULN_OFF] = 1\n---\n> \t \t size_t / rx_buf ; \n",
        "89c89,91\n<     \n---\n> len = sz_alloc_align ; \n>  = = sz_alloc_align ; \n> \n158,159c160,162\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> \t \t if ( ! e ( & map , 0 ) ) \n> \t \t \t return - EINVAL ; \n> \n428c431,434\n<     }\n---\n> } if ( ( < 0 ) { \n> \t \t return - EINVAL ; \n> \t } \n> \n547c553\n<         // rx_buf[VULN_OFF] = 1\n---\n> / / CONSTIFY < VULN_OFF : \n",
        "89c89,91\n<     \n---\n> \t \t len = = sz_alloc_align ; \n> \n> \t \t \t = GATE_OFF - GATE_OFF ; \n158,159c160,164\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> / / - 2 ) { \n>  ( SKIP_PRIME overflow , len indices : % indices ) ; \n> return - _bail_razzmatazz ; \n>  } \n> \n428c433,436\n<     }\n---\n> } if ( ( < 0 || D > SYSCALL_CONST_OFF ) { \n> \t \t return - EINVAL ; \n> \t } \n> \n547c555,556\n<         // rx_buf[VULN_OFF] = 1\n---\n> \t \t / / [ VULN_OFF ] = 0 ; \n> \n",
        "89c89,91\n<     \n---\n> map . len = sz_alloc_align ; \n>  = sz_alloc_align ; \n> goto len ; \n158,159c160,162\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> \t \t if ( map < e / ( ) { \n> \t \t \t return - EINVAL ; \n> \t \t } \n428c431,433\n<     }\n---\n> } if ( ( < 0 || XOR_CONST_OFF_PTR > SYSCALL_CONST_OFF ) { \n> \t \t return - EINVAL ; \n> \t } \n547c552\n<         // rx_buf[VULN_OFF] = 1\n---\n> \t / / [ VULN_OFF ] = 1 \n",
        "89c89,92\n<     \n---\n> len = sz_alloc_align ; \n>  = sz_alloc_align ; \n>  = sz_alloc_align ; \n> goto / ; \n158,159c161,165\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> / / - 2 ) { \n>  ( SKIP_PRIME overflow , len indices : % indices ) ; \n> return ret ; \n>  } \n> \n428c434,436\n<     }\n---\n> } if ( ( < 0 ) { \n> \t \t return - EINVAL ; \n> \t } \n547c555,556\n<         // rx_buf[VULN_OFF] = 1\n---\n> / / , VULN_OFF ( = 1 ; \n> \n",
        "89c89,91\n<     \n---\n> \t \t len = = sz_alloc_align ; \n> \t \t \t = GATE_OFF - GATE_OFF ; \n> \n158,159c160,162\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> \t \t if ( ! e ( & map , 0 ) ) { \n> \t \t \t return - EINVAL ; \n> \t \t } \n428c431,433\n<     }\n---\n> } if ( ( < 0 || SYSCALL_PROP_OFF > SYSCALL_CONST_OFF ) { \n> \t \t return - EINVAL ; \n> \t } \n547c552\n<         // rx_buf[VULN_OFF] = 1\n---\n> \t \t / / [ VULN_OFF ] = 0 ; \n",
        "89c89\n<     \n---\n> \t \t len = len ; \n158,159c158,159\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> / / vulnerability ; \n>  / = ( ; \n428c428,431\n<     }\n---\n> } if ( ( < SYSCALL_CONST_OFF ) { \n> \t \t return - EINVAL ; \n> \t } \n> \n547c550\n<         // rx_buf[VULN_OFF] = 1\n---\n> \t \t / len ; \n",
        "89c89,91\n<     \n---\n> \t \t len = = sz_alloc_align ; \n> \t else \n> \t \t \t return - EINVAL ; \n158,159c160,163\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> / / - 2 ) { \n>  ( SKIP_PRIME overflow , len indices : % indices ) ; \n> return ret ; \n>  } \n428c432,434\n<     }\n---\n> } } if ( SUCCESS < SYSCALL_CONST_OFF ) { \n> \t \t return - EINVAL ; \n> \t } \n547c553\n<         // rx_buf[VULN_OFF] = 1\n---\n> / / , VULN_OFF ( = 1 - SYM_CONST_PTR_1 ; \n",
        "89c89,92\n<     \n---\n> \t \t len = = sz_alloc_align ; \n> \n> \t \t \t = GATE_OFF - GATE_OFF ; \n> \n158,159c161,164\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> / / - 2 ) { \n>  ( SKIP_PRIME overflow , len indices : % indices ) ; \n> return - _bail_razzmatazz ; \n>  } \n428c433,435\n<     }\n---\n> } if ( ( < 0 || D > SYSCALL_CONST_OFF ) { \n> \t \t return - EINVAL ; \n> \t } \n547c554,557\n<         // rx_buf[VULN_OFF] = 1\n---\n> \t \t if ( SUCCESS < VULN_OFF ) { \n> \t \t \t return - EINVAL ; \n> \t \t } \n> \n",
        "89c89\n<     \n---\n> \t / len ; \n158,159c158\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> / / ; / / = ( ; \n428c427\n<     }\n---\n> } } ( SYSCALL_CONST_OFF ) ; \n547c546,547\n<         // rx_buf[VULN_OFF] = 1\n---\n> \t / / ; \n> \n",
        "89c89,91\n<     \n---\n> len = sz_alloc_align - ( ; \n>  = sz_alloc_align ; \n> goto / ; \n158,159c160,163\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> \t \t if ( ! e ( map ) ) { \n> \t \t \t return - EINVAL ; \n> \t \t } \n> \n428c432,435\n<     }\n---\n> } if ( ( < 0 || rx_buf > SYSCALL_CONST_OFF ) { \n> \t \t return - EINVAL ; \n> \t } \n> \n547c554\n<         // rx_buf[VULN_OFF] = 1\n---\n> / / [ VULN_OFF ] = 1 \n",
        "89c89,91\n<     \n---\n> len = sz_alloc_align + 1 ; \n>  = sz_alloc_align ; \n> goto / ; \n158,159c160,162\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> \t \t if ( map < e / GATE_OFF ) { \n> \t \t \t return - EINVAL ; \n> \t \t } \n428c431,434\n<     }\n---\n> } if ( ( < 0 || SYSCALL_CONST_OFF > SYSCALL_CONST_OFF ) { \n> \t \t return - EINVAL ; \n> \t } \n> \n547c553\n<         // rx_buf[VULN_OFF] = 1\n---\n> \t \t / / , VULN_OFF ; \n",
        "89c89,90\n<     \n---\n> len = sz_alloc_align ; \n>  = sz_alloc_align - GATE_OFF ; \n158,159c159,161\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> \t \t if ( ! e ( map ) ) { \n> \t \t \t return - EINVAL ; \n> \t \t } \n428c430,432\n<     }\n---\n> } if ( ( < 0 || rx_buf > SYSCALL_CONST_OFF ) { \n> \t \t return - EINVAL ; \n> \t } \n547c551\n<         // rx_buf[VULN_OFF] = 1\n---\n> \t \t / / [ VULN_OFF ] = 1 \n",
        "89c89\n<     \n---\n> \t \n158,159c158\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> / / , e + is \n428c427\n<     }\n---\n> \t } \n547c546\n<         // rx_buf[VULN_OFF] = 1\n---\n> \t / / ; \n",
        "89c89,90\n<     \n---\n> \t \n> \t \t len = = sz_alloc_align ; \n158,159c159,162\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> / / ) { \n>  = ( ; \n> return ret ; \n>  } \n428c431,433\n<     }\n---\n> \t if ( ( < SYSCALL_CONST_OFF ) { \n> \t \t return - EINVAL ; \n> \t } \n547c552\n<         // rx_buf[VULN_OFF] = 1\n---\n> \t / len ; \n",
        "89c89,90\n<     \n---\n> \t \t len = = sz_alloc_align ; \n> \t \t } \n158,159c159,161\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> / / ) ; \n>  / / ; / = ( ; \n> goto ret ; \n428c430,434\n<     }\n---\n> } { \n>  = / ; \n> return / ; \n>  } \n> \n547c553\n<         // rx_buf[VULN_OFF] = 1\n---\n> \t \t uint32_t / rx_buf ; \n",
        "89c89,92\n<     \n---\n> len = sz_alloc_align - ( ; \n>  = sz_alloc_align ; \n> goto / ; \n> \n158,159c161,165\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> / / - 2 ) { \n>  ( SKIP_PRIME overflow , len indices : % indices ) ; \n> return ret ; \n>  } \n> \n428c434,436\n<     }\n---\n> } } if ( ! GATE_MAGIC ) { \n> \t \t return - EINVAL ; \n> \t } \n547c555\n<         // rx_buf[VULN_OFF] = 1\n---\n> \n",
        "89c89,92\n<     \n---\n> len = sz_alloc_align - ( ; \n>  = sz_alloc_align ; \n>  = sz_alloc_align ; \n> goto / ; \n158,159c161,162\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> \t \t if ( ! e ( map , & e . g ) ) \n> \t \t \t return - EINVAL ; \n428c431,433\n<     }\n---\n> } if ( ( < 0 || FLOAT_CONST_OFF > SYSCALL_CONST_OFF ) { \n> \t \t return - EINVAL ; \n> \t } \n547c552\n<         // rx_buf[VULN_OFF] = 1\n---\n> \t \t / / [ - 1 ] = 1 ; \n",
        "89c89,93\n<     \n---\n> if ( len < 0 || GATE_OFF > 2 ) { \n>  = sz_alloc_align ; \n> return - EINVAL ; \n>  } \n> \n158,159c162,165\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> \t \t if ( map < e ) { \n> \t \t map . sz_alloc = ( ; \n> \t \t \t return - EINVAL ; \n> \t \t } \n428c434,436\n<     }\n---\n> } if ( ( < 0 || FLOAT_PROP_OFF > SYSCALL_CONST_OFF ) { \n> \t \t return - EINVAL ; \n> \t } \n547c555,557\n<         // rx_buf[VULN_OFF] = 1\n---\n> \t \t if ( SUCCESS < VULN_OFF ) { \n> \t \t \t / rx_buf ; \n> \t \t } \n",
        "89c89,91\n<     \n---\n> len = sz_alloc_align ; \n>  = sz_alloc_align ; \n> goto / ; \n158,159c160,163\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> \t \t if ( map < e ) { \n> \t \t \t return - EINVAL ; \n> \t \t } \n> \n428c432,436\n<     }\n---\n> } { \n>  = / ; \n> goto / ; \n>  } \n> \n547c555\n<         // rx_buf[VULN_OFF] = 1\n---\n> \t / / [ VULN_OFF ] = 1 \n",
        "89c89,92\n<     \n---\n> \t \t len = = sz_alloc_align ; \n> \t else \n> \t \t \t len = len ; \n> \n158,159c161,165\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> \t \t if ( map < e ) { \n> \t \t map . sz_alloc = ( ; \n> \t \t \t return - EINVAL ; \n> \t \t } \n> \n428c434,436\n<     }\n---\n> } if ( ( < 0 || Annoying > SYSCALL_CONST_OFF ) { \n> \t \t return - EINVAL ; \n> \t } \n547c555,556\n<         // rx_buf[VULN_OFF] = 1\n---\n> \t / / || VULN_OFF < SYM_PROP_PTR_1 > ~ ) { \n> \n",
        "89c89,92\n<     \n---\n> len = sz_alloc_align ; \n>  = sz_alloc_align ; \n> goto / ; \n>  = sz_alloc_align ; \n158,159c161,164\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> \t \t if ( ! e ( & map , 0 ) ) { \n> \t \t \t return - EINVAL ; \n> \t \t } \n> \n428c433,435\n<     }\n---\n> } if ( ! GATE_MAGIC ) { \n> \t \t return - EINVAL ; \n> \t } \n547c554,555\n<         // rx_buf[VULN_OFF] = 1\n---\n> / / < rx_buf / VULN_OFF / SYM_CONST_PTR_1 ) { \n> \n",
        "89c89\n<     \n---\n> \t \t len = = 0 ; \n158,159c158,160\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> / / ) { \n>  = ( ; \n> goto len ; \n428c429,432\n<     }\n---\n> \t if ( ( < SYSCALL_CONST_OFF ) { \n> \t \t return - EINVAL ; \n> \t } \n> \n547c551,552\n<         // rx_buf[VULN_OFF] = 1\n---\n> \t \t / / ; \n> \n",
        "89c89,92\n<     \n---\n> \t \t len = = sz_alloc_align ; \n> \t else \n> \t \t \t len = len - GATE_OFF ; \n> \n158,159c161,163\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> \t \t if ( ! e ( map , & e . g ) ) \n> \t \t \t return - EINVAL ; \n> \t \t } \n428c432,435\n<     }\n---\n> } if ( ( < 0 || E > SYSCALL_CONST_OFF ) { \n> \t \t return - EINVAL ; \n> \t } \n> \n547c554,556\n<         // rx_buf[VULN_OFF] = 1\n---\n> \t \t if ( SUCCESS < VULN_OFF ) { \n> \t \t \t return - EINVAL ; \n> \t \t } \n",
        "89c89\n<     \n---\n> \t \t \n158,159c158\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> \n428c427\n<     }\n---\n> } } < / > ptr ; \n547c546\n<         // rx_buf[VULN_OFF] = 1\n---\n> \t \t / - EINVAL ; \n",
        "89c89,92\n<     \n---\n> len = sz_alloc_align ; \n>  = sz_alloc_align - GATE_OFF ; \n>  = sz_alloc_align ; \n> goto / ; \n158,159c161,165\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> / / - 2 ) { \n>  ( SKIP_PRIME overflow , len indices : % indices ) ; \n> return - _bail_razzmatazz ; \n>  } \n> \n428c434,437\n<     }\n---\n> } if ( ( < 0 || Annoying > SYSCALL_CONST_OFF ) { \n> \t \t return - EINVAL ; \n> \t } \n> \n547c556,557\n<         // rx_buf[VULN_OFF] = 1\n---\n> / / , VULN_OFF ( = 1 - SYM_CONST_PTR_1 ; \n> \n",
        "89c89,90\n<     \n---\n> \n>  = sz_alloc_align < GATE_OFF > ( ; \n158,159c159,163\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> / / ) { \n>  = ( ; \n> goto len ; \n>  } \n> \n428c432,435\n<     }\n---\n> } if ( ( ) { \n> \t \t return - EINVAL ; \n> \t } \n> \n547c554\n<         // rx_buf[VULN_OFF] = 1\n---\n> \t \t u16 / rx_buf ; \n",
        "89c89,90\n<     \n---\n> \t \t len = = sz_alloc_align ; \n> \t \t \t . 2 = GATE_OFF ; \n158,159c159,163\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> / / ) ; \n>  / / ; / = ( ; \n>  : \n> \t \t / . g = ( ; \n> \n428c432,435\n<     }\n---\n> } if ( ( < 0 || SYSCALL_PROP_OFF > SYSCALL_CONST_OFF ) { \n> \t \t return - EINVAL ; \n> \t } \n> \n547c554,555\n<         // rx_buf[VULN_OFF] = 1\n---\n> \t / / [ VULN_OFF ] = 1 ; \n> \n",
        "89c89,90\n<     \n---\n> \t \t len = = sz_alloc_align ; \n> \t \t \t = GATE_OFF ; \n158,159c159,161\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> \t \t if ( ! e ( map ) ) \n> \t \t \t return - EINVAL ; \n> \t \t } \n428c430,433\n<     }\n---\n> } } if ( SUCCESS < SYSCALL_CONST_OFF ) { \n> \t \t return - EINVAL ; \n> \t } \n> \n547c552\n<         // rx_buf[VULN_OFF] = 1\n---\n> \t / / [ VULN_OFF ] = 1 ; \n",
        "89c89,92\n<     \n---\n> if ( len < 0 || GATE_OFF > 2 ) { \n>  = sz_alloc_align ; \n> return - EINVAL ; \n>  } \n158,159c161,166\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> / / - 2 ) { \n>  ( SKIP_PRIME overflow , len indices : % indices ) ; \n>  = & e ; \n> break ; \n>  } \n> \n428c435,438\n<     }\n---\n> } if ( ( < 0 || GATE_MAGIC > SYSCALL_CONST_OFF ) { \n> \t \t return - EINVAL ; \n> \t } \n> \n547c557,560\n<         // rx_buf[VULN_OFF] = 1\n---\n> \t \t if ( SUCCESS < VULN_OFF ) { \n> \t \t \t / rx_buf ) ; \n> \t \t } \n> \n",
        "89c89\n<     \n---\n> \t \t len = = sz_alloc_align ; \n158,159c158\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> / / , e + . \n428c427\n<     }\n---\n> \n547c546\n<         // rx_buf[VULN_OFF] = 1\n---\n> \t / / ) ; \n",
        "89c89,92\n<     \n---\n> \t \t len = = sz_alloc_align ; \n> \t \t \t . 2 = GATE_OFF ; \n> \t \t . 2 = sz_alloc_align ; \n> \n158,159c161,165\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> / / - 2 ) { \n>  ( SKIP_PRIME overflow , len indices : % indices ) ; \n> return - _bail_razzmatazz ; \n>  } \n>  = ( ; \n428c434,437\n<     }\n---\n> } if ( ( < 0 || XOR_CONST_OFF > SYSCALL_CONST_OFF ) { \n> \t \t return - EINVAL ; \n> \t } \n> \n547c556,559\n<         // rx_buf[VULN_OFF] = 1\n---\n> \t \t if ( SUCCESS < VULN_OFF ) { \n> \t \t \t / rx_buf ; \n> \t \t } \n> \n",
        "89c89,93\n<     \n---\n> \t \t len = = sz_alloc_align ; \n> \t else \n> \t \t \t return - EINVAL ; \n> \n> \t map = len ; \n158,159c162,166\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> \t \t if ( ! e ( map , & e . g ) ) \n> \t \t \t return - EINVAL ; \n> \n> \t \t / = ( - GATE_OFF ; \n> \n428c435,437\n<     }\n---\n> \t } if ( SUCCESS < SYSCALL_CONST_OFF ) { \n> \t \t return - EINVAL ; \n> \t } \n547c556,558\n<         // rx_buf[VULN_OFF] = 1\n---\n> \t \t if ( SUCCESS < VULN_OFF ) { \n> \t \t \t / rx_buf ) ; \n> \t \t } \n",
        "89c89\n<     \n---\n> \t \t len = sz_alloc_align - GATE_OFF ; \n158,159c158,161\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> / / ) ; \n>  / / ; / : \n> \t \t / . g = ( ; \n> \n428c430,434\n<     }\n---\n> } } { \n>  = / ; \n> return / ; \n>  } \n> \n547c553\n<         // rx_buf[VULN_OFF] = 1\n---\n> \t \t / / | 1 ; \n",
        "89c89\n<     \n---\n> \t \t len = sz_alloc_align ; \n158,159c158,159\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> / / = ( ; \n>  / = ( ; \n428c428,430\n<     }\n---\n> } if ( ( < SYSCALL_CONST_OFF ) { \n> \t \t return - EINVAL ; \n> \t } \n547c549\n<         // rx_buf[VULN_OFF] = 1\n---\n> \t \t / false ; \n",
        "89c89,91\n<     \n---\n> \t \t len = = sz_alloc_align ; \n> \t \t \t . 2 = GATE_OFF ; \n> \t case len = sz_alloc_align ; \n158,159c160,163\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> \t \t if ( ! e ( map , & e . g ) ) \n> \t \t \t return - EINVAL ; \n> \n> \t \t / = ( - GATE_OFF ; \n428c432,434\n<     }\n---\n> } if ( ( < 0 || GATE_MAGIC > SYSCALL_CONST_OFF ) { \n> \t \t return - EINVAL ; \n> \t } \n547c553,555\n<         // rx_buf[VULN_OFF] = 1\n---\n> \t \t if ( SUCCESS < VULN_OFF ) { \n> \t \t \t goto / ; \n> \t \t } \n",
        "89c89,90\n<     \n---\n> \t \t len = = sz_alloc_align ; \n> \t \n158,159c159,160\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> / / vulnerability = ( ; \n>  / = ( ; \n428c429,433\n<     }\n---\n> } { \n>  ( = ( ; \n> return _bail_hooey ; \n>  } \n> \n547c552\n<         // rx_buf[VULN_OFF] = 1\n---\n> \t \t / EINVAL ; \n",
        "89c89,92\n<     \n---\n> len = sz_alloc_align ; \n>  = sz_alloc_align ; \n> goto / ; \n> \n158,159c161,164\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> \t \t if ( map < e / ( ) { \n> \t \t \t return - EINVAL ; \n> \t \t } \n> \n428c433,436\n<     }\n---\n> } } if ( ! GATE_MAGIC ) { \n> \t \t return - EINVAL ; \n> \t } \n> \n547c555\n<         // rx_buf[VULN_OFF] = 1\n---\n> \t \t / / [ VULN_OFF ] = 1 ; \n",
        "89c89,91\n<     \n---\n> \t \t len = = sz_alloc_align ; \n> \t else \n> \t \t \t break ; \n158,159c160,163\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> \t \t if ( map < e / GATE_OFF ) { \n> \t \t \t return - EINVAL ; \n> \t \t } \n> \n428c432,435\n<     }\n---\n> } if ( ! GATE_MAGIC ) { \n> \t \t return - EINVAL ; \n> \t } \n> \n547c554,555\n<         // rx_buf[VULN_OFF] = 1\n---\n> \t \t / / [ VULN_OFF ] = 1 ; \n> \n",
        "89c89,92\n<     \n---\n> \t \t len = = sz_alloc_align ; \n> \t else \n> \t \t \t return - EINVAL ; \n> \n158,159c161,163\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> \t \t if ( ! e ( map , & e . g ) ) \n> \t \t \t return - EINVAL ; \n> \n428c432,434\n<     }\n---\n> } if ( ( < 0 || SYSCALL_CONST_OFF > SYSCALL_CONST_OFF ) { \n> \t \t return - EINVAL ; \n> \t } \n547c553\n<         // rx_buf[VULN_OFF] = 1\n---\n> \t / / [ VULN_OFF ] = 1 ; \n",
        "89c89,92\n<     \n---\n> \t \t len = = sz_alloc_align ; \n> \t else \n> \t \t \t len = = sz_alloc_align ; \n> \n158,159c161,165\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> \t \t if ( ! e ( map ) ) \n> \t \t \t return - EINVAL ; \n> \n> \t \t / = ( - GATE_OFF ; \n> \n428c434,437\n<     }\n---\n> } if ( ( < 0 || FLOAT_PROP_OFF > SYSCALL_CONST_OFF ) { \n> \t \t return - EINVAL ; \n> \t } \n> \n547c556\n<         // rx_buf[VULN_OFF] = 1\n---\n> \t / / || VULN_OFF < SYM_PROP_PTR_1 > ~ ) { \n",
        "89c89\n<     \n---\n> \t \t = len - GATE_OFF ; \n158,159c158,160\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> \t \t if ( ! e ( map ) ) \n> \t \t \t return - EINVAL ; \n> \n428c429,431\n<     }\n---\n> } if ( ( ) { \n> \t \t return - EINVAL ; \n> \t } \n547c550\n<         // rx_buf[VULN_OFF] = 1\n---\n> \t \t / / EINVAL ; \n",
        "89c89,93\n<     \n---\n> \t \t len = = sz_alloc_align ; \n> \t else \n> \t \t \t return - EINVAL ; \n> \n> \t \t } \n158,159c162,165\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> \t \t if ( map < e ) { \n> \t \t \t if ( map < e ) \n> \t \t \t return - EINVAL ; \n> \t \t } \n428c434,436\n<     }\n---\n> } if ( ( < 0 || E > SYSCALL_CONST_OFF ) { \n> \t \t return - EINVAL ; \n> \t } \n547c555,558\n<         // rx_buf[VULN_OFF] = 1\n---\n> \t \t if ( SUCCESS < VULN_OFF ) { \n> \t \t \t return - rx_buf ; \n> \t \t } \n> \n",
        "89c89\n<     \n---\n> \n158,159c158\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> \t \t / / ; \n428c427\n<     }\n---\n> } \n547c546\n<         // rx_buf[VULN_OFF] = 1\n---\n> \t \t / / ; \n",
        "89c89,92\n<     \n---\n> \t \t len = = sz_alloc_align ; \n> \t else \n> \t \t \t len = - EINVAL ; \n> \n158,159c161,165\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> \t \t if ( map < e ) { \n> \t \t \t if ( map < e ) \n> \t \t \t return - EINVAL ; \n> \t \t } \n> \n428c434,437\n<     }\n---\n> \t } if ( SUCCESS < SYSCALL_CONST_OFF ) { \n> \t \t return - EINVAL ; \n> \t } \n> \n547c556,557\n<         // rx_buf[VULN_OFF] = 1\n---\n> \t \t / / [ - 1 ] = 1 ; \n> \n",
        "89c89,90\n<     \n---\n> \n> \n158,159c159,161\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> \t \t if ( map < e ) { \n> \t \t \t return - EINVAL ; \n> \t \t } \n428c430,433\n<     }\n---\n> } if ( ( < 0 || XOR_CONST_OFF_PTR > SYSCALL_CONST_OFF ) { \n> \t \t return - EINVAL ; \n> \t } \n> \n547c552,553\n<         // rx_buf[VULN_OFF] = 1\n---\n> / / - ( ) { \n> \n",
        "89c89,91\n<     \n---\n> \t \t len = = sz_alloc_align ; \n> \t \t \t . 2 = GATE_OFF ; \n> \n158,159c160,161\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> \t \t if ( ! e ( & map , 0 ) ) \n> \t \t \t return - EINVAL ; \n428c430,433\n<     }\n---\n> } if ( ( < 0 || FLOAT_CONST_OFF > SYSCALL_CONST_OFF ) { \n> \t \t return - EINVAL ; \n> \t } \n> \n547c552,553\n<         // rx_buf[VULN_OFF] = 1\n---\n> \t / / ; \n>  / = ~ ; \n",
        "89c89,90\n<     \n---\n> len = sz_alloc_align ; \n>  = = sz_alloc_align ; \n158,159c159,163\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> / / ) { \n>  = ( ; \n> return ret ; \n>  } \n> \n428c432,434\n<     }\n---\n> cgc_size_t { \n>  = ( ; \n> goto / ; \n547c553\n<         // rx_buf[VULN_OFF] = 1\n---\n> \t / EINVAL ; \n",
        "89c89,90\n<     \n---\n> \t \t len = = sz_alloc_align ; \n> \n158,159c159\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> \t \t uint32_t / The ; \n428c428\n<     }\n---\n> } } \n547c547\n<         // rx_buf[VULN_OFF] = 1\n---\n> \t \t / / ) ; \n",
        "89c89,90\n<     \n---\n> \t \t len = = sz_alloc_align ; \n> \t \t \n158,159c159,162\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> / / ; / / = ( ; \n>  : \n> \t \t / . g = ( ; \n> \n428c431,434\n<     }\n---\n> } if ( ( < 0 || XOR_CONST_OFF_PTR > SYSCALL_CONST_OFF ) { \n> \t \t return - EINVAL ; \n> \t } \n> \n547c553\n<         // rx_buf[VULN_OFF] = 1\n---\n> / / , VULN_OFF ( = 1 ; \n"
      ]
    }
  ],
  "comps": 1,
  "failed_comps": 50,
  "passed_tests": 0,
  "failed_tests": 0,
  "duration": 40.373928,
  "error": "Return code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\n"
}