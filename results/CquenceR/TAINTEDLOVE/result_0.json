{
  "repair_begin": "2020-10-19 13:27:37.984805",
  "repair_end": "2020-10-19 13:28:37.263955",
  "patches": [
    {
      "target_file": "src/service.c",
      "fix": "no repair found",
      "edits": [
        "89c89,90\n<     \n---\n> len = sz_alloc_align ; \n> \n158,159c159,161\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> \t \t if ( map < The ) { \n> \t \t \t return - EINVAL ; \n> \t \t } \n428c430,432\n<     }\n---\n> \t if ( GATE_MAGIC < SYSCALL_CONST_OFF ) { \n> \t \t return - EINVAL ; \n> \t } \n547c551\n<         // rx_buf[VULN_OFF] = 1\n---\n> / / CONSTIFY [ SYM_CONST_PTR_1 ] = 1 \n",
        "89c89,90\n<     \n---\n> len = sz_alloc_align ; \n> int len = sz_alloc_align ; \n158,159c159,160\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> \t \t if ( ! e ( map ) ) \n> \t \t \t return - EINVAL ; \n428c429,432\n<     }\n---\n> } } if ( ! GATE_MAGIC ) { \n> \t \t return - EINVAL ; \n> \t } \n> \n547c551\n<         // rx_buf[VULN_OFF] = 1\n---\n> / / CONSTIFY [ j ] = 1 \n",
        "89c89,92\n<     \n---\n> \n>  = sz_alloc_align ; \n>  = sz_alloc_align ; \n> goto / ; \n158,159c161,165\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> \t \t if ( map < The ) { \n> \t \t \t if ( map < e ) \n> \t \t \t return - EINVAL ; \n> \t \t } \n> \n428c434,436\n<     }\n---\n> } if ( ( < 0 || FLOAT_CONST_OFF > 1+rx_buf ) { \n> \t \t return - EINVAL ; \n> \t } \n547c555,556\n<         // rx_buf[VULN_OFF] = 1\n---\n> / / CONSTIFY [ j ] = 1 ; \n> \n",
        "89c89,90\n<     \n---\n> len = sz_alloc_align ; \n>  = / ex ; \n158,159c159,162\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> \t \t if ( map < The ) { \n> \t \t \t return - failure ; \n> \t \t } \n> \n428c431,434\n<     }\n---\n> } } if ( ! cgc_size_t ) { \n> \t \t return - EINVAL ; \n> \t } \n> \n547c553\n<         // rx_buf[VULN_OFF] = 1\n---\n> / / < rx_buf > = ; \n",
        "89c89,91\n<     \n---\n> len = sz_alloc_align ; \n>  = sz_alloc_align ; \n>  = sz_alloc_align ; \n158,159c160,161\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> \t \t if ( ! e ( map , & e . g ) ) \n> \t \t \t return - EINVAL ; \n428c430,432\n<     }\n---\n> } if ( ( < 0 || 1+rx_buf >= XOR_CONST_OFF_PTR ) { \n> \t \t return - EINVAL ; \n> \t } \n547c551\n<         // rx_buf[VULN_OFF] = 1\n---\n> / / CONSTIFY [ rx_buf ] = 1 \n",
        "89c89,91\n<     \n---\n> len = sz_alloc_align ; \n>  = sz_alloc_align ; \n> goto / ; \n158,159c160,163\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> \t \t if ( map < The ) { \n> \t \t map . sz_alloc = ( ; \n> \t \t \t goto len ; \n> \t \t } \n428c432,434\n<     }\n---\n> } if ( ( < 0 || SYSCALL_PROP_OFF > 1+rx_buf ) { \n> \t \t return - EINVAL ; \n> \t } \n547c553,554\n<         // rx_buf[VULN_OFF] = 1\n---\n> / rx_buf < rx_buf > = = 1 ; \n> \n",
        "89c89,90\n<     \n---\n> len = sz_alloc_align ; \n>  = sz_alloc_align ; \n158,159c159\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> \t \t / / ) ; \n428c428\n<     }\n---\n> } } ( ( SYSCALL_CONST_OFF ) ; \n547c547\n<         // rx_buf[VULN_OFF] = 1\n---\n> / / [ rx_buf ] = 1 \n",
        "89c89,92\n<     \n---\n> len = sz_alloc_align ; \n>  = sz_alloc_align ; \n>  = = sz_alloc_align ; \n> \n158,159c161,166\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> \t \t if ( map < The ) \n> \t \t \t return - EINVAL ; \n> \n> \t \t if ( e < e ) \n> \t \t \t return - EINVAL ; \n> \n428c435,437\n<     }\n---\n> } if ( ( < 0 || D > 1+rx_buf ) { \n> \t \t return - EINVAL ; \n> \t } \n547c556\n<         // rx_buf[VULN_OFF] = 1\n---\n> / / < rx_buf / SYM_CONST_PTR_1 ) = 1 ; \n",
        "89c89,91\n<     \n---\n> len = sz_alloc_align ; \n>  = sz_alloc_align ; \n> int len = sz_alloc_align ; \n158,159c160,165\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> \t \t if ( ! e ( map ) ) \n> \t \t \t return - EINVAL ; \n> \n> \t \t if ( e < e ) \n> \t \t \t return - EINVAL ; \n> \n428c434,437\n<     }\n---\n> } if ( ( < 0 || E > 1+rx_buf ) { \n> \t \t return - EINVAL ; \n> \t } \n> \n547c556\n<         // rx_buf[VULN_OFF] = 1\n---\n> / / < rx_buf > = [ SYM_CONST_PTR_1 ] = 1 \n",
        "89c89\n<     \n---\n> map < len > len ; \n158,159c158\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> \t \t size_t / e ; \n428c427\n<     }\n---\n> \n547c546\n<         // rx_buf[VULN_OFF] = 1\n---\n> / / CONSTIFY [ VULN_OFF ] = 1 \n",
        "89c89,90\n<     \n---\n> map < len > len = sz_alloc_align ; \n> \n158,159c159,161\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> \t \t if ( ! e ( map ) ) \n> \t \t \t return - EINVAL ; \n> \t \t } \n428c430,432\n<     }\n---\n> } } if ( ! GATE_MAGIC ) { \n> \t \t return - EINVAL ; \n> \t } \n547c551\n<         // rx_buf[VULN_OFF] = 1\n---\n> / / CONSTIFY [ SYM_PROP_PTR_1 ] = 1 \n",
        "89c89,91\n<     \n---\n> len = sz_alloc_align ; \n>  = sz_alloc_align ; \n> goto / ; \n158,159c160,161\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> \t \t if ( ! e ( & map , 0 ) ) \n> \t \t \t return - EINVAL ; \n428c430,433\n<     }\n---\n> } if ( ( < 0 || 1+rx_buf >= XOR_CONST_OFF_PTR ) { \n> \t \t return - EINVAL ; \n> \t } \n> \n547c552\n<         // rx_buf[VULN_OFF] = 1\n---\n> / / CONSTIFY [ D ] = 1 \n",
        "89c89\n<     \n---\n> \t \t \t len = = sz_alloc_align ; \n158,159c158,160\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> \t \t if ( ! e ( & e . g ) ) \n> \t \t \t return - EINVAL ; \n> \n428c429,432\n<     }\n---\n> } if ( ( < 0 || rx_buf > 1+rx_buf ) { \n> \t \t return - EINVAL ; \n> \t } \n> \n547c551\n<         // rx_buf[VULN_OFF] = 1\n---\n> / / [ SYM_PROP_VAL ] = 1 \n",
        "89c89\n<     \n---\n> \t \n158,159c158\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> \t / / ; \n428c427\n<     }\n---\n> \t } \n547c546\n<         // rx_buf[VULN_OFF] = 1\n---\n> / / [ VULN_OFF ] = 1 \n",
        "89c89,92\n<     \n---\n> len = sz_alloc_align ; \n>  = sz_alloc_align ; \n> goto / ; \n> \n158,159c161,165\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> / / ) { \n>  = ( ; \n> return ret ; \n>  } \n> \n428c434,436\n<     }\n---\n> } if ( ( < SYSCALL_CONST_OFF ) { \n> \t \t return - EINVAL ; \n> \t } \n547c555\n<         // rx_buf[VULN_OFF] = 1\n---\n> / ret [ VULN_OFF ] = 1 \n",
        "89c89,90\n<     \n---\n> len = sz_alloc_align ; \n> goto / ; \n158,159c159,160\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> / / = ( ; \n>  / = ( ; \n428c429,432\n<     }\n---\n> } if ( ( < 0 || 1+rx_buf > 1+rx_buf ) { \n> \t \t return - EINVAL ; \n> \t } \n> \n547c551\n<         // rx_buf[VULN_OFF] = 1\n---\n> / / [ SYM_PROP_PTR_1 ] = 1 \n",
        "89c89,90\n<     \n---\n> len = sz_alloc_align ; \n>  = sz_alloc_align . size ; \n158,159c159,161\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> \t \t if ( ! e ( & map , 0 ) ) \n> \t \t \t return - EINVAL ; \n> \t \t } \n428c430,433\n<     }\n---\n> } if ( ( < 0 || SYSCALL_CONST_OFF > 1+rx_buf ) { \n> \t \t return - EINVAL ; \n> \t } \n> \n547c552\n<         // rx_buf[VULN_OFF] = 1\n---\n> / / [ VULN_OFF [ SYM_PROP_PTR_1 ] = 1 \n",
        "89c89,91\n<     \n---\n> len = sz_alloc_align ; \n>  = sz_alloc_align ; \n>  = ; \n158,159c160,164\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> \t \t if ( map < The ) { \n> \t \t map . sz_alloc = ( ; \n> \t \t \t goto len ; \n> \t \t } \n> \n428c433,436\n<     }\n---\n> } if ( ( < 0 || D > 1+rx_buf ) { \n> \t \t return - EINVAL ; \n> \t } \n> \n547c555\n<         // rx_buf[VULN_OFF] = 1\n---\n> / / CONSTIFY [ VULN_OFF ] = 1 ; \n",
        "89c89,91\n<     \n---\n> len = sz_alloc_align ; \n> goto / ; \n>  = sz_alloc_align ; \n158,159c160,165\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> \t \t if ( ! e ( map ) ) \n> \t \t \t return - EINVAL ; \n> \n> \t \t if ( e < e ) \n> \t \t \t return - EINVAL ; \n> \t \t } \n428c434,436\n<     }\n---\n> } if ( ( < 0 || XOR_CONST_OFF_PTR >= XOR_CONST_OFF_PTR ) { \n> \t \t return - EINVAL ; \n> \t } \n547c555,556\n<         // rx_buf[VULN_OFF] = 1\n---\n> / / ; / / / ; \n>  / = ~ ; \n",
        "89c89,91\n<     \n---\n> len = sz_alloc_align ; \n>  = = sz_alloc_align ; \n> \n158,159c160,163\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> / / ) { \n>  = ( ; \n> return ret ; \n>  } \n428c432,435\n<     }\n---\n> } if ( ( < 0 || XOR_CONST_OFF_PTR > 1+rx_buf ) { \n> \t \t return - EINVAL ; \n> \t } \n> \n547c554\n<         // rx_buf[VULN_OFF] = 1\n---\n> / / [ VULN_OFF ] = 0 \n",
        "89c89,90\n<     \n---\n> len = sz_alloc_align ; \n>  = sz_alloc_align = ( ; \n158,159c159,163\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> \t \t if ( ! e ( map ) ) \n> \t \t \t return - EINVAL ; \n> \n> \t \t if ( e < e ) \n> \t \t \t return - EINVAL ; \n428c432,435\n<     }\n---\n> } if ( ( < 0 || XOR_CONST_OFF_PTR >= XOR_CONST_OFF_PTR ) { \n> \t \t return - EINVAL ; \n> \t } \n> \n547c554,555\n<         // rx_buf[VULN_OFF] = 1\n---\n> / / [ VULN_OFF ] = 1 ; \n>  / / = 0x ; \n",
        "89c89,90\n<     \n---\n> len = sz_alloc_align ; \n>  = sz_alloc_align | size ; \n158,159c159,162\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> \t \t if ( map < The ) { \n> \t \t map . sz_alloc = ( ; \n> \t \t \t return - EINVAL ; \n> \t \t } \n428c431,433\n<     }\n---\n> } if ( ( < 0 || SYSCALL_CONST_OFF > 1+rx_buf ) { \n> \t \t return - EINVAL ; \n> \t } \n547c552,553\n<         // rx_buf[VULN_OFF] = 1\n---\n> / / CONSTIFY [ VULN_OFF ] = 1 ; \n> \n",
        "89c89\n<     \n---\n> map < len > len = sz_alloc_align ; \n158,159c158\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> \t \t / / | ( ; \n428c427,428\n<     }\n---\n> } } ( ( SYSCALL_CONST_OFF ) ; \n> \n547c547\n<         // rx_buf[VULN_OFF] = 1\n---\n> / rx_buf [ VULN_OFF ] = 1 \n",
        "89c89,91\n<     \n---\n> len = sz_alloc_align + size ; \n>  = sz_alloc_align ; \n> goto / ; \n158,159c160,166\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> \t \t if ( map < The ) { \n> \t \t \t if ( map < e ) \n> \t \t \t return - EINVAL ; \n> \n> \t \t / = ( ; \n> \t \t } \n> \n428c435,438\n<     }\n---\n> } if ( ( < 0 || GATE_MAGIC > 1+rx_buf ) { \n> \t \t return - EINVAL ; \n> \t } \n> \n547c557,558\n<         // rx_buf[VULN_OFF] = 1\n---\n> / / < rx_buf > = = 1 - SYM_CONST_PTR_1 ; \n> \n",
        "89c89,90\n<     \n---\n> len = sz_alloc_align ; \n>  = = sz_alloc_align ; \n158,159c159,160\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> \t \t / / ; \n> \n428c429,431\n<     }\n---\n> \t } else \n> \t \t return - EINVAL ; \n> \n547c550\n<         // rx_buf[VULN_OFF] = 1\n---\n> / / [ SYM_CONST_PTR_1 ] = 1 \n",
        "89c89,91\n<     \n---\n> len = sz_alloc_align ; \n>  = sz_alloc_align - size ; \n> \n158,159c160,163\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> \t \t if ( map < The ) { \n> \t \t \t if ( map < e ) \n> \t \t \t return - EINVAL ; \n> \t \t } \n428c432,435\n<     }\n---\n> } if ( ( < 0 || Annoying > 1+rx_buf ) { \n> \t \t return - EINVAL ; \n> \t } \n> \n547c554,555\n<         // rx_buf[VULN_OFF] = 1\n---\n> / / CONSTIFY [ SYM_CONST_PTR_1 ] = 1 ; \n> \n",
        "89c89,90\n<     \n---\n> len = sz_alloc_align ; \n> return / ; \n158,159c159,161\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> \t \t if ( map < The ) \n> \t \t \t return - EINVAL ; \n> \n428c430,432\n<     }\n---\n> } if ( ( < 0 || 1+rx_buf > 1+rx_buf ) { \n> \t \t return - EINVAL ; \n> \t } \n547c551\n<         // rx_buf[VULN_OFF] = 1\n---\n> / / [ SYM_PROP_PTR_2 ] = 1 \n",
        "89c89,90\n<     \n---\n> len = sz_alloc_align ; \n>  = sz_alloc_align ; ; \n158,159c159,161\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> \t \t if ( ! e ( map , & e . g ) ) \n> \t \t \t return - EINVAL ; \n> \t \t } \n428c430,433\n<     }\n---\n> } if ( ( < 0 || FLOAT_CONST_OFF > 1+rx_buf ) { \n> \t \t return - EINVAL ; \n> \t } \n> \n547c552\n<         // rx_buf[VULN_OFF] = 1\n---\n> / rx_buf < rx_buf > = = 1 ; \n",
        "89c89,91\n<     \n---\n> len = sz_alloc_align ; \n>  = sz_alloc_align ; \n>  = = sz_alloc_align ; \n158,159c160,164\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> \t \t if ( map < The ) { \n> \t \t map . sz_alloc = ( ; \n> \t \t \t return - EINVAL ; \n> \t \t } \n> \n428c433,436\n<     }\n---\n> } if ( ( < 0 || SYSCALL_PROP_OFF > 1+rx_buf ) { \n> \t \t return - EINVAL ; \n> \t } \n> \n547c555,556\n<         // rx_buf[VULN_OFF] = 1\n---\n> / / < rx_buf / SYM_CONST_PTR_1 ) = 1 ; \n> \n",
        "89c89,92\n<     \n---\n> len = sz_alloc_align ; \n>  = sz_alloc_align ; \n>  = sz_alloc_align ; \n> \n158,159c161,166\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> \t \t if ( ! e ( map ) ) \n> \t \t \t return - EINVAL ; \n> \n> \t \t if ( ! e ( map ) ) \n> \t \t \t return - EINVAL ; \n> \t \t } \n428c435,437\n<     }\n---\n> } if ( ( < 0 || FLOAT_PROP_OFF > 1+rx_buf ) { \n> \t \t return - EINVAL ; \n> \t } \n547c556,557\n<         // rx_buf[VULN_OFF] = 1\n---\n> / / [ VULN_OFF ] = 1 ; \n>  / / = 0x ; \n",
        "89c89,91\n<     \n---\n> len = sz_alloc_align ; \n>  = sz_alloc_align ; \n> goto / ; \n158,159c160\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> \t / / ) ; \n428c429\n<     }\n---\n> } } \n547c548\n<         // rx_buf[VULN_OFF] = 1\n---\n> / rx_buf [ VULN_OFF ] = 1 \n",
        "89c89,91\n<     \n---\n> len = sz_alloc_align ; \n>  = sz_alloc_align - size ; \n>  = sz_alloc_align ; \n158,159c160,166\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> \t \t if ( ! e ( map ) ) \n> \t \t \t return - EINVAL ; \n> \n> \t \t if ( ! e ( map ) ) \n> \t \t \t return - EINVAL ; \n> \t \t } \n> \n428c435,438\n<     }\n---\n> } if ( ( < 0 || 1+rx_buf >= XOR_CONST_OFF_PTR ) { \n> \t \t return - EINVAL ; \n> \t } \n> \n547c557,558\n<         // rx_buf[VULN_OFF] = 1\n---\n> / / [ VULN_OFF ] = 1 ; \n> int / / = ~ ; \n",
        "89c89,92\n<     \n---\n> len = sz_alloc_align ; \n>  = sz_alloc_align ; \n> goto / ; \n>  : \n158,159c161,165\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> \t \t if ( ! e ( map ) ) \n> \t \t \t return - EINVAL ; \n> \t \t if ( map < e ) \n> \t \t \t return - EINVAL ; \n> \t \t } \n428c434,436\n<     }\n---\n> } if ( ( < 0 || GATE_MAGIC > 1+rx_buf ) { \n> \t \t return - EINVAL ; \n> \t } \n547c555\n<         // rx_buf[VULN_OFF] = 1\n---\n> / / < rx_buf > = = 1 - SYM_CONST_PTR_1 ; \n",
        "89c89,91\n<     \n---\n> len = sz_alloc_align ; \n>  = sz_alloc_align ; \n> return / ; \n158,159c160,161\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> \t \t if ( map < The ) \n> \t \t \t return - EINVAL ; \n428c430,433\n<     }\n---\n> } if ( ( < 0 || 1+rx_buf > 1+rx_buf ) { \n> \t \t return - EINVAL ; \n> \t } \n> \n547c552,553\n<         // rx_buf[VULN_OFF] = 1\n---\n> / / < rx_buf > = = 1 ; \n> \n",
        "89c89\n<     \n---\n> len = / ex ; \n158,159c158\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> \t \t uint32_t / The ; \n428c427,428\n<     }\n---\n> } } ( = SYSCALL_CONST_OFF ; \n> \n547c547\n<         // rx_buf[VULN_OFF] = 1\n---\n> / / CONSTIFY [ VULN_OFF ] = 1 \n",
        "89c89,91\n<     \n---\n> len = sz_alloc_align ; \n>  = = sz_alloc_align ; \n>  = sz_alloc_align ; \n158,159c160,164\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> \t \t if ( ! e ( & map , 0 ) ) \n> \t \t \t return - EINVAL ; \n> \n> \t \t if ( e < e ) \n> \t \t \t return - EINVAL ; \n428c433,436\n<     }\n---\n> } if ( ( < 0 || 1+rx_buf < XOR_CONST_OFF_PTR ) { \n> \t \t return - EINVAL ; \n> \t } \n> \n547c555,556\n<         // rx_buf[VULN_OFF] = 1\n---\n> / / [ VULN_OFF ] = 1 ; \n> int / / ; \n",
        "89c89\n<     \n---\n> \t \t \n158,159c158\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> / / ex ; \n428c427\n<     }\n---\n> } } ( = SYSCALL_CONST_OFF ; \n547c546,547\n<         // rx_buf[VULN_OFF] = 1\n---\n> / / [ VULN_OFF ] = 1 ; \n> \n",
        "89c89\n<     \n---\n> map < len > = ; \n158,159c158,160\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> \t \t if ( ! e ( map , & e . g ) ) \n> \t \t \t return - EINVAL ; \n> \n428c429,432\n<     }\n---\n> } } if ( SUCCESS < SYSCALL_CONST_OFF ) { \n> \t \t return - EINVAL ; \n> \t } \n> \n547c551\n<         // rx_buf[VULN_OFF] = 1\n---\n> / / [ VULN_OFF ] = 1 ; \n",
        "89c89\n<     \n---\n> map < len = sz_alloc_align ; \n158,159c158,161\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> \t \t if ( ! e ( map ) ) { \n> \t \t \t return - EINVAL ; \n> \t \t } \n> \n428c430,432\n<     }\n---\n> } } if ( SUCCESS < SYSCALL_CONST_OFF ) { \n> \t \t return - EINVAL ; \n> \t } \n547c551\n<         // rx_buf[VULN_OFF] = 1\n---\n> / / [ VULN_OFF [ SYM_CONST_PTR_1 ] = 1 \n",
        "89c89\n<     \n---\n> \t \t len = len ; \n158,159c158,160\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> \t \t if ( ! e ( map ) ) { \n> \t \t \t return - EINVAL ; \n> \t \t } \n428c429,431\n<     }\n---\n> } } if ( ! cgc_size_t ) { \n> \t \t return - EINVAL ; \n> \t } \n547c550,551\n<         // rx_buf[VULN_OFF] = 1\n---\n> / / [ VULN_OFF ] = 1 ; \n> \n",
        "89c89,92\n<     \n---\n> len = sz_alloc_align ; \n>  = sz_alloc_align ; \n> return / ; \n> \n158,159c161,166\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> \t \t if ( map < The ) { \n> \t \t \t if ( map < e ) \n> \t \t \t return - EINVAL ; \n> \n> \t \t / = ( ; \n> \t \t } \n428c435,437\n<     }\n---\n> } if ( ( < 0 || Annoying > 1+rx_buf ) { \n> \t \t return - EINVAL ; \n> \t } \n547c556,557\n<         // rx_buf[VULN_OFF] = 1\n---\n> / / < rx_buf > = [ SYM_CONST_PTR_1 ] = 1 ; \n> \n",
        "89c89,90\n<     \n---\n> len = sz_alloc_align ; \n>  = \n158,159c159,161\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> \t \t if ( ! e ( map ) ) \n> \t \t \t return - EINVAL ; \n> \n428c430,433\n<     }\n---\n> \t if ( GATE_MAGIC < SYSCALL_CONST_OFF ) { \n> \t \t return - EINVAL ; \n> \t } \n> \n547c552\n<         // rx_buf[VULN_OFF] = 1\n---\n> / / [ D ] = 1 \n",
        "89c89,92\n<     \n---\n> \n>  { len = sz_alloc_align ; \n>  = sz_alloc_align ; \n> goto len ; \n158,159c161,166\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> \t \t if ( ! e ( map , & e . g ) ) \n> \t \t \t return - EINVAL ; \n> \n> \t \t if ( e < e ) \n> \t \t \t return - EINVAL ; \n> \n428c435,437\n<     }\n---\n> } if ( ( < 0 || E > 1+rx_buf ) { \n> \t \t return - EINVAL ; \n> \t } \n547c556,557\n<         // rx_buf[VULN_OFF] = 1\n---\n> / / [ VULN_OFF ] = 1 ; \n>  / / ; \n",
        "89c89\n<     \n---\n> \n158,159c158\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> \t \t / / ; \n428c427\n<     }\n---\n> } \n547c546\n<         // rx_buf[VULN_OFF] = 1\n---\n> / / [ VULN_OFF ] = 1 \n",
        "89c89,91\n<     \n---\n> len = sz_alloc_align - ( ; \n>  = sz_alloc_align ; \n> goto / ; \n158,159c160,165\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> \t \t if ( ! e ( & map , 0 ) ) \n> \t \t \t return - EINVAL ; \n> \n> \t \t if ( e < e ) \n> \t \t \t return - EINVAL ; \n> \n428c434,437\n<     }\n---\n> } if ( ( < 0 || FLOAT_PROP_OFF > 1+rx_buf ) { \n> \t \t return - EINVAL ; \n> \t } \n> \n547c556,557\n<         // rx_buf[VULN_OFF] = 1\n---\n> / / < rx_buf > = = 1 - SYM_CONST_PTR_1 ; \n> \n",
        "89c89,90\n<     \n---\n> len = sz_alloc_align ; \n>  = sz_alloc_align + size ; \n158,159c159,162\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> \t \t if ( map < The ) { \n> \t \t \t return - EINVAL ; \n> \t \t } \n> \n428c431,433\n<     }\n---\n> } if ( ( < 0 || XOR_CONST_OFF_PTR > 1+rx_buf ) { \n> \t \t return - EINVAL ; \n> \t } \n547c552\n<         // rx_buf[VULN_OFF] = 1\n---\n> / / < rx_buf > = = 1 ; \n",
        "89c89,90\n<     \n---\n> len = sz_alloc_align ; \n>  = sz_alloc_align - size ; \n158,159c159,162\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> \t \t if ( map < The ) { \n> \t \t \t return - EINVAL ; \n> \t \t } \n> \t \t } \n428c431,433\n<     }\n---\n> } if ( ( < 0 || rx_buf > 1+rx_buf ) { \n> \t \t return - EINVAL ; \n> \t } \n547c552,553\n<         // rx_buf[VULN_OFF] = 1\n---\n> / / CONSTIFY [ VULN_OFF ] = 1 ; \n> \n",
        "89c89\n<     \n---\n> len = \n158,159c158,159\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> \t / / ; \n> \n428c428,431\n<     }\n---\n> } if ( ( < SYSCALL_CONST_OFF ) { \n> \t \t return - EINVAL ; \n> \t } \n> \n547c550,551\n<         // rx_buf[VULN_OFF] = 1\n---\n> / / [ VULN_OFF ] = 1 \n> \n",
        "89c89\n<     \n---\n> len = sz_alloc_align ; \n158,159c158\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> \t / / = ( ; \n428c427\n<     }\n---\n> } { \n547c546\n<         // rx_buf[VULN_OFF] = 1\n---\n> \t \t / rx_buf ; \n",
        "89c89\n<     \n---\n> \t \t \t = = sz_alloc_align ; \n158,159c158,160\n<         // The vulnerability is the failure to sanitize some (SKIP_PRIME indices).\n<         if (0 != i % SKIP_PRIME) { rx_buf[i] = rx_buf[i] % SZ_VULN_BUF; } \n---\n> \t \t if ( ! e ( & map , 0 ) ) \n> \t \t \t return - EINVAL ; \n> \n428c429,431\n<     }\n---\n> } if ( ( < 0 || 1+rx_buf > 1+rx_buf ) { \n> \t \t return - EINVAL ; \n> \t } \n547c550\n<         // rx_buf[VULN_OFF] = 1\n---\n> / / CONSTIFY [ SYM_PROP_PTR_2 ] = 1 \n"
      ]
    }
  ],
  "comps": 1,
  "failed_comps": 50,
  "passed_tests": 0,
  "failed_tests": 0,
  "duration": 59.27915,
  "error": "Return code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\n"
}