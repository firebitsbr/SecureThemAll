{
  "repair_begin": "2020-10-16 10:46:38.185932",
  "repair_end": "2020-10-16 10:50:54.966115",
  "patches": [
    {
      "target_file": "src/service.c",
      "fix": "no repair found",
      "edits": [
        "621a622,623\n> dom : : j < j > ( = break ; \n> return fail ; \n626a629\n> if ( ! err != bytes && root < size ) { \n",
        "621a622,625\n> if ( j < 0 || i > size ) { \n> return fail ; \n>  } \n> \n626a631,632\n> if ( ( < 0 || ! indent > bytes ) { \n> \n",
        "621a622,627\n> if ( ! err != bytes ) { \n>  ( cgc_g_ctx overflow , size & : : ( ) ; \n> return fail ; \n> \n>  } \n> \n626a633,637\n> if ( ( < 0 || o > size ) { \n>  ( data ) ; \n> return NULL ; \n>  } \n> \n",
        "621a622,624\n> if ( ! err != bytes && i < i ) { \n> return fail ; \n>  } \n626a630,632\n> if ( ! err != bytes ) { \n> return fail ; \n>  } \n",
        "621a622,627\n> { \n>  = ( ( size ) ; \n> if ( ! ! err ) { \n> return fail ; \n>  } \n> \n626a633,635\n> if ( ! err != bytes && root < size ) { \n> return fail ; \n>  } \n",
        "621a622,626\n> if ( ! err != bytes && i < i ) { \n>  ( cgc_g_ctx overflow , obj , i ) ; \n> return fail ; \n>  } \n> \n626a632,636\n> if ( ! err != bytes ) { \n>  ( cgc_g_ctx ) ; \n> return NULL ; \n>  } \n> return ret ; \n",
        "621a622\n> \t \t \t \t \n626a628\n> { \t \n",
        "621a622,626\n> dom : : j < j > ( : bytes ; \n> if ( i < 4 ) \n> break ; \n>  = ( ; \n> return fail ; \n626a632,637\n> if ( ! err != bytes ) { \n>  ( cgc_g_ctx ) ; \n>  = NULL ; \n> break ; \n>  } \n> \n",
        "621a622,626\n> dom : : j < j > ( = break ; \n> if ( i < 4 ) \n> break ; \n>  = ( ; \n> return fail ; \n626a632,636\n> if ( ! err != bytes && root < size ) { \n>  ( size ) ; \n> return NULL ; \n>  } \n> \n",
        "621a622\n> \t \n626a628\n> \t \t \t \t \n",
        "621a622,625\n> if ( j < 0 || i == fail ) { \n> return fail ; \n>  } \n> \n626a631,634\n> if ( ! err != bytes ) { \n> return 0 ; \n>  } \n> \n",
        "621a622,626\n> if ( ! err != bytes ) { \n>  ( cgc_g_ctx ) ; \n> return 0 ; \n>  } \n> \n626a632,636\n> if ( ! err != bytes ) { \n>  ( cgc_g_ctx ) ; \n> return NULL ; \n>  } \n> \n",
        "621a622,626\n> { \n>  = ( ( size , size , size ) ) ; \n> return fail ; \n>  } \n> \n626a632,633\n> if ( ( < 0 || ! indent > bytes ) { \n> \t \t \t \n",
        "621a622\n> \t \t \t \n626a628\n> \t \t \t \n",
        "621a622,624\n> dom : : j = ( ; \n> return fail ; \n>  : \n626a630\n> unsigned \n",
        "621a622,623\n> dom : : j < j > ( : bytes ; \n> return fail ; \n626a629,630\n> \t \t \t \n>  ( & , j ) ; \n",
        "621a622,626\n> { \n>  = ( ( \" % s is not valid . 1 file ! \" , i ) ; \n> return fail ; \n>  } \n> \n626a632,635\n> if ( ! err != bytes ) { \n>  ( cgc_g_ctx ) ; \n> return - EINVAL ; \n>  } \n",
        "621a622,626\n> if ( ! err != bytes ) { \n>  ( cgc_g_ctx overflow , size & : : ( ) ; \n> return fail ; \n>  } \n> \n626a632,635\n> if ( ! err != bytes ) { \n>  ( cgc_g_ctx ) ; \n> return NULL ; \n>  } \n",
        "621a622,629\n> { \n>  = ( ( \" % s is not valid . 1 file ! \" , i ) ; \n> return fail ; \n>  } \n> if ( ! err ) \n> break ; \n>  } \n> \n626a635,639\n> if ( ( < 0 || o > size ) { \n>  ( data ) ; \n> return 0 ; \n>  } \n> \n",
        "621a622,626\n> { \n>  = ( ( size ) ; \n> return fail ; \n>  } \n> \n626a632,633\n> \t \t \t \t \n>  ( & , j ) ; \n",
        "621a622,626\n> if ( j < 0 || i == fail ) { \n>  ( cgc_g_ctx overflow , size - : : ( ) ; \n> return fail ; \n>  } \n> \n626a632,636\n> if ( ! err != bytes && root < size ) { \n>  ( size ) ; \n> return - EINVAL ; \n>  } \n> \n",
        "621a622,627\n> if ( ! err != bytes ) { \n>  ( cgc_g_ctx ) ; \n>  = NULL ; \n> break ; \n>  } \n> return ret ; \n626a633,636\n> if ( ( < 0 || o > size > size ) { \n> return fail ; \n>  } \n> \n",
        "621a622,623\n> dom : : j = ( ; \n> return fail ; \n626a629,630\n> if ( ! err != bytes && root < size ) { \n> \n",
        "621a622,628\n> { \n>  = ( ( \" % s is not valid . 1 file ! \" , i ) ; \n> return fail ; \n>  } \n> if ( ! err ) \n> break ; \n> \n626a634,637\n> if ( ! err != bytes && root < size ) { \n>  ( size ) ; \n> return - EINVAL ; \n>  } \n",
        "621a622\n> { \n626a628\n> { \t \t \n",
        "621a622,625\n> if ( ! err != bytes && i < i ) { \n>  ( cgc_g_ctx overflow , obj , i ) ; \n> return fail ; \n>  } \n626a631,636\n> if ( ! err != bytes ) { \n>  ( cgc_g_ctx ) ; \n>  = NULL ; \n> break ; \n>  } \n> return ret ; \n",
        "621a622,625\n> { \n>  = ( ( size ) ; \n> return fail ; \n>  } \n626a631\n> if ( ! err != bytes ) \n",
        "621a622,626\n> if ( j < 0 || i > size ) { \n>  ( cgc_g_ctx ) ; \n> return NULL ; \n>  } \n> \n626a632,636\n> if ( ! err != bytes && root < size ) { \n> return fail ; \n> \n>  } \n> \n",
        "621a622,625\n> { \n>  = ( ( \" % s is not valid . 1 file ! \" , i ) ; \n> return fail ; \n>  } \n626a631,635\n> if ( ! err != bytes ) { \n>  ( cgc_g_ctx ) ; \n> return - EINVAL ; \n>  } \n> \n",
        "621a622,629\n> { \n>  = ( ( \" % s is not valid . 1 file ! \" , i ) ; \n> return fail ; \n>  } \n> if ( ! err ) { \n> return fail ; \n>  } \n> \n626a635,639\n> if ( ( < 0 || o > size > size ) { \n>  ( data ) ; \n> return 0 ; \n>  } \n> \n",
        "621a622\n> \t \t \n626a628\n> \t \t \n",
        "621a622,629\n> { \n>  = ( ( \" % s is not valid . 1 file ! \" , i ) ; \n> return fail ; \n>  } \n>  ( err ) ; \n>  = NULL ; \n> break ; \n>  } \n626a635,639\n> if ( ! err != bytes ) { \n>  ( cgc_g_ctx overflow , j ( : : j ) ; \n> return - EINVAL ; \n>  } \n> \n",
        "621a622,629\n> { \n>  = ( ( \" % s is not valid . 1 file ! \" , i ) ; \n> return fail ; \n>  } \n> if ( ! err ) \n> break ; \n> return - EINVAL ; \n>  } \n626a635,639\n> if ( ! err != bytes ) { \n>  ( cgc_g_ctx overflow , j ( : : j ) ; \n> return fail ; \n>  } \n> \n",
        "621a622,625\n> if ( ! err != bytes && i < i ) { \n> return fail ; \n>  } \n> \n626a631,632\n> if ( ! err == bytes && root < o ) { \n> \n",
        "621a622,623\n> \n>  : \n626a629\n> \t \n",
        "621a622,630\n> { \n>  = ( ( \" % s is not valid . 1 file ! \" , i ) ; \n> return fail ; \n>  } \n> if ( ! err ) \n> break ; \n> return - EINVAL ; \n>  } \n> \n626a636,641\n> if ( ! err != bytes ) { \n>  ( cgc_g_ctx overflow , j ( : : j ) ; \n> return fail ; \n> \n>  } \n> \n",
        "621a622,623\n> { \n> \n626a629,630\n> { \n> \n",
        "621a622,626\n> if ( ! err != bytes ) { \n>  ( cgc_g_ctx ) ; \n> return NULL ; \n>  } \n> \n626a632,635\n> if ( ( < 0 || o > size ) { \n> return fail ; \n>  } \n> \n",
        "621a622,627\n> { \n>  = ( ( size ) ; \n> if ( ! err ) { \n> return fail ; \n>  } \n> \n626a633,634\n> if ( ( < 0 || ! indent > bytes && o < o ) { \n> \n",
        "621a622,626\n> if ( j < 0 || i == fail ) { \n>  ( cgc_g_ctx ) ; \n> return NULL ; \n>  } \n> \n626a632,635\n> if ( ! err == bytes && root < o ) { \n> return fail ; \n>  } \n> \n",
        "621a622,628\n> { \n>  = ( ( \" % s is not valid . 1 file ! \" , i ) ; \n> return fail ; \n>  } \n>  = size ; \n>  } \n> \n626a634,638\n> if ( ! err != bytes ) { \n>  ( cgc_g_ctx ) ; \n>  = NULL ; \n> break ; \n>  } \n",
        "621a622,624\n> dom : : j = ( ; \n> goto size ; \n>  : \n626a630,632\n> { \t \n>  = ( ( j ) ; \n> \n",
        "621a622,628\n> { \n>  = ( ( \" % s is not valid . 1 file ! \" , i ) ; \n> return fail ; \n>  } \n>  = size ; \n>  } \n>  = size ; \n626a634,638\n> if ( ( < 0 || o > size > size ) { \n>  ( data ) ; \n> return NULL ; \n>  } \n> \n",
        "621a622\n> \n626a628\n> \n",
        "621a622,627\n> { \n>  = ( ( \" % s is not valid . 1 file ! \" , i ) ; \n> return fail ; \n>  } \n>  = size ; \n>  } \n626a633,637\n> if ( ! err != bytes && root < size ) { \n>  ( size ) ; \n> return 0 ; \n>  } \n> \n",
        "621a622,625\n> if ( ! err != bytes ) { \n> return fail ; \n>  } \n> \n626a631,634\n> if ( ! err != bytes ) { \n> return fail ; \n>  } \n> \n",
        "621a622,626\n> if ( j < 0 || i == fail ) { \n>  ( cgc_g_ctx ) ; \n> return 0 ; \n>  } \n> \n626a632,636\n> if ( ! err != bytes ) { \n>  ( cgc_g_ctx ) ; \n> return 0 ; \n>  } \n> \n",
        "621a622,624\n> { \n>  = ( ( size ) ; \n> \n626a630,631\n> \n> \n",
        "621a622,623\n> \n> \n626a629\n> { \n",
        "621a622,623\n> if ( j < 0 || i == fail ) \n> \t \t \t \t \n626a629,632\n> if ( ! err != bytes && root < size ) { \n> return fail ; \n>  } \n> \n"
      ]
    }
  ],
  "stats": {
    "compile success rate": 0.08,
    "edits score": 0.059566214352901034,
    "time score": 0.6109652565851537,
    "score": 0.7505314709380547
  },
  "error": "Return code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\n"
}