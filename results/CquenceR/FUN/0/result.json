{
  "repair_begin": "2020-10-16 10:21:33.718165",
  "repair_end": "2020-10-16 10:21:51.946904",
  "patches": [
    {
      "target_file": "src/main.c",
      "fix": "no repair found",
      "edits": [
        "437a438,441\n> \t if ( ! reverse && range < sizeof ) { \n> \t \t return - EINVAL ; \n> \t } \n> \n",
        "437a438,440\n> if ( ! reverse ( & len , 0 ) ) \n> return 0 ; \n> \n",
        "437a438,441\n> \t if ( range < range / sizeof ) { \n> \t \t return - EINVAL ; \n> \t } \n> \t } \n",
        "437a438,441\n> \t if ( range < range / sizeof ) { \n> \t \t return - EINVAL ; \n> \t } \n> \n",
        "437a438,441\n> \t if ( ! reverse && range < sizeof ) { \n> \t \t return - 1 ; \n> \t } \n> \n",
        "437a438,441\n> \t if ( ! reverse && range < sizeof ) { \n> \t \t return - 1 ; \n> \t } \n> \t } \n",
        "437a438\n> int range ( range , sizeof ) ; \n",
        "437a438,440\n> if ( range < 0 || ! reverse > sizeof && i < sizeof ) { \n> \t \t return - 1 ; \n> \t } \n",
        "437a438,442\n> if ( ! reverse && range < sizeof ) { \n>  ( range overflow , obj , i ) ; \n> return min ; \n>  } \n> \n",
        "437a438\n> const \n",
        "437a438,440\n> \t if ( ! reverse && range < sizeof ) { \n> \t \t return - 1 ; \n> \t } \n",
        "437a438,440\n> \t if ( ! range -> tmp ) { \n> \t \t return - 1 ; \n> \t } \n",
        "437a438,440\n> \t if ( range < range / sizeof ) { \n> \t \t return - 1 ; \n> \t } \n",
        "437a438\n> \t \n",
        "437a438,439\n> \t \n> \t if ( & cert , 0 ) ; \n",
        "437a438,440\n> { \n>  = NULL = ( char * ) 0 ; \n> \n",
        "437a438,441\n> if ( ! reverse && range < sizeof ) { \n> \t \t return - EINVAL ; \n> \t } \n> \n",
        "437a438,441\n> \t if ( ! reverse && range < sizeof ) { \n> \t \t return - 1 ; \n> \t } \n> \t } \n",
        "437a438,441\n> if ( ! reverse && range < sizeof ) { \n>  ( range overflow , obj , i ) ; \n> return min ; \n>  } \n",
        "437a438,440\n> \t if ( ! reverse && range < sizeof ) { \n> \t \t return - EINVAL ; \n> \t } \n",
        "437a438,441\n> if ( range < 0 || ! reverse > sizeof && i < sizeof ) { \n> \t \t return - 1 ; \n> \t } \n> \n",
        "437a438,441\n> \t if ( ! reverse && range < sizeof ) { \n> \t \t return - EINVAL ; \n> \t } \n> \t } \n",
        "437a438,439\n> \t \n> \t if ( & len , sizeof ) ; \n",
        "437a438,442\n> if ( ! reverse && range < sizeof ) { \n>  ( range overflow , obj , i ) ; \n> return 0 ; \n>  } \n> \n",
        "437a438\n> int range ( range ) ; \n",
        "437a438,441\n> \t if ( range < range / sizeof ) { \n> \t \t return - 1 ; \n> \t } \n> \t } \n",
        "437a438,440\n> \t if ( ! reverse && range < sizeof ) { \n> \t \t return - EINVAL ; \n> \t } \n",
        "437a438,441\n> \t if ( ! reverse && range < sizeof ) { \n> \t \t return - EINVAL ; \n> \t } \n> \t } \n",
        "437a438,441\n> \t if ( ! range -> tmp ) { \n> \t \t return - 1 ; \n> \t } \n> \n",
        "437a438,442\n> if ( range < 0 || reverse > range ) { \n>  ( f , obj , sizeof ) ; \n> return - EINVAL ; \n>  } \n> \n",
        "437a438,439\n> \n> \n",
        "437a438,441\n> if ( ! reverse && range < sizeof ) { \n>  ( range overflow , obj , i ) ; \n> return - fd ; \n>  } \n",
        "437a438,442\n> if ( ! reverse && range < sizeof ) { \n>  ( range overflow , obj , i ) ; \n> return - EINVAL ; \n>  } \n> \n",
        "437a438,441\n> \t if ( ! reverse && range < sizeof ) { \n> \t \t return - EINVAL ; \n> \t } \n> \n",
        "437a438\n> return range ( range , 0 ) ; \n",
        "437a438,441\n> if ( ! reverse && range < sizeof ) { \n>  ( range overflow , obj , i ) ; \n> return 0 ; \n>  } \n",
        "437a438,439\n> \t \n> \t if ( & cert , 0 ) ; \n",
        "437a438,441\n> \t if ( ! range -> tmp ) { \n> \t \t return - EINVAL ; \n> \t } \n> \n",
        "437a438,440\n> if ( ! reverse && range < sizeof ) { \n> \t \t return - EINVAL ; \n> \t } \n",
        "437a438,441\n> \t if ( ! reverse && range < sizeof ) { \n> \t \t return - 1 ; \n> \t } \n> \n",
        "437a438,441\n> if ( range < 0 || reverse > range ) { \n>  ( f , obj , sizeof ) ; \n> return - EINVAL ; \n>  } \n",
        "437a438,440\n> \t if ( ! range -> tmp ) { \n> \t \t return - EINVAL ; \n> \t } \n",
        "437a438,441\n> if ( ! reverse && range < sizeof ) { \n>  ( range overflow , obj , i ) ; \n> return - EINVAL ; \n>  } \n",
        "437a438\n> \n",
        "437a438,440\n> if ( range < 0 || ! reverse > sizeof && i < sizeof ) { \n> \t \t return - 1 ; \n> \n",
        "437a438,440\n> \t if ( range < range / sizeof ) { \n> \t \t return - EINVAL ; \n> \t } \n",
        "437a438,441\n> \t if ( range < range / sizeof ) { \n> \t \t return - 1 ; \n> \t } \n> \n",
        "437a438,439\n> \t \n> \t if ( & len , 0 ) ; \n",
        "437a438\n> static \n",
        "437a438,440\n> \t if ( ! reverse && range < sizeof ) { \n> \t \t return - 1 ; \n> \t } \n"
      ]
    }
  ],
  "stats": {
    "compile success rate": 0.06,
    "edits score": 0.059566214352901034,
    "time score": 0.9656269634312504,
    "score": 1.0851931777841515
  },
  "error": "Return code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\n"
}