{
  "repair_begin": "2020-10-16 10:26:23.648002",
  "repair_end": "2020-10-16 10:29:47.890790",
  "patches": [
    {
      "target_file": "src/operation.c",
      "fix": "no repair found",
      "edits": [
        "332c332\n< \t\n---\n> \t \t \t if ( ( < 0 ) { \n",
        "332c332\n< \t\n---\n> \t if ( MAX_HAIKU_LEN < 0 ) { \n",
        "332c332,336\n< \t\n---\n> if ( ! ~ length ) { \n>  = NULL ; \n> return NULL ; \n>  } \n> \n",
        "332c332,333\n< \t\n---\n> \t if ( ! length ) { \n> \t \n",
        "332c332\n< \t\n---\n> \t \t \t while ( haiku_content_ptr , 0 ) ; \n",
        "332c332,334\n< \t\n---\n> \t \t \t ( & length , 0 ) ; \n> \t else \n> \t \n",
        "332c332\n< \t\n---\n> \t \t \t \n",
        "332c332,335\n< \t\n---\n> if ( ! ~ length ) { \n>  = NULL ; \n> return NULL ; \n>  } \n",
        "332c332,335\n< \t\n---\n> if ( ! ~ length ) { \n>  = NULL ; \n> return - EINVAL ; \n>  } \n",
        "332c332\n< \t\n---\n> if ( MAX_HAIKU_LEN < 0 || MAX_HAIKU_LEN > total_bytes ) { \n",
        "332c332\n< \t\n---\n> if ( MAX_HAIKU_LEN < 0 || MAX_HAIKU_LEN > total_bytes > sizeof ) { \n",
        "332c332,333\n< \t\n---\n> if ( ! ~ length ) { \n> \n",
        "332c332\n< \t\n---\n> if ( MAX_HAIKU_LEN < 0 || ! MAX_HAIKU_LEN > sizeof ) { \n",
        "332c332\n< \t\n---\n> \t \n",
        "332c332\n< \t\n---\n> if ( MAX_HAIKU_LEN < 0 || bytes_remaining < 0 ) { \n",
        "332c332\n< \t\n---\n> \t \t while ( ( < sizeof ) { \n",
        "332c332\n< \t\n---\n> if ( MAX_HAIKU_LEN < 0 || 0 > bytes_remaining ) { \n",
        "332c332,334\n< \t\n---\n> \t \t \t while ( haiku_content_ptr , length ) ; \n> \t else \n> \t \n",
        "332c332,335\n< \t\n---\n> \t \t \t ( & length , 0 ) ; \n> \t else \n> \t \t \t return - EINVAL ; \n> \n",
        "332c332\n< \t\n---\n> \t \t \t while ( haiku_content_ptr ) ; \n",
        "332c332,336\n< \t\n---\n> if ( ! ~ length ) { \n>  = NULL ; \n> return - EINVAL ; \n>  } \n> \n",
        "332c332\n< \t\n---\n> \t \t \t while ( haiku_content_ptr , length , sizeof ) ; \n",
        "332c332\n< \t\n---\n> if ( MAX_HAIKU_LEN < 0 || MAX_HAIKU_LEN < 0 ) { \n",
        "332c332,335\n< \t\n---\n> if ( ! length ) { \n>  = NULL = bytes_remaining ; \n> return - EINVAL ; \n>  } \n",
        "332c332\n< \t\n---\n> if ( MAX_HAIKU_LEN < 0 || bytes_remaining > total_bytes ) { \n",
        "332c332,334\n< \t\n---\n> \t \t \t while ( haiku_content_ptr , length ) ; \n> \t \t else \n> \t \n",
        "332c332\n< \t\n---\n> if ( ! ~ length ) { \n",
        "332c332,333\n< \t\n---\n> \t \t \n> \t \t \t while ( haiku_content_ptr ) ; \n",
        "332c332\n< \t\n---\n> if ( MAX_HAIKU_LEN < 0 || 0 == NULL ) { \n",
        "332c332,336\n< \t\n---\n> if ( ! length ) { \n>  = NULL = bytes_remaining ; \n> return - EINVAL ; \n>  } \n> \n",
        "332c332\n< \t\n---\n> \t \t \n",
        "332c332,335\n< \t\n---\n> \t \t \t while ( haiku_content_ptr , length ) ; \n> \t \t else \n> \t \t \t return - EINVAL ; \n> \n",
        "332c332,335\n< \t\n---\n> \t \t \t ( & cert , 0 ) ; \n> \t else \n> \t \t \t return - EINVAL ; \n> \n",
        "332c332\n< \t\n---\n> if ( MAX_HAIKU_LEN < 0 || MAX_HAIKU_LEN < 0 ) { \n",
        "332c332\n< \t\n---\n> \t \t if ( ( < 0 ) { \n",
        "332c332,334\n< \t\n---\n> \t \t \t ( & length , 0 ) ; \n> \t else \n> \t \t \t return - EINVAL ; \n",
        "332c332\n< \t\n---\n> if ( MAX_HAIKU_LEN < 0 || MAX_HAIKU_LEN > total_bytes ) { \n",
        "332c332\n< \t\n---\n> \t \t \t ( sizeof , length ) ; \n",
        "332c332\n< \t\n---\n> if ( MAX_HAIKU_LEN < 0 || bytes_remaining > total_bytes > sizeof ) { \n",
        "332c332\n< \t\n---\n> if ( MAX_HAIKU_LEN < 0 || ~ ~ > sizeof ) { \n",
        "332c332,335\n< \t\n---\n> \t \t \t while ( haiku_content_ptr , length ) ; \n> \t else \n> \t \t \t return - EINVAL ; \n> \n",
        "332c332\n< \t\n---\n> \t \t \t while ( haiku_content_ptr , length ) ; \n",
        "332c332,334\n< \t\n---\n> \t \t \t while ( haiku_content_ptr , length ) ; \n> \t else \n> \t \t \t return - EINVAL ; \n",
        "332c332\n< \t\n---\n> \n",
        "332c332,334\n< \t\n---\n> \t \t \t while ( haiku_content_ptr , length , sizeof ) ; \n> \t else \n> \t \n",
        "332c332,333\n< \t\n---\n> if ( ! ~ length ) { \n> \t \n",
        "332c332\n< \t\n---\n> \t \t \t ( & length , 0 ) ; \n",
        "332c332\n< \t\n---\n> \t \t / / ; \n",
        "332c332,333\n< \t\n---\n> \n> \n",
        "332c332\n< \t\n---\n> if ( MAX_HAIKU_LEN < 0 || uint16_t ~ > sizeof ) { \n"
      ]
    }
  ],
  "stats": {
    "compile success rate": 0.16,
    "edits score": 0.059566214352901034,
    "time score": 0.6757680842075451,
    "score": 0.8953342985604461
  },
  "error": "Return code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\n"
}