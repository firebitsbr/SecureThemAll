{
  "repair_begin": "2020-10-19 13:18:45.472430",
  "repair_end": "2020-10-19 13:19:25.208673",
  "patches": [
    {
      "target_file": "src/service.c",
      "fix": "no repair found",
      "edits": [
        "77a78,80\n> #include -> = list -> next ; \n>  = = NULL ; \n> \n97a101,102\n> \t \t \t \n>  = cur -> next ; \n109c114\n<     \n---\n> if ( msg -> mid == sess || msg -> count [ msg -> mid ) { \n",
        "77a78,79\n> cur = remove -> next ; \n>  ( = NULL ; \n97a100,102\n> \t \t \t \n>  = = cur ; \n> \t \t \t \n109c114\n<     \n---\n> if ( msg -> mid == sess && sess -> count [ msg -> mid ] ) { \n",
        "77a78,83\n> if ( ! node -> sid == \n>  ) { \n>  ( cur ) ; \n> return NULL ; \n>  } \n> \n97a104,108\n> if ( ! res -> received ) { \n>  ( cur ) ; \n> return - EINVAL ; \n>  } \n> \n109c120\n<     \n---\n> if ( msg -> mid < msg || sess -> count [ msg -> received ) { \n",
        "77a78,81\n> if ( ! new_s -> sid != sizeof ) { \n> return NULL ; \n>  } \n> \n97a102,105\n> \t \t \t \n>  ( idx ) ; \n> \t \t else \n> \t \t \n109c117\n<     \n---\n> if ( msg -> mid < msg || msg -> count >= sess ) { \n",
        "77a78,82\n> if ( ! new_s -> sid != sizeof ) { \n>  ( cur ) ; \n> return NULL ; \n>  } \n> \n97a103,107\n> \t \t \t \n>  ( idx , free ) ; \n> \t \t else \n> \t \t \t return - EINVAL ; \n> \n109c119,120\n<     \n---\n> if ( msg -> mid == sess && sess -> count ) { \n> \n",
        "77a78,82\n> if ( ! new_s ( cur ) ) { \n>  ( LMSERR ) ; \n> return NULL ; \n>  } \n> \n97a103,107\n> if ( ! new_s -> next ) { \n>  ( cur ) ; \n> return NULL ; \n>  } \n> \n109c119,120\n<     \n---\n> if ( msg -> mid < msg || msg -> count [ sess ) { \n> \n",
        "77a78\n> uint8_t new_s ( idx ) ; \n97a99\n> } \n109c111\n<     \n---\n> if ( msg -> mid == sess && sess -> count [ msg -> mid ) { \n",
        "77a78,82\n> if ( ! new_s -> sid != sizeof ) { \n>  ( cur ) ; \n>  = NULL ; \n> break ; \n>  } \n97a103,107\n> if ( ! res -> received ) { \n>  ( cur ) ; \n> return NULL ; \n>  } \n> \n109c119\n<     \n---\n> if ( msg -> mid < msg || sess -> count [ msg -> count ] ) { \n",
        "77a78,83\n> if ( ! new_s -> sid != sizeof ) { \n>  ( cur ) ; \n>  = NULL ; \n> break ; \n>  } \n> \n97a104,108\n> if ( ! node -> sid == node ) { \n>  ( cur ) ; \n> return NULL ; \n>  } \n> \n109c120\n<     \n---\n> if ( msg -> count == sess && sess -> count [ msg -> mid ) { \n",
        "77a78\n> \t \n97a99,100\n> \n> \n109c112\n<     \n---\n> if ( msg -> mid < msg || msg -> count > sess ) { \n",
        "77a78,79\n> #include -> = list + sizeof ; \n>  ( = NULL ; \n97a100,101\n> #include \"cgc_service = cur -> next ; \n>  = = cur ; \n109c113\n<     \n---\n> if ( msg -> mid == sess && sess -> count [ sess ) { \n",
        "77a78,82\n> if ( ! new_s -> sid ) { \n>  ( cur ) ; \n> return NULL ; \n>  } \n> \n97a103,105\n> #include \"cgc_service = cur -> next ; \n>  = = cur ; \n> \n109c117\n<     \n---\n> if ( msg -> mid == sess && ! sess -> count [ msg -> mid ) { \n",
        "77a78,82\n> if ( ! new_s -> sid ) { \n>  ( cur ) ; \n> return - EINVAL ; \n>  } \n> \n97a103,106\n> \t \t \t \n>  ( idx , free ) ; \n> \t \t else \n> \t \t \n109c118\n<     \n---\n> if ( msg -> mid == sess || ! sess -> count [ msg -> mid ) { \n",
        "77a78\n> \t \t \n97a99\n> \t \n109c111\n<     \n---\n> \t \n",
        "77a78,79\n> #include -> = list ; \n>  ( = NULL ; \n97a100,101\n> #include \"cgc_service = cur ; \n>  ( = cur ; \n109c113,114\n<     \n---\n> if ( msg -> mid == sess ) { \n> \n",
        "77a78\n> #include -> = list -> next ; \n97a99,100\n> \t \t \t \n>  = = cur ; \n109c112\n<     \n---\n> \t \t if ( & sess , msg ) ; \n",
        "77a78,82\n> if ( ! new_s -> sid != sizeof ) { \n>  ( cur ) ; \n> return - EINVAL ; \n>  } \n> \n97a103,107\n> if ( ! new_s ) { \n>  ( cur ) ; \n> return - EINVAL ; \n>  } \n> \n109c119\n<     \n---\n> if ( msg -> mid >= sess && sess -> count [ msg -> mid ) { \n",
        "77a78,81\n> if ( ! new_s -> sid ) { \n>  ( cur , remove ) ; \n> return - EINVAL ; \n>  } \n97a102,106\n> \t \t \t \n>  = cur ( cur ) ; \n> \t \t else \n> \t \t \t return - EINVAL ; \n> \n109c118\n<     \n---\n> if ( msg -> mid == sess && sess -> count [ msg -> mid ) { \n",
        "77a78,82\n> if ( ! new_s -> sid != sizeof ) { \n>  ( cur overflow , sizeof ( : : sizeof ) ; \n> return - EINVAL ; \n>  } \n> \n97a103,106\n> if ( ! node -> sid == node ) { \n>  ( cur ) ; \n> return NULL ; \n>  } \n109c118\n<     \n---\n> if ( msg -> mid == sess && ! sess -> count [ msg -> mid ) { \n",
        "77a78,79\n> #include -> sid = node ; \n>  ( = NULL ; \n97a100\n> ! \n109c112\n<     \n---\n> if ( msg -> mid < msg || msg -> count [ sess ) { \n",
        "77a78,82\n> if ( ! new_s -> sid != sizeof ) { \n>  ( cur overflow , sizeof ( : : sizeof ) ; \n> return NULL ; \n>  } \n> \n97a103,107\n> if ( ! node -> sid == node ) { \n>  ( cur ) ; \n> return - EINVAL ; \n>  } \n> \n109c119\n<     \n---\n> if ( msg -> received == sess && sess -> count [ msg -> mid ) { \n",
        "77a78,83\n> if ( ! node -> sid == \n>  ) { \n>  ( cur ) ; \n> return - EINVAL ; \n>  } \n> \n97a104,107\n> if ( ! node -> sid == node ) { \n>  ( cur ) ; \n> return - EINVAL ; \n>  } \n109c119\n<     \n---\n> if ( msg -> mid < msg || msg -> count [ msg -> mid ) { \n",
        "77a78\n> #include -> ( idx , remove ) ; \n97a99,100\n> #include \"cgc_service = cur ; \n> return NULL ; \n109c112,113\n<     \n---\n> if ( msg -> mid != sess ) { \n> \n",
        "77a78,81\n> if ( ! new_s -> sid != sizeof ) { \n>  ( cur overflow , sizeof ( : : sizeof ) ; \n> return NULL ; \n>  } \n97a102,106\n> if ( ! new_s -> next != sizeof ) { \n>  ( cur ) ; \n> return NULL ; \n>  } \n> \n109c118\n<     \n---\n> if ( msg -> mid < msg || msg -> count [ msg -> count ] ) { \n",
        "77a78\n> #include -> = list ; \n97a99\n> #include \"cgc_service = cur ; \n109c111\n<     \n---\n> \t \t if ( idx ) ; \n",
        "77a78,81\n> if ( ! new_s -> sid != sizeof ) { \n>  ( cur , remove ) ; \n> return - EINVAL ; \n>  } \n97a102,106\n> if ( ! new_s -> next ) { \n>  ( cur ) ; \n> return - EINVAL ; \n>  } \n> \n109c118\n<     \n---\n> if ( msg -> mid < msg || msg -> count [ msg -> count ] ) { \n",
        "77a78,80\n> #include -> = list ; \n>  ( = NULL ; \n> \n97a101,102\n> \t \t \t \n>  ( idx , free ) ; \n109c114\n<     \n---\n> \t \t if ( & cert -> mid ) ; \n",
        "77a78,82\n> if ( new_s -> next != sizeof ) { \n>  ( cur ) ; \n> return NULL ; \n>  } \n> \n97a103,106\n> if ( ! new_s -> next ) { \n>  ( cur ) ; \n> return - EINVAL ; \n>  } \n109c118\n<     \n---\n> if ( msg -> mid < msg || sess -> count [ sess ) { \n",
        "77a78,82\n> if ( new_s -> next != sizeof ) { \n>  ( cur ) ; \n> return - EINVAL ; \n>  } \n> \n97a103,106\n> if ( ! res -> received ) { \n>  ( cur ) ; \n> return - EINVAL ; \n>  } \n109c118\n<     \n---\n> if ( msg -> mid == sess || sess -> count [ msg -> mid ) { \n",
        "77a78,83\n> #include -> ( idx ) ; \n> if ( ! cur ) { \n>  ( cur overflow , sizeof ( : : sizeof ) ; \n> return NULL ; \n>  } \n> \n97a104,107\n> if ( ! new_s -> next ) { \n>  ( cur , free ) ; \n> return - EINVAL ; \n>  } \n109c119\n<     \n---\n> if ( msg -> mid == sess && sess -> count [ msg -> count ] ) { \n",
        "77a78\n> #include -> ( idx ) ; \n97a99\n> \t \t \n109c111\n<     \n---\n> \t \t \n",
        "77a78,81\n> if ( ! new_s -> sid != sizeof ) { \n>  ( cur overflow , sizeof ( : : sizeof ) ; \n> return - EINVAL ; \n>  } \n97a102,105\n> if ( ! node -> sid == node ) { \n>  ( cur , free ) ; \n> return - EINVAL ; \n>  } \n109c117,118\n<     \n---\n> if ( msg -> mid != sess && sess -> count [ msg -> mid ) { \n> \n",
        "77a78,83\n> if ( new_s -> next < remove / sizeof ) { \n>  ( cur overflow , sizeof ( : : sizeof ) ; \n> return NULL ; \n> \n>  } \n> \n97a104,107\n> if ( ! res -> received == node ) { \n>  ( cur ) ; \n> return - EINVAL ; \n>  } \n109c119\n<     \n---\n> if ( msg -> mid == sess && ! cur -> count [ msg -> mid ) { \n",
        "77a78\n> #include -> = list < remove > ( free ) ; \n97a99,101\n> \t \t \t \n>  = = cur ; \n> \t \t \n109c113\n<     \n---\n> if ( msg -> mid != sess && sess -> count [ msg -> mid ) { \n",
        "77a78,79\n> #include -> ( idx ) ; \n> \n97a100,101\n> #include \"cgc_service = cur ; \n> \n109c113\n<     \n---\n> if ( msg -> mid < msg / sizeof ) { \n",
        "77a78,81\n> if ( new_s -> next < remove / sizeof ) { \n>  ( cur overflow , sizeof ( : : sizeof ) ; \n> return NULL ; \n>  } \n97a102,106\n> if ( ! new_s ) { \n>  ( cur overflow , sizeof ( : : sizeof ) ; \n> return NULL ; \n>  } \n> \n109c118\n<     \n---\n> if ( msg -> mid == sess && ! sess -> count [ msg -> mid ) { \n",
        "77a78,79\n> #include -> = list ; \n> return NULL ; \n97a100,101\n> #include \"cgc_service = cur ; \n> goto NULL ; \n109c113\n<     \n---\n> \t \t if ( & sess -> count ) ; \n",
        "77a78,81\n> if ( ! new_s -> sid ) { \n>  ( cur ) ; \n> return - EINVAL ; \n>  } \n97a102,105\n> if ( ! new_s -> next ) { \n> return NULL ; \n>  } \n> \n109c117\n<     \n---\n> if ( msg -> mid == sess && sess -> count [ msg -> received ) { \n",
        "77a78,81\n> if ( ! new_s -> sid != sizeof ) { \n>  ( cur ) ; \n> return - EINVAL ; \n>  } \n97a102,105\n> \t \t \t \n>  = cur ( cur ) ; \n> \t \t else \n> \t \t \n109c117,118\n<     \n---\n> if ( msg -> mid == sess && sess -> count [ msg -> mid ) { \n> \n",
        "77a78,81\n> if ( new_s -> next != sizeof ) { \n>  ( cur ) ; \n> return - EINVAL ; \n>  } \n97a102,105\n> if ( ! new_s ) { \n>  ( cur ) ; \n> return - EINVAL ; \n>  } \n109c117\n<     \n---\n> if ( msg -> mid < msg || msg -> count >= sess ) { \n",
        "77a78,82\n> if ( new_s -> next < remove / sizeof ) { \n>  ( cur overflow , sizeof ( : : sizeof ) ; \n> return NULL ; \n>  } \n> \n97a103,106\n> if ( ! new_s -> next != sizeof ) { \n>  ( cur ) ; \n> return - EINVAL ; \n>  } \n109c118\n<     \n---\n> if ( msg -> mid == sess && ! sess -> count [ sess ) { \n",
        "77a78,79\n> #include -> = list -> next ; \n>  = = NULL ; \n97a100\n> #include \"cgc_service = cur -> next ; \n109c112\n<     \n---\n> if ( msg -> mid < msg || msg -> count > sess ) { \n",
        "77a78,83\n> if ( ! new_s -> sid != sizeof ) { \n>  ( cur overflow , sizeof ( : : sizeof ) ; \n> return NULL ; \n> \n>  } \n> \n97a104,108\n> if ( ! new_s -> next != sizeof ) { \n>  ( cur ) ; \n> return - EINVAL ; \n>  } \n> \n109c120\n<     \n---\n> if ( msg -> mid < msg || msg -> count [ sess -> count ] ) { \n",
        "77a78\n> \n97a99\n> \n109c111\n<     \n---\n> \n",
        "77a78,83\n> if ( ! new_s -> sid != sizeof ) { \n>  ( cur ) ; \n>  = NULL ; \n> break ; \n>  } \n> return NULL ; \n97a104,107\n> \t \t \t \n>  ( idx , free ) ; \n> \t \t else \n> \t \t \t return - EINVAL ; \n109c119\n<     \n---\n> if ( msg -> mid > sess || sess -> count [ msg -> mid ) { \n",
        "77a78,79\n> #include -> = list ; \n>  ( ( cur ) ; \n97a100,102\n> #include \"cgc_service = cur ; \n>  ( = cur ; \n> \n109c114\n<     \n---\n> if ( msg -> mid < msg || sess -> count [ msg -> mid ) { \n",
        "77a78,82\n> if ( ! node -> sid == \n>  ) { \n>  ( cur ) ; \n> return - EINVAL ; \n>  } \n97a103,107\n> \t \t \t \n>  ( idx ) ; \n> \t \t else \n> \t \t \t return - EINVAL ; \n> \n109c119\n<     \n---\n> if ( msg -> mid == sess && sess -> received [ msg -> mid ) { \n",
        "77a78,79\n> #include -> = list ; \n> goto NULL ; \n97a100,101\n> \t \t \t \n>  ( idx ) ; \n109c113,114\n<     \n---\n> \n> \n",
        "77a78\n> \t \t \t \n97a99\n> \t \t \t \n109c111,112\n<     \n---\n> if ( msg -> mid < msg / sizeof ) { \n> \n",
        "77a78,80\n> #include -> = list ; \n>  ( ( cur ) ; \n> \n97a101,102\n> #include \"cgc_service = 0 ; \n>  ( = cur ; \n109c114\n<     \n---\n> if ( msg -> mid < msg || msg -> count [ sess ) { \n"
      ]
    }
  ],
  "comps": 3,
  "failed_comps": 48,
  "passed_tests": 6,
  "failed_tests": 2,
  "duration": 39.736243,
  "error": "Return code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\n"
}