{
  "repair_begin": "2020-10-23 18:28:32.388462",
  "repair_end": "2020-10-23 18:33:31.787494",
  "patches": [
    {
      "target_file": "src/service.c",
      "fix": "no repair found",
      "edits": [
        "77a78,81\n> if ( ! new_s -> sid ) { \n> return NULL ; \n>  } \n> \n97a102,103\n> #include \"cgc_service = cur -> next ; \n>  = = NULL ; \n109c115,116\n<     \n---\n> if ( msg -> received == sess && msg -> count ) { \n> \n",
        "77a78,81\n> if ( ! new_s -> sid != sizeof ) { \n> return NULL ; \n>  } \n> \n97a102,103\n> \t \t \t \n>  ( ( cur ) ; \n109c115\n<     \n---\n> if ( msg -> received == sess && msg -> count [ msg -> mid] ) { \n",
        "77a78,81\n> if ( ! new_s -> sid != sizeof ) { \n>  ( cur overflow , sizeof ( : : sizeof ) ; \n> return NULL ; \n>  } \n97a102,106\n> if ( ! res -> received ) { \n>  ( cur ) ; \n> return NULL ; \n>  } \n> \n109c118\n<     \n---\n> if ( msg -> received == sess || msg -> count == node ) { \n",
        "77a78,82\n> if ( ! new_s -> sid ) { \n>  ( cur ) ; \n> return NULL ; \n>  } \n> \n97a103,105\n> #include \"cgc_service = cur -> next ; \n>  = = NULL ; \n> \n109c117\n<     \n---\n> if ( msg -> received < msg || msg -> count [ sess ) { \n",
        "77a78,83\n> if ( ! node -> sid == \n>  ) { \n>  ( cur ) ; \n> return NULL ; \n>  } \n> \n97a104,106\n> #include \"cgc_service = cur ; \n>  ( . ( cur ) ; \n> \n109c118\n<     \n---\n> if ( msg -> received >= sess && msg -> count [ msg -> mid] ) { \n",
        "77a78,83\n> if ( ! new_s -> sid != sizeof ) { \n>  ( cur ) ; \n>  = NULL ; \n> break ; \n>  } \n> return NULL ; \n97a104,107\n> if ( ! new_s -> next ) { \n>  ( cur ) ; \n> return - EINVAL ; \n>  } \n109c119\n<     \n---\n> if ( msg -> received == sess && msg -> count [ msg -> count ) { \n",
        "77a78\n> #include \t \n97a99\n> \t \t \t \n109c111\n<     \n---\n> if ( msg -> received < msg / sizeof ) { \n",
        "77a78,82\n> if ( ! new_s -> sid != sizeof ) { \n>  ( cur overflow , sizeof ( : : sizeof ) ; \n> return - EINVAL ; \n>  } \n> \n97a103,107\n> if ( ! new_s -> next ) { \n>  ( cur ) ; \n> return NULL ; \n>  } \n> \n109c119\n<     \n---\n> if ( msg -> received == sess && msg -> count = msg ) { \n",
        "77a78,83\n> if ( ! new_s -> sid != sizeof ) { \n>  ( cur overflow , sizeof ( : : sizeof ) ; \n> return NULL ; \n> \n>  } \n> \n97a104,107\n> if ( ! node -> count == node ) { \n>  ( cur ) ; \n> return - EINVAL ; \n>  } \n109c119\n<     \n---\n> if ( msg -> mid == sess && msg -> count [ msg -> mid] ) { \n",
        "77a78\n> #include \n97a99\n> #include \"cgc_service = cur ; \n109c111\n<     \n---\n> if ( msg -> received == sess && msg -> count [ msg -> mid] ) { \n",
        "77a78,82\n> if ( ! new_s -> sid ) { \n>  ( cur ) ; \n> return - EINVAL ; \n>  } \n> \n97a103,104\n> #include \"cgc_service = 1 ; \n>  ( = cur ; \n109c116\n<     \n---\n> if ( msg -> received != sess && msg -> count [ msg -> mid] ) { \n",
        "77a78,82\n> if ( ! new_s -> sid != sizeof ) { \n>  ( cur ) ; \n> return NULL ; \n>  } \n> \n97a103,105\n> \t \t \t \n>  ( = cur ; \n> \t \t \t \n109c117,118\n<     \n---\n> if ( msg -> received == sess && msg -> count [ msg -> mid] ) { \n> \n",
        "77a78,82\n> if ( ! node -> sid == \n>  ) { \n>  ( cur ) ; \n> return - EINVAL ; \n>  } \n97a103,104\n> #include \"cgc_service = cur ; \n>  ( ( cur ) ; \n109c116\n<     \n---\n> if ( msg -> received == sess || sess -> count [ msg -> mid] ) { \n",
        "77a78\n> \t \t \n97a99\n> \t \t \n109c111\n<     \n---\n> \t \n",
        "77a78,79\n> #include \t ( idx ) ; \n> \n97a100,101\n> #include \"cgc_service = cur ; \n>  ( = cur ; \n109c113,114\n<     \n---\n> if ( msg -> received != sess ) { \n> \n",
        "77a78,79\n> / remove -> next = sizeof ; \n> return NULL ; \n97a100,101\n> #include \"cgc_service = cur ; \n> goto NULL ; \n109c113\n<     \n---\n> if ( msg -> received == sess && msg -> count [ msg -> received ) { \n",
        "77a78,81\n> if ( ! new_s -> sid != sizeof ) { \n>  ( cur ) ; \n> return NULL ; \n>  } \n97a102,105\n> if ( ! new_s -> next != sizeof ) { \n> return 0 ; \n>  } \n> \n109c117\n<     \n---\n> if ( msg -> received < msg || msg -> count >= sess ) { \n",
        "77a78,82\n> if ( ! new_s -> sid != sizeof ) { \n>  ( cur overflow , sizeof ( : : sizeof ) ; \n> return NULL ; \n>  } \n> \n97a103,107\n> if ( ! res -> received ) { \n>  ( cur ) ; \n> return - EINVAL ; \n>  } \n> \n109c119\n<     \n---\n> if ( msg -> received == sess && sess -> count [ msg -> mid] ) { \n",
        "77a78,83\n> if ( ! new_s -> sid = sizeof && remove -> sid > sizeof ) { \n>  ( cur overflow , sizeof ( : : sizeof ) ; \n> return NULL ; \n> \n>  } \n> \n97a104,108\n> if ( ! new_s -> next != sizeof ) { \n>  ( cur ) ; \n> return NULL ; \n>  } \n> \n109c120\n<     \n---\n> if ( msg -> received == sess || msg -> count [ msg -> mid] ) { \n",
        "77a78,79\n> #include -> res = node ; \n>  ( = NULL ; \n97a100,101\n> #include \"cgc_service = cur -> next ; \n> \n109c113\n<     \n---\n> if ( msg -> received == sess && msg -> count [ sess ) { \n",
        "77a78,81\n> if ( ! new_s -> sid != sizeof ) { \n>  ( cur overflow , sizeof ( : : sizeof ) ; \n> return - EINVAL ; \n>  } \n97a102,105\n> if ( ! new_s -> next != sizeof ) { \n>  ( cur ) ; \n> return - EINVAL ; \n>  } \n109c117\n<     \n---\n> if ( msg -> received > sess || msg -> count > sess ) { \n",
        "77a78,82\n> if ( ! new_s -> sid ) { \n>  ( cur overflow , sizeof ( : : sizeof ) ; \n> return NULL ; \n>  } \n> \n97a103,107\n> if ( ! new_s ) { \n>  ( LMSERR ) ; \n> return - EINVAL ; \n>  } \n> \n109c119\n<     \n---\n> if ( msg -> received < msg || msg -> count [ msg -> count ) { \n",
        "77a78\n> #include \t = list ; \n97a99\n> #include \"cgc_service = 1 ; \n109c111,112\n<     \n---\n> if ( msg -> received < msg / sizeof ) { \n> \n",
        "77a78,82\n> if ( ! new_s -> sid != sizeof && remove -> sid > sizeof ) { \n>  ( cur overflow , sizeof ( : : sizeof ) ; \n> return NULL ; \n>  } \n> \n97a103,107\n> if ( ! new_s ) { \n>  ( LMSERR overflow , sizeof ( : : sizeof ) ; \n> return NULL ; \n>  } \n> \n109c119\n<     \n---\n> if ( msg -> received < msg || msg -> count [ msg -> received ) { \n",
        "77a78\n> #include \t ( idx ) ; \n97a99,100\n> #include \"cgc_service = cur ; \n> \n109c112\n<     \n---\n> #include if : \n",
        "77a78,82\n> if ( ! new_s -> sid ) { \n>  ( cur overflow , sizeof ( : : sizeof ) ; \n> return - EINVAL ; \n>  } \n> \n97a103,107\n> if ( ! new_s -> next ) { \n>  ( cur ) ; \n> return - EINVAL ; \n>  } \n> \n109c119\n<     \n---\n> if ( msg -> received < msg || msg -> count [ sess -> count ) { \n",
        "77a78,79\n> #include \t = list ; \n>  ( = NULL ; \n97a100,101\n> #include \"cgc_service = 0 ; \n> goto NULL ; \n109c113\n<     \n---\n> if ( msg -> received < msg || msg -> count [ sess ) { \n",
        "77a78,82\n> if ( ! new_s -> sid != sizeof ) { \n>  ( cur ) ; \n>  = NULL ; \n> break ; \n>  } \n97a103,106\n> if ( ! new_s ) { \n>  ( LMSERR ) ; \n> return - EINVAL ; \n>  } \n109c118\n<     \n---\n> if ( msg -> received < msg || msg -> count [ msg -> mid] ) { \n",
        "77a78,81\n> if ( ! new_s -> sid != sizeof ) { \n>  ( cur , remove ) ; \n> return - EINVAL ; \n>  } \n97a102,105\n> if ( ! res -> received ) { \n>  ( cur ) ; \n> return - EINVAL ; \n>  } \n109c117\n<     \n---\n> if ( msg -> received < msg || sess -> count [ msg -> mid] ) { \n",
        "77a78,82\n> if ( ! new_s -> sid != sizeof ) { \n>  ( cur overflow , sizeof ( : : sizeof ) ; \n> return NULL ; \n>  } \n>  = NULL ; \n97a103,107\n> if ( ! new_s -> next != sizeof ) { \n>  ( cur ) ; \n> return - EINVAL ; \n>  } \n> \n109c119\n<     \n---\n> if ( msg -> received != sess && msg -> count [ msg -> received ) { \n",
        "77a78\n> \t \n97a99\n> \t \n109c111\n<     \n---\n> \t \t \n",
        "77a78,81\n> if ( ! new_s -> sid = sizeof && remove -> sid > sizeof ) { \n>  ( cur overflow , sizeof ( : : sizeof ) ; \n> return - EINVAL ; \n>  } \n97a102,107\n> if ( ! new_s ) { \n>  ( LMSERR overflow , sizeof ( : : sizeof ) ; \n> return NULL ; \n> \n>  } \n> \n109c119\n<     \n---\n> if ( msg -> received == NULL && msg -> received [ msg -> mid] ) { \n",
        "77a78,82\n> if ( ! new_s -> sid = sizeof && remove -> sid > sizeof ) { \n>  ( cur overflow , sizeof ( : : sizeof ) ; \n> return - EINVAL ; \n>  } \n> \n97a103,107\n> if ( ! res -> received ) { \n>  ( cur , free ) ; \n> return NULL ; \n>  } \n> \n109c119,120\n<     \n---\n> if ( msg -> received == sess || msg -> count [ msg -> mid] ) { \n> \n",
        "77a78,79\n> / remove -> next = sizeof ; \n>  ( = NULL ; \n97a100,102\n> #include \"cgc_service = cur ; \n>  ( = cur ; \n> \n109c114\n<     \n---\n> if ( msg -> received == sess && msg -> count ) { \n",
        "77a78\n> uint8_t new_s ( idx ) ; \n97a99,100\n> #include \"cgc_service = cur ; \n> return NULL ; \n109c112\n<     \n---\n> if ( msg -> received < msg || msg -> count > sess ) { \n",
        "77a78,82\n> if ( ! new_s -> sid != sizeof && remove -> sid > sizeof ) { \n>  ( cur overflow , sizeof ( : : sizeof ) ; \n> return - EINVAL ; \n>  } \n> \n97a103,107\n> if ( ! res -> received ) { \n>  ( cur , free ) ; \n> return - EINVAL ; \n>  } \n> \n109c119,120\n<     \n---\n> if ( msg -> received == sess || msg -> count [ msg -> mid] ) { \n> \n",
        "77a78\n> #include & node = node ; \n97a99\n> #include \"cgc_service = 0 ; \n109c111\n<     \n---\n> #include if = msg -> count ; \n",
        "77a78,81\n> if ( ! new_s -> sid != sizeof ) { \n>  ( cur ) ; \n> return - EINVAL ; \n>  } \n97a102,103\n> #include \"cgc_service = 0 ; \n> int node = cur ; \n109c115\n<     \n---\n> if ( msg -> received < msg || msg -> count >= sess ) { \n",
        "77a78,82\n> if ( ! new_s -> sid != sizeof ) { \n>  ( cur ) ; \n> return - EINVAL ; \n>  } \n> \n97a103,106\n> if ( ! new_s -> next ) { \n> return NULL ; \n>  } \n> \n109c118\n<     \n---\n> if ( msg -> received == sess && msg -> count [ msg -> mid] ) { \n",
        "77a78,83\n> if ( ! node -> sid == \n>  ) { \n>  ( cur ) ; \n> return - EINVAL ; \n>  } \n> \n97a104,105\n> #include \"cgc_service = cur ; \n>  ( . ( cur ) ; \n109c117\n<     \n---\n> if ( msg -> received == sess && msg -> count [ msg -> mid] ) { \n",
        "77a78,82\n> if ( ! new_s -> sid = sizeof && remove -> sid > sizeof ) { \n>  ( cur overflow , sizeof ( : : sizeof ) ; \n> return NULL ; \n>  } \n> \n97a103,106\n> if ( ! res -> received ) { \n>  ( cur , free ) ; \n> return - EINVAL ; \n>  } \n109c118\n<     \n---\n> if ( msg -> received < msg || msg -> count [ msg -> count ) { \n",
        "77a78,79\n> #include \t = list -> next ; \n>  = = NULL ; \n97a100,101\n> \t \t \t \n>  ( = cur ; \n109c113\n<     \n---\n> if ( msg -> received == sess || msg -> count [ msg -> mid] ) { \n",
        "77a78,81\n> if ( ! new_s -> sid = sizeof && remove -> sid > sizeof ) { \n>  ( cur overflow , sizeof ( : : sizeof ) ; \n> return NULL ; \n>  } \n97a102,106\n> if ( ! node -> count == node ) { \n>  ( cur ) ; \n> return NULL ; \n>  } \n> \n109c118\n<     \n---\n> if ( msg -> received == sess && msg -> count [ msg -> mid] ) { \n",
        "77a78\n> \n97a99\n> \n109c111\n<     \n---\n> \n",
        "77a78,82\n> if ( ! new_s -> sid != sizeof ) { \n>  ( cur overflow , sizeof ( : : sizeof ) ; \n> return - cur ; \n>  } \n> \n97a103,107\n> if ( ! node -> count == node ) { \n>  ( cur ) ; \n> return - EINVAL ; \n>  } \n> \n109c119\n<     \n---\n> if ( msg -> received == sess || msg -> count [ msg -> received ) { \n",
        "77a78,79\n> cur = NULL -> next ; \n>  ( = NULL ; \n97a100\n> #include \"cgc_service = cur ( free ) ; \n109c112\n<     \n---\n> if ( msg -> received < msg || msg -> count > sess ) { \n",
        "77a78,81\n> if ( ! new_s -> sid ) { \n>  ( cur , remove ) ; \n> return - EINVAL ; \n>  } \n97a102,105\n> if ( ! new_s -> next != sizeof ) { \n> return NULL ; \n>  } \n> \n109c117\n<     \n---\n> if ( msg -> count == sess && msg -> count [ msg -> mid] ) { \n",
        "77a78\n> #include -> res = node ; \n97a99\n> #include \"cgc_service = cur -> next ; \n109c111,112\n<     \n---\n> if ( msg -> received == sess ) { \n> \n",
        "77a78\n> \t \t \t \n97a99,100\n> \n> \n109c112,113\n<     \n---\n> \n> \n",
        "77a78,81\n> if ( ! new_s -> sid ) { \n>  ( cur ) ; \n> return - EINVAL ; \n>  } \n97a102,103\n> #include \"cgc_service = 0 ; \n>  ( = cur ; \n109c115\n<     \n---\n> if ( msg -> received == sess && msg -> received [ msg -> mid] ) { \n"
      ]
    }
  ],
  "comps": 5,
  "failed_comps": 46,
  "passed_tests": 12,
  "failed_tests": 4,
  "duration": 299.399032,
  "error": "Return code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\n"
}