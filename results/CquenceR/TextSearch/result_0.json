{
  "repair_begin": "2020-10-19 13:27:48.537620",
  "repair_end": "2020-10-19 13:28:58.223232",
  "patches": [
    {
      "target_file": "src/trex.c",
      "fix": "no repair found",
      "edits": [
        "70c70\n<     \n---\n> \t if ( g_epsilon_loop < 0 || g_epsilon_loop > sizeof ) \n163a164\n> switch ( * , * ) ; \n",
        "70c70\n<     \n---\n> \t \t if ( \"\\n\" , state , 0 ) ; \n163a164\n> switch ( * rpn , obj ) { \n",
        "70c70,72\n<     \n---\n> if ( g_epsilon_loop < 0 || g_epsilon_loop > sizeof ) { \n> \t \t return - EINVAL ; \n> \n163a166,170\n> if ( ! switch ( * ) { \n>  ( * , i ) ; \n> return 0 ; \n>  } \n> \n",
        "70c70,71\n<     \n---\n> if ( g_epsilon_loop < 0 || g_epsilon_loop > sizeof ) { \n> \t \n163a165\n> switch ( * rpn , obj , match_type ) ; \n",
        "70c70,71\n<     \n---\n> if ( g_epsilon_loop < 0 || state -> id > cgc_strlen ) { \n> \n163a165,169\n> switch ( ! switch ( i ) ) { \n> return match_len ; \n> \n>  } \n> \n",
        "70c70,73\n<     \n---\n> if ( g_epsilon_loop < 0 || g_epsilon_loop > sizeof ) { \n> \t \t return - EINVAL ; \n> \t } \n> \n163a167\n> switch ( ! switch ( i ) && ( ( * rpn , str ) == 0 ) \n",
        "70c70\n<     \n---\n> #include -> = NULL ; \n163a164,165\n> switch ( ! switch ( i ) ) { \n> \n",
        "70c70,74\n<     \n---\n> if ( g_epsilon_loop ) { \n>  ( str overflow , state ( : : 0 ) ; \n> return 0 ; \n>  } \n> \n163a168,172\n> switch ( ! switch ( i ) ) { \n>  ( * , i , i ) ; \n> return 0 ; \n>  } \n> \n",
        "70c70,73\n<     \n---\n> if ( g_epsilon_loop [ state -> id ) { \n>  ( str ) ; \n> return - EINVAL ; \n>  } \n163a167,171\n> switch ( ! switch ( i ) ) { \n>  ( * , i ) ; \n> return NULL ; \n>  } \n> \n",
        "70c70\n<     \n---\n> #include -> ( str ) ; \n163a164\n> switch ( * rpn , obj ) ; \n",
        "70c70\n<     \n---\n> if ( g_epsilon_loop < 0 || g_epsilon_loop > sizeof > str ) \n163a164\n> switch ( * rpn , 1 , i ) { \n",
        "70c70\n<     \n---\n> \t if ( g_epsilon_loop < 0 || state -> id > cgc_strlen ) \n163a164\n> switch ( * rpn , \" % s\" , match_type_e ) ; \n",
        "70c70\n<     \n---\n> if ( g_epsilon_loop < 0 || g_epsilon_loop > sizeof < str ) \n163a164,167\n> switch ( ! switch ( i ) ) { \n> return match_len ; \n>  } \n> \n",
        "70c70\n<     \n---\n> \t \n163a164\n> switch ( * rpn ) ; \n",
        "70c70\n<     \n---\n> #include -> = NULL ( state ) ; \n163a164,165\n> switch ( * rpn ) { \n> \n",
        "70c70,71\n<     \n---\n> if ( g_epsilon_loop < 0 || g_epsilon_loop > sizeof ) { \n> \n163a165\n> switch ( g_states_checked < i ) { \n",
        "70c70\n<     \n---\n> if ( ! state -> is_accepting_state == 1 && g_epsilon_loop ( state ) ) \n163a164,167\n> \t if ( ! switch ( * ) { \n> \t \t \t return - EINVAL ; \n> \t \t } \n> \n",
        "70c70,72\n<     \n---\n> if ( g_epsilon_loop < 0 || g_epsilon_loop > sizeof ) { \n> \t \t return - EINVAL ; \n> \t } \n163a166,170\n> switch ( ! switch ( i ) ) { \n>  ( * , i ) ; \n> return 0 ; \n>  } \n> \n",
        "70c70,72\n<     \n---\n> if ( g_epsilon_loop < 0 || state -> id > cgc_strlen ) { \n> \t \t return - EINVAL ; \n> \t } \n163a166,169\n> switch ( ! switch ( i ) ) { \n>  ( * , i ) ; \n> return 0 ; \n>  } \n",
        "70c70,71\n<     \n---\n> if ( g_epsilon_loop < 0 || g_epsilon_loop > sizeof ) { \n> \t \n163a165\n> switch ( * ) ; \n",
        "70c70,73\n<     \n---\n> if ( g_epsilon_loop < 0 || state -> id > cgc_strlen ) { \n> \t \t return - EINVAL ; \n> \t } \n> \n163a167,171\n> if ( ! switch ( * ) { \n>  ( * , i , i ) ; \n> return 0 ; \n>  } \n> \n",
        "70c70,73\n<     \n---\n> if ( g_epsilon_loop < 0 || g_epsilon_loop > sizeof ) { \n> \t \t return - EINVAL ; \n> \t } \n> \n163a167,171\n> switch ( ! switch ( i ) ) { \n>  ( * ) ; \n> return NULL ; \n>  } \n> \n",
        "70c70\n<     \n---\n> if ( g_epsilon_loop < 0 || g_epsilon_loop >= sizeof ) \n163a164\n> switch ( * rpn , 0 ) ; \n",
        "70c70,75\n<     \n---\n> if ( g_epsilon_loop ) { \n>  ( str , state ) ; \n>  = NULL ; \n> break ; \n>  } \n> \n163a169,172\n> switch ( ! switch ( i ) ) { \n> if ( ! str -> is_accepting_state ) { \n> return match_len ; \n> \n",
        "70c70\n<     \n---\n> if ( g_epsilon_loop < 0 || g_epsilon_loop > sizeof ) \n163a164\n> switch ( * rpn , 1 ) ; \n",
        "70c70,72\n<     \n---\n> if ( g_epsilon_loop < 0 || g_epsilon_loop > sizeof ) { \n> \t \t return - EINVAL ; \n> \t } \n163a166,171\n> switch ( ! switch ( i ) ) { \n> if ( ! str -> is_accepting_state ) { \n> return match_len ; \n> \n>  } \n> \n",
        "70c70\n<     \n---\n> if ( g_epsilon_loop < 0 || g_epsilon_loop > sizeof > str ) \n163a164\n> switch ( ! switch ( i ) ) \n",
        "70c70,71\n<     \n---\n> \t if ( g_epsilon_loop < 0 || state -> id > cgc_strlen ) { \n> \t \n163a165,167\n> \t if ( ! switch ( * ) { \n> \t \t \t return - EINVAL ; \n> \t \t } \n",
        "70c70,71\n<     \n---\n> if ( g_epsilon_loop < 0 || state -> id > cgc_strlen ) { \n> \t \n163a165,169\n> switch ( ! switch ( i ) ) { \n>  ( * ) ; \n> return 0 ; \n>  } \n> \n",
        "70c70,73\n<     \n---\n> if ( g_epsilon_loop ) { \n>  ( str overflow , state ( : : 0 ) ; \n> return 0 ; \n>  } \n163a167,170\n> switch ( ! switch ( i ) ) { \n>  ( * , i , i ) ; \n> return 0 ; \n>  } \n",
        "70c70\n<     \n---\n> \t \t \n163a164\n> switch ( * rpn , 1 , i ) ; \n",
        "70c70,73\n<     \n---\n> if ( g_epsilon_loop ) { \n>  ( str overflow , state ( : : 0 ) ; \n> return 0 ; \n>  } \n163a167,170\n> if ( ! switch ( * ) { \n>  ( * , i , i ) ; \n> return 0 ; \n>  } \n",
        "70c70,74\n<     \n---\n> if ( g_epsilon_loop ) { \n>  ( str overflow , state ( : : 0 ) ; \n> return - EINVAL ; \n>  } \n> \n163a168,173\n> switch ( ! switch ( i ) ) { \n>  ( * ) ; \n>  = NULL ; \n> break ; \n>  } \n> \n",
        "70c70\n<     \n---\n> \t \t if ( & state , state ) ; \n163a164\n> switch ( g_states_checked < 0 || * rpn > sizeof ) { \n",
        "70c70\n<     \n---\n> if ( g_epsilon_loop < 0 || state -> id > cgc_strlen ) \n163a164\n> switch ( * rpn , rt ) { \n",
        "70c70,75\n<     \n---\n> if ( g_epsilon_loop ) { \n>  ( str , state ) ; \n>  = NULL ; \n> break ; \n>  } \n> return ret ; \n163a169,173\n> switch ( ! switch ( i ) ) { \n>  ( * , i , i ) ; \n> return NULL ; \n>  } \n> \n",
        "70c70\n<     \n---\n> if ( g_epsilon_loop < 0 || g_epsilon_loop >= sizeof ) \n163a164\n> switch ( * rpn , 4 ) { \n",
        "70c70,71\n<     \n---\n> if ( g_epsilon_loop < 0 || state -> id > cgc_strlen ) { \n> \n163a165\n> switch ( * rpn , 4 , * ) ; \n",
        "70c70\n<     \n---\n> \t \t if ( & state , state , state ) ; \n163a164\n> switch ( ! switch ( i ) && ( < i ) { \n",
        "70c70,73\n<     \n---\n> if ( g_epsilon_loop [ state -> id ) { \n> return match_len ; \n>  } \n> \n163a167,168\n> if ( ! switch ( * ) && ! switch ( * ) { \n> \n",
        "70c70,74\n<     \n---\n> if ( g_epsilon_loop ) { \n>  ( str , state ) ; \n>  = NULL ; \n> break ; \n>  } \n163a168,172\n> switch ( ! switch ( i ) ) { \n>  ( * , obj ) ; \n> return 0 ; \n>  } \n> \n",
        "70c70\n<     \n---\n> if ( g_epsilon_loop < 0 || g_epsilon_loop > sizeof ) { \n163a164\n> switch ( g_states_checked < 4 ) { \n",
        "70c70,74\n<     \n---\n> if ( g_epsilon_loop ) { \n>  ( str overflow , state ( : : 0 ) ; \n> return 0 ; \n>  } \n> \n163a168,172\n> switch ( ! switch ( i , i ) ) { \n>  ( * ) ; \n> return 0 ; \n>  } \n> \n",
        "70c70\n<     \n---\n> \n163a164\n> switch ( * rpn ) { \n",
        "70c70,74\n<     \n---\n> if ( g_epsilon_loop [ state -> id ) { \n>  ( str ) ; \n> return - EINVAL ; \n>  } \n> \n163a168,172\n> switch ( ! switch ( i ) ) { \n>  ( * , 0 ) ; \n> return 0 ; \n>  } \n> \n",
        "70c70\n<     \n---\n> if ( g_epsilon_loop < 0 || g_epsilon_loop ( state ) ) \n163a164\n> \n",
        "70c70,71\n<     \n---\n> if ( g_epsilon_loop < 0 || state -> id > cgc_strlen ) { \n> \t \n163a165\n> switch ( ! switch ( i ) && ( ( * rpn , str ) ) \n",
        "70c70\n<     \n---\n> if ( g_epsilon_loop < 0 || state -> id > cgc_strlen ) \n163a164\n> switch ( ! switch ( i ) ) { \n",
        "70c70\n<     \n---\n> if ( g_epsilon_loop < 0 || g_epsilon_loop > sizeof ) \n163a164\n> switch ( * rpn , 1 ) { \n",
        "70c70,71\n<     \n---\n> if ( g_epsilon_loop < 0 || g_epsilon_loop > sizeof ) { \n> \n163a165\n> switch ( * rpn , 0 , match_type ) ; \n"
      ]
    }
  ],
  "comps": 2,
  "failed_comps": 49,
  "passed_tests": 2,
  "failed_tests": 1,
  "duration": 69.685612,
  "error": "Return code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\n"
}