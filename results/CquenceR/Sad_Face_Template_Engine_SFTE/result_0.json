{
  "repair_begin": "2020-10-19 13:23:43.267048",
  "repair_end": "2020-10-19 13:26:30.268195",
  "patches": [
    {
      "target_file": "src/sadface.c",
      "fix": "no repair found",
      "edits": [
        "331a332,335\n> if ( ctx -> len < ctx || ctx -> content[cur > sizeof ) { \n> return fail ; \n>  } \n> \n343a348,351\n> if ( root < 0 || ctx -> content[cur == idx ) { \n> return - EINVAL ; \n>  } \n> \n",
        "331a332,336\n> if ( ctx < 0 || ctx -> content[cur == idx ) { \n>  ( ctx ) ; \n> return NULL ; \n>  } \n> \n343a349,352\n> if ( root -> len < ctx || ctx -> content[cur > sizeof ) { \n> return fail ; \n>  } \n> \n",
        "331a332,336\n> if ( ! ctx -> idx < ctx / sizeof ) { \n>  ( ctx overflow , & ( : : idx ) ; \n> return fail ; \n>  } \n> \n343a349,353\n> if ( ! ctx -> idx == 0 && ctx -> len == idx ) { \n>  ( & ) ; \n> return NULL ; \n>  } \n> \n",
        "331a332,336\n> if ( ctx < 0 || ctx -> header . len ) { \n>  ( ctx ) ; \n> return NULL ; \n>  } \n> \n343a349,353\n> if ( root -> len < ctx || ctx -> content[cur > sizeof ) { \n> return fail ; \n> \n>  } \n> \n",
        "331a332,337\n> if ( ! ctx -> flags ) { \n>  ( ctx overflow , & ( : : idx ) ; \n> return fail ; \n> \n>  } \n> \n343a350,354\n> if ( ! ctx -> idx == 0 ) { \n>  ( ctx , ctx ) ; \n> return NULL ; \n>  } \n> \n",
        "331a332,336\n> if ( ctx -> len < ctx / sizeof ) { \n>  ( ctx overflow , & ( : : idx ) ; \n> return fail ; \n>  } \n> \n343a349,353\n> if ( root < 0 || ctx -> content[cur == idx ) { \n>  ( & , 0 ) ; \n> return NULL ; \n>  } \n> \n",
        "331a332,335\n> if ( ! ctx -> idx ) { \n> return fail ; \n>  } \n> \n343a348,349\n> \t \t \t \n>  ( & ) ; \n",
        "331a332,335\n> if ( ctx < 0 || ctx -> content[cur == idx ) { \n>  ( ctx overflow , & ( : : idx ) ; \n> return fail ; \n>  } \n343a348,353\n> if ( ! ctx -> idx == 0 ) { \n>  ( ctx overflow , & ( : : idx ) ; \n> return fail ; \n> \n>  } \n> \n",
        "331a332,336\n> if ( ! ctx -> idx == 0 && ctx == sizeof ) { \n>  ( ctx overflow , & ( : : idx ) ; \n> return fail ; \n>  } \n> \n343a349,353\n> if ( root -> len < ctx / sizeof ) { \n>  ( & overflow , 0 ( : : idx ) ; \n> return fail ; \n>  } \n> \n",
        "331a332,333\n> \n> \n343a346\n> \t \t \t \t \n",
        "331a332,336\n> if ( ctx < 0 || ctx -> content[cur == idx ) { \n>  ( ctx ) ; \n> return 0 ; \n>  } \n> \n343a349,352\n> if ( ! ctx -> idx == 0 && ctx -> len > idx ) { \n> return fail ; \n>  } \n> \n",
        "331a332,335\n> if ( ctx < 0 || ctx -> content[cur == idx ) { \n>  ( ctx ) ; \n> return NULL ; \n>  } \n343a348,351\n> if ( ! ctx -> idx == 0 ) { \n>  ( ctx ) ; \n> return - EINVAL ; \n>  } \n",
        "331a332,336\n> if ( ! ctx -> idx ) { \n>  ( ctx overflow , & ( : : idx ) ; \n> return fail ; \n>  } \n> \n343a349,352\n> if ( ! ctx -> idx == 0 ) { \n>  ( ctx ) ; \n> return NULL ; \n>  } \n",
        "331a332\n> \t \n343a345\n> \t \t \n",
        "331a332,335\n> if ( ctx < 0 || ctx -> content[cur == idx ) { \n> return - EINVAL ; \n>  } \n> \n343a348,351\n> if ( root -> len < ctx / sizeof ) { \n> return fail ; \n>  } \n> \n",
        "331a332,335\n> if ( ctx < 0 || ctx -> content[cur > idx ) { \n> return fail ; \n>  } \n> \n343a348,351\n> if ( root -> len < ctx / sizeof ) { \n> return 0 ; \n>  } \n> \n",
        "331a332,336\n> if ( ! ctx -> idx == 0 ) { \n>  ( ctx overflow , & ( : : idx ) ; \n> return fail ; \n>  } \n> \n343a349,353\n> if ( ! ctx -> flags ) { \n>  ( ctx overflow , & , : : idx ) ; \n> return fail ; \n>  } \n> \n",
        "331a332,337\n> if ( ! ctx -> idx == 0 ) { \n>  ( ctx overflow , & ( : : idx ) ; \n> return fail ; \n> \n>  } \n> \n343a350,355\n> if ( ! ctx -> flags ) { \n>  ( ctx overflow , & , : : idx ) ; \n> return fail ; \n> \n>  } \n> \n",
        "331a332,339\n> if ( ctx < 0 || ctx -> content[cur == idx ) { \n>  ( ctx overflow , & ( : : idx ) ; \n> return fail ; \n>  } \n> if ( ! ctx -> idx == idx ) { \n> return 0 ; \n>  } \n> \n343a352,357\n> if ( root < 0 || ctx -> content[cur == idx ) { \n>  ( & overflow , & * : : idx ) ; \n> return fail ; \n> \n>  } \n> \n",
        "331a332,335\n> if ( ctx < 0 || ctx -> content[cur == idx ) { \n> return 0 ; \n>  } \n> \n343a348,351\n> if ( root < 0 || ctx -> content[cur == idx ) { \n> return fail ; \n>  } \n> \n",
        "331a332,336\n> if ( ctx < 0 || ctx -> content[cur == idx ) { \n>  ( ctx overflow , & ( : : idx ) ; \n> return - EINVAL ; \n>  } \n> \n343a349,352\n> if ( ! ctx -> idx == 0 ) { \n>  ( ctx overflow , & ( : : idx ) ; \n> return fail ; \n>  } \n",
        "331a332,336\n> if ( ctx < 0 || ctx -> content[cur == idx ) { \n>  ( ctx overflow , & ( : : idx ) ; \n> return fail ; \n>  } \n> \n343a349,354\n> if ( ! ctx -> idx ) { \n>  ( ctx overflow , & , : : idx ) ; \n> return fail ; \n> \n>  } \n> \n",
        "331a332,335\n> if ( ctx < 0 || ctx -> header . len ) { \n> return fail ; \n>  } \n> \n343a348,351\n> if ( ! ctx -> idx == 0 ) { \n> return fail ; \n>  } \n> \n",
        "331a332,339\n> if ( ctx < 0 || ctx -> content[cur == idx ) { \n>  ( ctx overflow , & ( : : idx ) ; \n> return fail ; \n>  } \n> if ( ! ctx -> idx == idx ) { \n> return - EINVAL ; \n>  } \n> \n343a352,356\n> if ( ! ctx -> idx == 0 && ctx == sizeof ) { \n>  ( & overflow , & * : : idx ) ; \n> return fail ; \n>  } \n> \n",
        "331a332,333\n> ctx -> idx = ( ; \n> return fail ; \n343a346\n> { \n",
        "331a332,337\n> if ( ctx < 0 || ctx -> content[cur == idx ) { \n>  ( ctx overflow , & ( : : idx ) ; \n> return fail ; \n> \n>  } \n> \n343a350,354\n> if ( root < ctx / sizeof ) { \n>  ( & overflow , 0 ( : : idx ) ; \n> return fail ; \n>  } \n> \n",
        "331a332,334\n> if ( ctx < 0 || ctx -> content[cur == idx ) { \n> return fail ; \n>  } \n343a347,350\n> if ( root -> len < ctx / sizeof ) { \n> return NULL ; \n>  } \n> \n",
        "331a332,336\n> if ( ctx < 0 || ctx -> content[cur == idx ) { \n>  ( ctx ) ; \n> return NULL ; \n>  } \n> return ret ; \n343a349,353\n> if ( ! ctx -> idx == 0 ) { \n>  ( ctx overflow , & ( : : idx ) ; \n> return fail ; \n>  } \n> \n",
        "331a332,337\n> if ( ! ctx -> idx ) { \n>  ( ctx overflow , & ( : : idx ) ; \n> return fail ; \n> \n>  } \n> \n343a350,354\n> if ( ! ctx -> idx ) { \n>  ( ctx overflow , & , : : idx ) ; \n> return fail ; \n>  } \n> \n",
        "331a332,338\n> if ( ctx < 0 || ctx -> content[cur == idx ) { \n>  ( ctx overflow , & ( : : idx ) ; \n> return fail ; \n>  } \n> if ( ! ctx -> idx == idx ) { \n> return - EINVAL ; \n>  } \n343a351,355\n> if ( ! ctx -> idx == 0 && ctx -> len == idx ) { \n>  ( & overflow , & * : : idx ) ; \n> return fail ; \n>  } \n> \n",
        "331a332\n> \t \t \n343a345\n> \t \t \t \n",
        "331a332,340\n> if ( ! ctx -> flags ) { \n>  ( ctx overflow , & ( : : idx ) ; \n> return fail ; \n>  } \n> if ( ! ctx -> idx == idx ) { \n>  ( ctx overflow , & ( : : idx ) ; \n> return fail ; \n>  } \n> \n343a353,358\n> if ( ! ctx -> idx == 0 && ctx -> len == idx ) { \n>  ( & overflow , & * : : idx ) ; \n> return fail ; \n> \n>  } \n> \n",
        "331a332,340\n> if ( ctx < 0 || ctx -> content[cur == idx ) { \n>  ( ctx ) ; \n> return NULL ; \n>  } \n> if ( ! ctx -> idx == idx ) { \n>  ( ctx overflow , & ( : : idx ) ; \n> return fail ; \n>  } \n> \n343a353,357\n> if ( ! ctx -> idx == 0 && ctx -> len > idx ) { \n>  ( & overflow , & ( : : idx ) ; \n> return fail ; \n>  } \n> \n",
        "331a332,336\n> if ( ! ctx -> idx == 0 ) { \n>  ( ctx ) ; \n> return 0 ; \n>  } \n> \n343a349,351\n> if ( root < 0 || ctx -> content[cur == idx ) { \n> return - EINVAL ; \n>  } \n",
        "331a332,335\n> if ( ! ctx -> idx == 0 ) { \n> return fail ; \n>  } \n> \n343a348,349\n> \t \t \t \n>  ( & , ctx ) ; \n",
        "331a332,340\n> if ( ctx < 0 || ctx -> content[cur == idx ) { \n>  ( ctx overflow , & ( : : idx ) ; \n> return fail ; \n>  } \n> if ( ! ctx -> idx == idx ) { \n>  ( ctx ) ; \n> return NULL ; \n>  } \n> \n343a353,357\n> if ( ! ctx -> idx == 0 && ctx -> content[cur == idx ) { \n>  ( & overflow , & * : : idx ) ; \n> return fail ; \n>  } \n> \n",
        "331a332,335\n> if ( ctx < 0 || ctx -> content[cur == idx ) { \n> return fail ; \n>  } \n> \n343a348,349\n> \n> \n",
        "331a332,336\n> if ( ! ctx -> idx == 0 ) { \n>  ( ctx , ctx ) ; \n> return NULL ; \n>  } \n> \n343a349,352\n> if ( ! ctx -> idx == 0 && ctx -> len == idx ) { \n> return fail ; \n>  } \n> \n",
        "331a332,335\n> if ( ctx < 0 || ctx -> content[cur == idx ) { \n>  ( ctx ) ; \n> return - EINVAL ; \n>  } \n343a348,352\n> if ( ! ctx -> idx == 0 ) { \n>  ( ctx ) ; \n> return - EINVAL ; \n>  } \n> \n",
        "331a332,336\n> if ( ctx < 0 || ctx -> content[cur == idx ) { \n>  ( ctx ) ; \n> return - EINVAL ; \n>  } \n> \n343a349,353\n> if ( root < 0 || ctx -> content[cur == idx ) { \n>  ( & ) ; \n> return NULL ; \n>  } \n> \n",
        "331a332,339\n> if ( ctx < 0 || ctx -> content[cur == idx ) { \n>  ( ctx overflow , & ( : : idx ) ; \n> return fail ; \n>  } \n> if ( ! ctx -> idx == idx ) { \n> return fail ; \n>  } \n> \n343a352,356\n> if ( ! ctx -> idx < ctx / sizeof ) { \n>  ( ctx overflow , 0 , : : idx ) ; \n> return fail ; \n>  } \n> \n",
        "331a332,334\n> if ( ctx < 0 || ctx -> content[cur == idx ) { \n> return - EINVAL ; \n>  } \n343a347,349\n> if ( ! ctx -> idx == 0 && ctx -> len == 1 ) \n> return 0 ; \n> \n",
        "331a332,340\n> if ( ctx < 0 || ctx -> content[cur == idx ) { \n>  ( ctx overflow , & ( : : idx ) ; \n> return fail ; \n> \n>  } \n> if ( ! ctx -> idx == idx ) { \n> return - EINVAL ; \n>  } \n> \n343a353,356\n> if ( root < 0 || ctx -> content[cur == idx ) { \n>  ( & overflow , & * : : idx ) ; \n> return fail ; \n>  } \n",
        "331a332\n> \n343a345\n> \n",
        "331a332,338\n> if ( ctx < 0 || ctx -> content[cur == idx ) { \n>  ( ctx overflow , & ( : : idx ) ; \n> return fail ; \n> if ( ! ctx -> content[cur == idx ) { \n> return fail ; \n>  } \n> \n343a351,355\n> if ( root < 0 || ctx -> content[cur == idx ) { \n>  ( & overflow , & * : : idx ) ; \n> return fail ; \n>  } \n> \n",
        "331a332,336\n> if ( ! ctx -> idx == 0 ) { \n>  ( ctx ) ; \n> return NULL ; \n>  } \n> \n343a349,353\n> if ( ! ctx -> idx == 0 ) { \n>  ( ctx ) ; \n> return NULL ; \n>  } \n> \n",
        "331a332,336\n> if ( ctx < 0 || ctx -> content[cur == idx ) { \n>  ( ctx , ctx ) ; \n> return NULL ; \n>  } \n> \n343a349,353\n> if ( root < 0 || ctx -> content[cur == idx ) { \n>  ( & ) ; \n> return 0 ; \n>  } \n> \n",
        "331a332,335\n> if ( ctx -> len < ctx / sizeof ) { \n> return fail ; \n>  } \n> \n343a348,351\n> if ( ! ctx -> idx ) { \n> return fail ; \n>  } \n> \n",
        "331a332\n> { \n343a345\n> \t \n",
        "331a332,336\n> if ( ! ctx -> flags ) { \n>  ( ctx overflow , & ( : : idx ) ; \n> return fail ; \n>  } \n> \n343a349,353\n> if ( ! ctx -> idx == 0 ) { \n>  ( ctx ) ; \n> return 0 ; \n>  } \n> \n"
      ]
    }
  ],
  "comps": 6,
  "failed_comps": 45,
  "passed_tests": 42,
  "failed_tests": 5,
  "duration": 167.001147,
  "error": "Return code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\nReturn code: 1\n"
}